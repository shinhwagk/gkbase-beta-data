-- MySQL dump 10.13  Distrib 5.1.73, for redhat-linux-gnu (x86_64)
--
-- Host: localhost    Database: g_note
-- ------------------------------------------------------
-- Server version	5.1.73

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `g_note`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `g_note` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `g_note`;

--
-- Table structure for table `category`
--

DROP TABLE IF EXISTS `category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(200) DEFAULT NULL,
  `father_id` int(11) NOT NULL,
  `createdata` datetime NOT NULL,
  `updatedata` datetime NOT NULL,
  PRIMARY KEY (`id`),
  KEY `category_father_id` (`father_id`)
) ENGINE=MyISAM AUTO_INCREMENT=4915 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `category`
--

LOCK TABLES `category` WRITE;
/*!40000 ALTER TABLE `category` DISABLE KEYS */;
INSERT INTO `category` VALUES (2,'test',0,'2016-03-28 23:07:51','2016-03-28 23:07:51'),(4,'play',52,'2016-03-28 23:18:02','2016-03-28 23:18:02'),(5,'mysql',35,'2016-03-28 23:19:13','2016-03-28 23:19:13'),(6,'backup & recovery',5,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(7,'backup',6,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(8,'mysqldump',7,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(9,'git & github',0,'2016-03-28 23:36:38','2016-03-31 00:00:00'),(68,'perl6',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(11,'测试中文',2,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(12,'linux',69,'2016-03-29 00:46:38','2016-03-29 00:46:38'),(13,'command',12,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(14,'file',13,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(16,'command',5,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(17,'install',4,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(18,'create app',17,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(19,'conecpts',4,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(20,'Action',19,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(21,'sample',20,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(22,'results',20,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(23,'routing',19,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(24,'ntpdate',13,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(25,'yum',13,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(26,'公共仓库',25,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(27,'nslookup',13,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(28,'lsof',13,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(29,'nginx',39,'2016-03-30 14:43:06','2016-03-30 14:43:06'),(30,'install',29,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(31,'language',0,'2016-03-30 15:31:39','2016-03-30 15:31:39'),(32,'php',31,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(33,'scala',31,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(34,'java',31,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(35,'database',0,'2016-03-30 15:32:35','2016-03-30 15:32:35'),(38,'hive',60,'2016-03-31 09:38:43','2016-03-31 09:38:43'),(40,'函数',38,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(42,'hql',38,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(43,'install',38,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(44,'python',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(46,'php',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(47,'build tool',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(48,'maven',47,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(49,'sbt',47,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(50,'gradle',47,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(51,'public repo',47,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(39,'webServer',0,'2016-03-31 11:29:55','2016-03-31 11:29:55'),(53,'apache',39,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(69,'OS',0,'2016-03-31 13:19:57','2016-03-31 13:19:57'),(55,'character',5,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(41,'ide',0,'2016-03-31 12:31:53','2016-03-31 12:31:53'),(56,'intellij',41,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(57,'快捷键',56,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(58,'win',57,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(59,'mac',57,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(45,'serviceDiscovery',0,'2016-03-31 12:58:46','2016-03-31 12:58:46'),(61,'consul',45,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(62,'consul-template',61,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(52,'frame',0,'2016-03-31 13:03:13','2016-03-31 13:03:13'),(63,'orm',52,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(64,'slick',63,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(65,'error',64,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(66,'akka',52,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(60,'bigData',0,'2016-03-31 13:16:18','2016-03-31 13:16:18'),(67,'kafka',60,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(70,'command',9,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(71,'zeppelin',60,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(72,'redis',35,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(73,'jvm',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(74,'parameter',73,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(75,'bin',73,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(76,' jstat',75,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(77,'jhat',75,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(78,'protocol',0,'2016-03-31 13:49:20','2016-03-31 13:49:20'),(79,'http',78,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(80,'Content-Type',79,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(81,'状态码',79,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(82,'results',19,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(83,'session & Flash',19,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(84,'函数式',33,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(85,'构造action',20,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(86,'dmesg',13,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(87,'concepts',33,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(88,'type system',87,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(89,'ssh',13,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(90,'apex',52,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(91,'install',90,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(93,'url',90,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(94,'h2',35,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(95,'database',4,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(96,'h2',95,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(111,'scp',13,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(113,'短发短发',11,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(114,'typscript',31,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(115,'javascript',31,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(116,'book',0,'2016-03-26 23:22:18','2016-03-26 23:22:18'),(117,'Javascript权威指南',116,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(118,'第2章',117,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(36,'oracle',35,'2016-04-06 22:27:48','2016-04-06 22:27:48'),(3230,'schema object',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3231,'structure storage',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3232,'tuning | sql',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3233,'error',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3234,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3235,'tuning | event',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3236,'tuning | session',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3237,'tuning | event',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3238,'schema object',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3239,'tuning | tool',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3240,'sql',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3241,'tuning | io',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3242,'tuning | tool',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3243,'net',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3244,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3245,'tuning | sql',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3246,'database',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3247,'error',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3248,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3249,'database',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3250,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3251,'tuning | tool',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3252,'database',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3253,'tuning | memory',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3254,'structure storage',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3255,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3256,'structure storage',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3257,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3258,'tuning | session',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3259,'tuning | memory',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3260,'tuning | session',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3261,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3262,'tuning | memory',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3263,'structure storage',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3264,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3265,'tuning | sql',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3266,'tuning | memory',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3267,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3268,'tuning | session',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3269,'tuning | sql',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3270,'tuning | session',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3271,'parameter',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3272,'tuning | memory',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3273,'recovery',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3274,'tuning | sql',36,'2016-04-08 00:14:54','2016-04-08 00:14:54'),(3275,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3276,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3277,'user/privilege',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3278,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3279,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3280,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3281,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3282,'tuning | instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3283,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3284,'plsql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3285,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3286,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3287,'tuning | instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3288,'concurrency',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3289,'ha | data guard',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3290,'lock/latch',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3291,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3292,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3293,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3294,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3295,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3296,'secure',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3297,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3298,'error',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3299,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3300,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3301,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3302,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3303,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3304,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3305,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3306,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3307,'tuning | instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3308,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3309,'tuning | instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3310,'plsql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3311,'concurrency',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3312,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3313,'net',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3314,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3315,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3316,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3317,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3318,'other',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3319,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3320,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3321,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3322,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3323,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3324,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3325,'error',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3326,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3327,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3328,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3329,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3330,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3331,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3332,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3333,'sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3334,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3335,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3336,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3337,'tuning | instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3338,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3339,'tuning | instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3340,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3341,'other',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3342,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3343,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3344,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3345,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3346,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3347,'error',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3348,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3349,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3350,'error',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3351,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3352,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3353,'user/privilege',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3354,'ha | stream',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3355,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3356,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3357,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3358,'tuning | instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3359,'ha | rac',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3360,'ha | stream',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3361,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3362,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3363,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3364,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3365,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3366,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3367,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3368,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3369,'secure',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3370,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3371,'view',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3372,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3373,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3374,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3375,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3376,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3377,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3378,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3379,'database',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3380,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3381,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3382,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3383,'tuning | tool',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3384,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3385,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3386,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3387,'sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3388,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3389,'error',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3390,'install/upgrade',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3391,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3392,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3393,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3394,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3395,'tuning | tool',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3396,'error',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3397,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3398,'advisor',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3399,'scheduler',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3400,'consumer',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3401,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3402,'error',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3403,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3404,'lock/latch',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3405,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3406,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3407,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3408,'net',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3409,'sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3410,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3411,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3412,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3413,'advisor',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3414,'scheduler',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3415,'user/privilege',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3416,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3417,'search',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3418,'tuning | event',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3419,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3420,'parameter',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3421,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3422,'parameter',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3423,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3424,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3425,'database',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3426,'tuning | tool',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3427,'database',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3428,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3429,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3430,'advisor',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3431,'audit',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3432,'concurrency',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3433,'load/unload',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3434,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3435,'encryption',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3436,'error',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3437,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3438,'ha | data guard',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3439,'ha | rac',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3440,'ha | asm',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3441,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3442,'install/upgrade',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3443,'load/unload',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3444,'lock/latch',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3445,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3446,'parallel execution',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3447,'instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3448,'tuning | instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3449,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3450,'tuning | tool',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3451,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3452,'tuning | tool',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3453,'plsql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3454,'user/privilege',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3455,'recovery',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3456,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3457,'script',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3458,'sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3459,'sqlplus',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3460,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3461,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3462,'tuning | event',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3463,'user/privilege',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3464,'transaction',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3465,'lock/latch',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3466,'integrity',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3467,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3468,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3469,'tuning | event',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3470,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3471,'tuning | memory',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3472,'parameter',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3473,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3474,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3475,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3476,'user/privilege',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3477,'view',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3478,'sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3479,'connect',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3480,'sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3481,'parameter',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3482,'view',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3483,'ha | data guard',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3484,'tuning | session',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3485,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3486,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3487,'structure storage',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3488,'tuning | instance',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3489,'tuning | sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3490,'ha | data guard',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3491,'schema object',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3492,'sql',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3493,'view',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3494,'error',36,'2016-04-08 00:14:55','2016-04-08 00:14:55'),(3495,'parameter',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3496,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3497,'user/privilege',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3498,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3499,'install/upgrade',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3500,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3501,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3502,'parameter',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3503,'select',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3504,'parameter',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3505,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3506,'select',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3507,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3508,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3509,'ha | rac',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3510,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3511,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3512,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3513,'monitor',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3514,'tuning | event',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3515,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3516,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3517,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3518,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3519,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3520,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3521,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3522,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3523,'tuning | io',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3524,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3525,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3526,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3527,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3528,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3529,'tuning | instance',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3530,'instance',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3531,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3532,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3533,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3534,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3535,'integrity',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3536,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3537,'parameter',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3538,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3539,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3540,'ha | rac',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3541,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3542,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3543,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3544,'tuning | event',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3545,'ha | rac',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3546,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3547,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3548,'tuning | event',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3549,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3550,'ha | rac',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3551,'parameter',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3552,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3553,'ha | rac',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3554,'parameter',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3555,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3556,'parameter',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3557,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3558,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3559,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3560,'instance',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3561,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3562,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3563,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3564,'instance',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3565,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3566,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3567,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3568,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3569,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3570,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3571,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3572,'scheduler',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3573,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3574,'scheduler',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3575,'user/privilege',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3576,'tuning | tool',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3577,'scheduler',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3578,'tuning | tool',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3579,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3580,'tuning | tool',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3581,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3582,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3583,'database systems report(sql)',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3584,'ha | data guard',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3585,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3586,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3587,'ha | asm',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3588,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3589,'tuning | tool',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3590,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3591,'tuning | tool',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3592,'ha | rac',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3593,'database systems report(sql)',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3594,'ha | data guard',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3595,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3596,'tuning | instance',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3597,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3598,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3599,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3600,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3601,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3602,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3603,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3604,'tuning | io',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3605,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3606,'advisor',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3607,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3608,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3609,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3610,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3611,'view',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3612,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3613,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3614,'tuning | sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3615,'tuning | session',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3616,'tuning | instance',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3617,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3618,'ogg',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3619,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3620,'user/privilege',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3621,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3622,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3623,'user/privilege',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3624,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3625,'ogg',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3626,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3627,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3628,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3629,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3630,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3631,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3632,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3633,'plsql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3634,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3635,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3636,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3637,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3638,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3639,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3640,'ha | rac',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3641,'transaction',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3642,'ogg',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3643,'transaction',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3644,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3645,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3646,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3647,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3648,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3649,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3650,'plsql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3651,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3652,'plsql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3653,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3654,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3655,'tuning | tool',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3656,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3657,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3658,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3659,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3660,'scheduler',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3661,'net',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3662,'plsql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3663,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3664,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3665,'install/upgrade',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3666,'tuning | tool',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3667,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3668,'load/unload',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3669,'user/privilege',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3670,'load/unload',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3671,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3672,'scheduler',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3673,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3674,'scheduler',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3675,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3676,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3677,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3678,'load/unload',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3679,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3680,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3681,'scheduler',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3682,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3683,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3684,'tuning | memory',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3685,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3686,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3687,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3688,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3689,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3690,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3691,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3692,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3693,'ha | rac',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3694,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3695,'instance',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3696,'tuning | tool',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3697,'tuning | session',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3698,'tuning | tool',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3699,'load/unload',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3700,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3701,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3702,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3703,'integrity',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3704,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3705,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3706,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3707,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3708,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3709,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3710,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3711,'plsql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3712,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3713,'instance',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3714,'integrity',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3715,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3716,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3717,'recovery',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3718,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3719,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3720,'plsql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3721,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3722,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3723,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3724,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3725,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3726,'user/privilege',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3727,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3728,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3729,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3730,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3731,'plsql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3732,'net',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3733,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3734,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3735,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3736,'tuning | session',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3737,'load/unload',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3738,'error',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3739,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3740,'install/upgrade',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3741,'integrity',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3742,'structure storage',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3743,'monitor',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3744,'advisor',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3745,'plsql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3746,'database',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3747,'load/unload',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3748,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3749,'load/unload',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3750,'advisor',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3751,'net',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3752,'sqlplus',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3753,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3754,'sql',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3755,'tuning | instance',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3756,'schema object',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3757,'user/privilege',36,'2016-04-08 00:14:56','2016-04-08 00:14:56'),(3758,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3759,'scheduler',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3760,'sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3761,'scheduler',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3762,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3763,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3764,'plsql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3765,'structure storage',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3766,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3767,'load/unload',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3768,'user/privilege',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3769,'sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3770,'plsql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3771,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3772,'plsql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3773,'user/privilege',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3774,'sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3775,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3776,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3777,'plsql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3778,'scheduler',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3779,'user/privilege',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3780,'recovery',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3781,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3782,'sqlplus',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3783,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3784,'sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3785,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3786,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3787,'install/upgrade',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3788,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3789,'tuning | sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3790,'sqlplus',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3791,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3792,'plsql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3793,'scheduler',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3794,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3795,'lock/latch',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3796,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3797,'recovery',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3798,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3799,'sqlplus',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3800,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3801,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3802,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3803,'sqlplus',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3804,'sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3805,'integrity',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3806,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3807,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3808,'structure storage',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3809,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3810,'recovery',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3811,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3812,'install/upgrade',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3813,'secure',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3814,'ha | rac',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3815,'user/privilege',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3816,'ha | rac',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3817,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3818,'instance',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3819,'tuning | sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3820,'advisor',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3821,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3822,'net',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3823,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3824,'tuning | STATISTICS',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3825,'tuning | event',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3826,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3827,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3828,'structure storage',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3829,'tuning | instance',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3830,'recovery',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3831,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3832,'instance',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3833,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3834,'instance',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3835,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3836,'structure storage',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3837,'tuning | sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3838,'instance',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3839,'tuning | sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3840,'tuning | event',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3841,'secure',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3842,'user/privilege',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3843,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3844,'recovery',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3845,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3846,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3847,'net',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3848,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3849,'tuning | instance',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3850,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3851,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3852,'tuning | instance',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3853,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3854,'structure storage',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3855,'transaction',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3856,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3857,'plsql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3858,'sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3859,'other',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3860,'sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3861,'user/privilege',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3862,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3863,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3864,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3865,'scheduler',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3866,'structure storage',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3867,'sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3868,'structure storage',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3869,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3870,'structure storage',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3871,'monitor',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3872,'structure storage',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3873,'tuning | database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3874,'tuning | sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3875,'other',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3876,'instance',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3877,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3878,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3879,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3880,'recovery',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3881,'install/upgrade',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3882,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3883,'net',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3884,'scheduler',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3885,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3886,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3887,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3888,'sqlplus',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3889,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3890,'net',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3891,'scheduler',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3892,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3893,'scheduler',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3894,'sql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3895,'error',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3896,'ha | data guard',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3897,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3898,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3899,'recovery',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3900,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3901,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3902,'schema object',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3903,'tuning | memory',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3904,'plsql',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3905,'database',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3906,'scheduler',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3907,'recovery',36,'2016-04-08 00:14:57','2016-04-08 00:14:57'),(3908,'index | view',3230,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3909,'index | select',3230,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3910,'tablespace | view',3231,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3911,'sts | view',3232,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3912,'tuning advisor | view',3232,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3913,'ora',3233,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3914,'rman | p',3234,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3915,'view | event',3235,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3916,'view',3236,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3917,'view | event',3237,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3918,'data type | concepts',3238,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3919,'operation | adrci',3239,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3920,'sql function',3240,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3921,'select',3240,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3922,'data file | select',3241,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3923,'operation | adrci',3242,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3924,'operation',3243,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3925,'flashback | s',3244,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3926,'flashback | p',3244,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3927,'flashback | s',3244,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3928,'flashback | V',3244,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3929,'flashback | o',3244,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3930,'rman | o | recover',3244,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3931,'rman | c',3244,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3932,'flashback | V',3244,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3933,'sts | concepts',3245,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3934,'view | operation',3246,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3935,'ora',3247,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3936,'rman | v',3248,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3937,'sysaux | select',3249,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3938,'rman | p',3250,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3939,'rman | s',3250,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3940,'rman | v',3250,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3941,'rman | o | duplicate',3250,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3942,'select',3251,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3943,'parameter | select',3252,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3944,'database | view',3252,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3945,'parameter | select',3252,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3946,'buffer cache | select',3253,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3947,'sga | view',3253,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3948,'buffer cache | parameter',3253,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3949,'shared pool | select',3253,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3950,'shared pool | view',3253,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3951,'buffer cache | parameter',3253,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3952,'undo ts | view',3254,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3953,'rman | o | recover',3255,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3954,'rman | v',3255,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3955,'tablespace | view',3256,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3956,'rman | o',3257,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3957,'event | select',3258,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3958,'event | view',3259,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3959,'view',3260,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3960,'rman | o',3261,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3961,'rman | v',3261,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3962,'rman | p',3261,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3963,'rman | s',3261,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3964,'rman | p',3261,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3965,'rman | v',3261,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3966,'rman | o | recover',3261,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3967,'buffer cache | view',3262,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3968,'buffer cache | parameter',3262,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3969,'tablespace | view',3263,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3970,'flashback | o',3264,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3971,'select | xplan',3265,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3972,'shared pool | concepts',3266,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3973,'buffer cache | parameter',3266,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3974,'buffer cache | operation',3266,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3975,'pga | select',3266,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3976,'rman | v',3267,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3977,'rman | o | backup',3267,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3978,'flashback | s',3267,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3979,'view',3268,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3980,'load | select',3269,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3981,'load | view',3269,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3982,'load | select',3270,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3983,'concepts',3271,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3984,'sga | parameter',3272,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3985,'shared pool | select',3272,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3986,'sga | concepts',3272,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3987,'shared pool | parameter',3272,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3988,'shared pool | view',3272,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3989,'shared pool | select',3272,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3990,'shared pool | view',3272,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3991,'shared pool | concepts',3272,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3992,'flashback | o',3273,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3993,'load | view',3274,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3994,'rman | c | duplicate',3275,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3995,'load | view',3276,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3996,'operation | privilege',3277,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3997,'privilege | privilege list',3277,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3998,'flashback | o',3278,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(3999,'flashback | s',3278,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4000,'flashback | o',3278,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4001,'select | redo log file',3279,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4002,'view',3280,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4003,'buffer cache | operation',3281,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4004,'parameter',3282,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4005,'pga | view',3283,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4006,'sga | parameter',3283,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4007,'plsql',3284,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4008,'index | concepts',3285,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4009,'concepts | bind variables',3286,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4010,'dbms',3287,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4011,'concepts',3288,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4012,'select',3289,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4013,'dbms',3290,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4014,'select | extents',3291,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4015,'view | redo log',3292,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4016,'data file | operation',3293,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4017,'rman | s',3294,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4018,'view | fra',3295,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4019,'orapwd | operation',3296,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4020,'partition table | concepts',3297,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4021,'table | select',3297,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4022,'partition table | operation',3297,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4023,'partition index | concepts',3297,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4024,'ora',3298,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4025,'partition index | concepts',3299,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4026,'index | concepts',3299,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4027,'index | view',3299,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4028,'index | concepts',3299,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4029,'parameter',3300,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4030,'index | select',3301,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4031,'select',3302,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4032,'trace | parameter',3302,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4033,'view | control file',3302,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4034,'operation | xplan',3303,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4035,'select',3304,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4036,'select | trace',3305,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4037,'buffer cache | operation',3306,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4038,'parameter',3307,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4039,'pga | view',3308,'2016-04-08 00:14:58','2016-04-08 00:14:58'),(4040,'parameter',3309,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4041,'plsql',3310,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4042,'concepts',3311,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4043,'trace | parameter',3312,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4044,'concepts',3313,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4045,'redo log file | select',3314,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4046,'partition table | operation',3315,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4047,'trace | parameter',3316,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4048,'partition table | concepts',3317,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4049,'partition table | operation',3317,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4050,'dbms',3318,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4051,'index | concepts',3319,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4052,'parameter',3320,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4053,'view | statistics',3320,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4054,'dbms | statistics',3320,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4055,'view | statistics',3320,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4056,'index | concepts',3321,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4057,'dbms | statistics',3322,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4058,'rman | c',3323,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4059,'index | concepts',3324,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4060,'ora',3325,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4061,'index | concepts',3326,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4062,'dbms | statistics',3327,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4063,'table | dbms',3328,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4064,'table | operation',3328,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4065,'archive log file | parameter',3329,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4066,'archive log file | concepts',3329,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4067,'archive log file | select',3329,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4068,'archive log file | parameter',3329,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4069,'archive log file | view',3329,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4070,'archive log file | select',3329,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4071,'table | select',3330,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4072,'index | select',3330,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4073,'operation | xplan',3331,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4074,'rman | v',3332,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4075,'sql function',3333,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4076,'partition index | concepts',3334,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4077,'index | concepts',3334,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4078,'select',3335,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4079,'index | concepts',3336,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4080,'select | instance',3337,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4081,'concepts | trace',3338,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4082,'select | instance',3339,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4083,'table | dbms',3340,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4084,'dbms',3341,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4085,'table | operation',3342,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4086,'archive log file | operation',3343,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4087,'archive log file | concepts',3343,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4088,'archive log file | parameter',3343,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4089,'archive log file | view',3343,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4090,'index | select',3344,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4091,'archive log file | select',3345,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4092,'table | select',3346,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4093,'rman',3347,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4094,'rman | s',3348,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4095,'index | concepts',3349,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4096,'ora',3350,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4097,'index | concepts',3351,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4098,'parameter',3352,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4099,'operation | xplan',3352,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4100,'select',3353,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4101,'operation',3354,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4102,'operation | xplan',3355,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4103,'dbms',3356,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4104,'view | redo log',3356,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4105,'checkpoint | concepts',3356,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4106,'pga | select',3357,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4107,'buffer cache | select',3357,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4108,'buffer cache | view',3357,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4109,'shared pool | select',3357,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4110,'parameter',3358,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4111,'select',3359,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4112,'sga | select',3361,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4113,'select | segment',3362,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4114,'view | redo log',3363,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4115,'archive log file | view',3364,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4116,'view | fra',3364,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4117,'table | operation',3365,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4118,'view | fra',3366,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4119,'rman | v',3367,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4120,'trace | parameter',3368,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4121,'trace | view',3368,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4122,'orapwd | parameter',3369,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4123,'parameter | control file',3370,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4124,'operation | parameter',3370,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4125,'select | parameter',3370,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4126,'operation | parameter',3370,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4127,'trace | dbms',3370,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4128,'session',3371,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4129,'trace | parameter',3372,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4130,'trace | dbms',3372,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4131,'trace | operation',3372,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4132,'select',3372,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4133,'partition table | operation',3373,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4134,'partition table | concepts',3373,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4135,'partition table | operation',3373,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4136,'operation | parameter',3374,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4137,'view | statistics',3375,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4138,'dbms | statistics',3375,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4139,'view | statistics',3375,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4140,'select | statistics',3375,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4141,'dbms | statistics',3375,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4142,'select | statistics',3375,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4143,'dbms | statistics',3375,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4144,'partition table | concepts',3376,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4145,'parameter',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4146,'dbms | tuning',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4147,'dbms | profile',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4148,'parameter | profile',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4149,'concepts | hints',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4150,'concepts | profile',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4151,'privilege | profile',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4152,'concepts | profile',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4153,'operation | profile',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4154,'parameter | baseline',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4155,'view | baseline',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4156,'operation | baseline',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4157,'concepts | baseline',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4158,'operation | baseline',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4159,'concepts | xplan',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4160,'view | xplan',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4161,'script | xplan',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4162,'view | xplan',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4163,'select | xplan',3377,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4164,'shared pool | select',3378,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4165,'process | concepts',3379,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4166,'buffer cache | parameter',3380,'2016-04-08 00:14:59','2016-04-08 00:14:59'),(4167,'view | statistics',3381,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4168,'dbms | statistics',3381,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4169,'dbms | tuning',3381,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4170,'select | profile',3381,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4171,'concepts | profile',3381,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4172,'operation | profile',3381,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4173,'dbms | profile',3381,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4174,'operation | profile',3381,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4175,'select | baseline',3381,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4176,'buffer cache | parameter',3382,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4177,'parameter | awr',3383,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4178,'operation | adrci',3383,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4179,'select | baseline',3384,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4180,'partition table | select',3385,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4181,'concepts | xplan',3386,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4182,'join',3387,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4183,'view | xplan',3388,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4184,'ora',3389,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4185,'operation | install',3390,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4186,'orapwd | concepts',3391,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4187,'parameter | control file',3391,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4188,'data file | operation',3392,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4189,'buffer cache | parameter',3393,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4190,'parameter | bind variables',3394,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4191,'parameter | adrci',3395,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4192,'operation | adrci',3395,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4193,'dia',3396,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4194,'memory | view',3397,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4195,'view',3398,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4196,'scheduler | view',3399,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4197,'view | consumer',3400,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4198,'flashback | p',3401,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4199,'flashback | V',3401,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4200,'ora',3402,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4201,'table | operation',3403,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4202,'parameter | lock',3404,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4203,'operation | lock',3404,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4204,'tablespace | view',3405,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4205,'tablespace | operation',3405,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4206,'table | operation',3406,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4207,'flashback | V',3407,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4208,'operation',3408,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4209,'select',3409,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4210,'buffer cache | parameter',3410,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4211,'buffer cache | view',3410,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4212,'buffer cache | select',3410,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4213,'shared pool | view',3410,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4214,'sts | privilege',3411,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4215,'pga | select',3412,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4216,'pga | parameter',3412,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4217,'buffer cache | parameter',3412,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4218,'pga | select',3412,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4219,'memory | view',3412,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4220,'view',3413,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4221,'operation',3413,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4222,'view',3413,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4223,'scheduler | view',3414,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4224,'privilege | view',3415,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4225,'flashback | p',3416,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4226,'flashback | V',3416,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4227,'search',3417,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4228,'view | event',3418,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4229,'index | concepts',3419,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4230,'rac',3420,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4231,'tablespace | parameter',3421,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4232,'rac',3422,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4233,'select',3423,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4234,'table | select',3424,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4235,'view | view',3425,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4236,'awr | select',3426,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4237,'session | parameter',3427,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4238,'parameter | select',3427,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4239,'sga | view',3428,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4240,'bind | select',3429,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4241,'concepts',3430,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4242,'operation',3431,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4243,'concepts',3432,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4244,'operation',3432,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4245,'plsql',3433,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4246,'data type | concepts',3434,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4247,'encryption',3435,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4248,'ora',3436,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4249,'ins',3436,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4250,'ora',3436,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4251,'other',3436,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4252,'ora',3436,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4253,'ins',3436,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4254,'ora',3436,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4255,'other',3436,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4256,'ora',3436,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4257,'control file | operation',3437,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4258,'operation',3438,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4259,'operation | ocr/olr',3439,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4260,'operation',3440,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4261,'index | operation',3441,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4262,'install',3442,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4263,'sqlldr',3443,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4264,'external table',3443,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4265,'select',3444,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4266,'lock',3444,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4267,'latch',3444,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4268,'materialized view | operation',3445,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4269,'dimensions | concepts',3445,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4270,'dimensions | dbms',3445,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4271,'select',3446,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4272,'concepts',3446,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4273,'operation',3446,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4274,'operation | parameter',3447,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4275,'concepts | xplan',3449,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4276,' statspack',3450,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4277,'operation | statistics',3451,'2016-04-08 00:15:00','2016-04-08 00:15:00'),(4278,'tom | runtats',3452,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4279,'plsql',3453,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4280,'concepts',3454,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4281,'rman | o | backup',3455,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4282,'rman | o | recover',3455,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4283,'manual backup | o',3455,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4284,'flashback | o',3455,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4285,'redo log file | o',3456,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4286,'redo log file | select',3456,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4287,'redo log file | concepts',3456,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4288,'script',3457,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4289,'abc',3457,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4290,'script',3457,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4291,'sql tuning',3458,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4292,'sql function',3458,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4293,'sql function | 分析函数',3458,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4294,'operation',3459,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4295,'script',3459,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4296,'table | operation',3460,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4297,'tablespace | operation',3461,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4298,'tablespace | select',3461,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4299,'concepts | event',3462,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4300,'operation | user',3463,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4301,'privilege | privilege list',3463,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4302,'select',3463,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4303,'operation',3464,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4304,'lock',3465,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4305,'test',3466,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4306,'shared pool | view',3467,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4307,'bind | view',3468,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4308,'concepts | event',3469,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4309,'table | concepts',3470,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4310,'buffer cache | parameter',3471,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4311,'lock',3472,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4312,'connect',3472,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4313,'data file | parameter',3473,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4314,'index | view',3474,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4315,'undo ts | view',3475,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4316,'privilege | view',3476,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4317,'transaction',3477,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4318,'sql function | 分析函数',3478,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4319,'listener',3479,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4320,'connect',3479,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4321,'db link',3479,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4322,'sql function',3480,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4323,'recovery',3481,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4324,'io tuning',3482,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4325,'concepts',3483,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4326,'load | select',3484,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4327,'tuning | redo log',3485,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4328,'load | view',3486,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4329,'hint | o',3486,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4330,'tablespace | concepts',3487,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4331,'tablespace | select',3487,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4332,'parameter',3488,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4333,'select',3489,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4334,'operation',3490,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4335,'table | operation',3491,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4336,'partition table | operation',3491,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4337,'sequence',3492,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4338,'transaction',3493,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4339,'ora',3494,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4340,'recovery',3495,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4341,'rman | o',3496,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4342,'rman | o | configure',3496,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4343,'rman | o',3496,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4344,'privilege | privilege list',3497,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4345,'rman | o',3498,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4346,'install',3499,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4347,'ins',3500,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4348,'operation',3501,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4349,'recovery',3502,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4350,'session',3503,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4351,'recovery',3504,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4352,'rac',3504,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4353,'redo',3505,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4354,'service',3506,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4355,'undo ts | parameter',3507,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4356,'rac | service',3508,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4357,'operation',3509,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4358,'instance | view',3510,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4359,'ora',3511,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4360,'parameter',3512,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4361,'command',3512,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4362,'set',3512,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4363,'command',3512,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4364,'set',3512,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4365,'tablespace',3513,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4366,'concepts | event',3514,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4367,'ora',3515,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4368,'set',3516,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4369,'command',3516,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4370,'instance',3517,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4371,'script',3518,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4372,'session',3519,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4373,'dbms | trace',3520,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4374,'sql',3521,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4375,'command',3522,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4376,'parameter',3522,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4377,'set',3522,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4378,'command',3522,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4379,'data file | select',3523,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4380,'concepts | statistics',3524,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4381,'select | statistics',3524,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4382,'data file | operation',3525,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4383,'tablespace | select',3525,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4384,'tablespace | view',3525,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4385,'parameter',3526,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4386,'select',3526,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4387,'operation',3526,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4388,'concepts | xplan',3527,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4389,'index | operation',3528,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4390,'parameter',3529,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4391,'operation',3530,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4392,'select | parameter',3530,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4393,'view',3530,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4394,'operation',3530,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4395,'tool',3530,'2016-04-08 00:15:01','2016-04-08 00:15:01'),(4396,'parameter | concepts',3530,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4397,'operation',3530,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4398,'select',3530,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4399,'data file | operation',3531,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4400,'index | view',3532,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4401,'concepts | bind variables',3533,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4402,'tablespace | dbms',3534,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4403,'fra | parameter',3534,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4404,'redo log file | parameter',3534,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4405,'operation',3535,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4406,'shared pool | select',3536,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4407,'latch',3537,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4408,'undo ts | parameter',3538,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4409,'temp',3539,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4410,'rac | service',3539,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4411,'parameter',3540,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4412,'shared pool | select',3541,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4413,'parameter',3542,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4414,'parameter | select',3543,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4415,'concepts | event',3544,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4416,'parameter',3545,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4417,'operation',3546,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4418,'concepts',3546,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4419,'parameter',3546,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4420,'tuning',3547,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4421,'concepts | event',3548,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4422,'parameter',3549,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4423,'rac',3551,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4424,'parameter',3553,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4425,'rac',3554,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4426,'parameter',3555,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4427,'test',3556,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4428,'parameter',3557,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4429,'shared pool | parameter',3558,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4430,'view',3559,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4431,'concepts',3559,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4432,'parameter | redo',3560,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4433,'view',3561,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4434,'concepts',3561,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4435,'view',3561,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4436,'operation',3561,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4437,'shared pool | operation',3562,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4438,'tuning advisor | operation',3563,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4439,'select | parameter',3564,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4440,'set',3565,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4441,'view',3566,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4442,'data file | view',3567,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4443,'dbms',3568,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4444,'sql function | 转换函数',3569,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4445,'dbms | database',3570,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4446,'partition table | view',3571,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4447,'select',3572,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4448,'table | operation',3573,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4449,'scheduler | view',3574,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4450,'user | view',3575,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4451,'user | select',3575,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4452,'privilege | p',3575,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4453,'user | p',3575,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4454,'awr | v',3576,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4455,'O',3577,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4456,'awr | select',3578,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4457,'awr | p',3578,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4458,'awr | v',3578,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4459,'awr | select',3578,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4460,'undo ts | view',3579,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4461,'awr | o',3580,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4462,'awr | v',3580,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4463,'awr | select',3580,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4464,'asmiostat | o',3581,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4465,'hint | v',3582,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4466,'tablespace',3583,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4467,'select',3584,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4468,'phy | o',3584,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4469,'phy | s',3584,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4470,'phy | p',3584,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4471,'phy | o',3584,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4472,'logical | s',3584,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4473,'view',3584,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4474,'parameter',3584,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4475,'characters | v',3585,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4476,'table | view',3586,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4477,'view',3587,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4478,'instance | c',3588,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4479,'awr | o',3589,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4480,'sql function | 正则表达式',3590,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4481,'sql function | 聚合函数',3590,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4482,'awr | o',3591,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4483,'awr | v',3591,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4484,'parameter',3592,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4485,'database',3593,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4486,'operation',3594,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4487,'select',3594,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4488,'operation',3594,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4489,'select',3594,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4490,'phy | s',3594,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4491,'phy | o',3594,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4492,'logical | o',3594,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4493,'parameter',3594,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4494,'buffer cache | parameter',3595,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4495,'large pool | parameter',3595,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4496,'pga | select',3595,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4497,'redo log buffer | parameter',3595,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4498,'large pool | parameter',3595,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4499,'parameter',3596,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4500,'select',3598,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4501,'session | view',3599,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4502,'sga | view',3600,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4503,'load | select',3601,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4504,'shared pool | select',3602,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4505,'index | operation',3603,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4506,'data file | view',3604,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4507,'event | view',3605,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4508,'view',3606,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4509,'buffer cache | parameter',3607,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4510,'shared pool | select',3607,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4511,'shared pool | parameter',3607,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4512,'buffer cache | select',3607,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4513,'buffer cache | parameter',3607,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4514,'buffer cache | select',3607,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4515,'sts | operation',3608,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4516,'materialized view | parameter',3609,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4517,'shared pool | parameter',3610,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4518,'select',3611,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4519,'select | database',3612,'2016-04-08 00:15:02','2016-04-08 00:15:02'),(4520,'session | select',3612,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4521,'select | database',3612,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4522,'sga | view',3613,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4523,'shared pool | select',3613,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4524,'select | bind',3614,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4525,'load | select',3615,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4526,'io | select',3615,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4527,'io | view',3615,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4528,'select | user',3616,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4529,'rman | o | manage | list',3617,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4530,'rman | o | manage | report',3617,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4531,'error',3618,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4532,'sql function | 正则表达式',3619,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4533,'sql function | 聚合函数',3619,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4534,'sql function | group by',3619,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4535,'user | view',3620,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4536,'set',3621,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4537,'concepts',3621,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4538,'set',3621,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4539,'rman | o | manage | archive log',3622,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4540,'rman | o | configure',3622,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4541,'user | select',3623,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4542,'sql function | 日期函数',3624,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4543,'sql function | 正则表达式',3624,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4544,'sql function | 字符函数',3624,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4545,'sql function | 数字函数',3624,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4546,'sql function | 转换函数',3624,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4547,'error',3625,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4548,'rman | o | set',3626,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4549,'tablespace | select',3627,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4550,'sql function | group by',3628,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4551,'sql function | 正则表达式',3628,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4552,'view | other',3629,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4553,'dbms | database',3629,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4554,'view | other',3629,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4555,'command',3630,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4556,'set',3630,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4557,'temp ts | view',3631,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4558,'rman | o | recover',3632,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4559,'rman | o | manage | archive log',3632,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4560,'plsql | view',3633,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4561,'rman | o | manage | list',3634,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4562,'rman | o | manage | report',3634,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4563,'rman | o | manage | list',3634,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4564,'sql function | 字符函数',3635,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4565,'rman | o | manage | list',3636,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4566,'sql function | 数字函数',3637,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4567,'rman | o | backup',3638,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4568,'sql function | 字符函数',3639,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4569,'sql function | 数字函数',3639,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4570,'concepts',3640,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4571,'select',3641,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4572,'error',3642,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4573,'select',3643,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4574,'sql function | 转换函数',3644,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4575,'rman | o | manage | archive log',3645,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4576,'table | view',3646,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4577,'tablespace | concepts',3647,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4578,'tablespace | operation',3647,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4579,'table | operation',3648,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4580,'tablespace | operation',3649,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4581,'undo ts | operation',3649,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4582,'undo ts | S',3649,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4583,'dbms',3650,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4584,'partition index | view',3651,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4585,'trigger | o',3652,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4586,'script',3653,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4587,'parameter',3654,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4588,'awr | o',3655,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4589,'sequence | view',3656,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4590,'script',3657,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4591,'ora',3658,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4592,'tablespace | view',3659,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4593,'job | s',3660,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4594,'dblink | s',3661,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4595,'plsql | s',3662,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4596,'sql function | 字符函数',3663,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4597,'ora',3664,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4598,'install',3665,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4599,'addm | P',3666,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4600,'addm | D',3666,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4601,'addm | O',3666,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4602,'addm | D',3666,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4603,'addm | O',3666,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4604,'addm | V',3666,'2016-04-08 00:15:03','2016-04-08 00:15:03'),(4605,'awr | v',3666,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4606,'index | operation',3667,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4607,'data type | concepts',3667,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4608,'data pump | o | expdp',3668,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4609,'dir | v',3668,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4610,'data pump | c',3668,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4611,'privilege | privilege list',3669,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4612,'data pump | s',3670,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4613,'data pump | o | impdp',3670,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4614,'partition table | operation',3671,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4615,'job | v',3672,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4616,'rman | o | recover',3673,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4617,'job | o',3674,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4618,'ora',3675,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4619,'shared pool | dbms',3676,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4620,'table | view',3677,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4621,'table | operation',3677,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4622,'data pump | o | expdp',3678,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4623,'tablespace | view',3679,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4624,'sql function',3680,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4625,'sql function | 分析函数',3680,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4626,'job | o',3681,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4627,'dbca | c',3682,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4628,'curosr',3683,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4629,'memory | parameter',3684,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4630,'curosr',3685,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4631,'partition index | operation',3686,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4632,'table | operation',3686,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4633,'rman | o | backup',3687,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4634,'table | operation',3688,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4635,'session | operation',3689,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4636,'ora',3690,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4637,'rman | o | recover',3691,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4638,'partition table | select',3692,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4639,'table | operation',3692,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4640,'partition index | operation',3692,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4641,'view',3693,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4642,'rman | o | recover',3694,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4643,'trace | parameter',3695,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4644,'addm | O',3696,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4645,'select',3697,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4646,'addm | V',3698,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4647,'awr | o',3698,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4648,'data pump | o | expdp',3699,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4649,'data pump | o | impdp',3699,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4650,'data pump | o | expdp',3699,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4651,'partition table | operation',3700,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4652,'set',3701,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4653,'sql function',3702,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4654,'FOREIGN KEY | O',3703,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4655,'view',3703,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4656,'partition index | operation',3704,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4657,'partition table | operation',3704,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4658,'rowid | conecpts',3705,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4659,'partition index | concepts',3706,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4660,'partition index | operation',3706,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4661,'recover | o | redo log file',3707,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4662,'redo log file | o',3708,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4663,'recover | o | redo log file',3709,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4664,'partition table | operation',3710,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4665,'partition table | concepts',3710,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4666,'partition table | select',3710,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4667,'declare',3711,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4668,'sql function | 分析函数',3712,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4669,'select | redo log',3713,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4670,'FOREIGN KEY | O',3714,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4671,'FOREIGN KEY | S',3714,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4672,'view',3714,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4673,'partition table | operation',3715,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4674,'partition table | concepts',3715,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4675,'sql function | 转换函数',3716,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4676,'伪列 | view',3716,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4677,'recover | o | redo log file',3717,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4678,'redo log file | o',3718,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4679,'undo ts | S',3718,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4680,'session | view',3719,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4681,'plsql function',3720,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4682,'undo ts | view',3721,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4683,'undo ts | S',3721,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4684,'data file | operation',3721,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4685,'script',3722,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4686,'partition index | view',3723,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4687,'sql function | 字符函数',3724,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4688,'ora',3725,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4689,'privilege | view',3726,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4690,'partition table | view',3727,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4691,'tablespace | parameter',3728,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4692,'partition table | operation',3729,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4693,'partition table | select',3729,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4694,'table | view',3729,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4695,'tablespace | operation',3730,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4696,'tablespace | concepts',3730,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4697,'plsql function',3731,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4698,'listener | o',3732,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4699,'tablespace | select',3733,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4700,'index | operation',3734,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4701,'rman',3735,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4702,'view',3736,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4703,'data pump | o | expdp',3737,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4704,'data pump | o | impdp',3737,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4705,'ora',3738,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4706,'sql function',3739,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4707,'upgrade | concepts',3740,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4708,'primary key | o',3741,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4709,'undo ts | view',3742,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4710,'undo',3743,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4711,'operation',3744,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4712,'plsql | s',3745,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4713,'process | view',3746,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4714,'data pump | o | impdp',3747,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4715,'index | view',3748,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4716,'table | operation',3748,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4717,'data pump | o | impdp',3749,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4718,'data pump | c',3749,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4719,'data pump | o | impdp',3749,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4720,'operation',3750,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4721,'dblink | o',3751,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4722,'show',3752,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4723,'view | view',3753,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4724,'sql function',3754,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4725,'view',3755,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4726,'data type | concepts',3756,'2016-04-08 00:15:04','2016-04-08 00:15:04'),(4727,'privilege | privilege list',3757,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4728,'materialized view | operation',3758,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4729,'scheduler | dbms',3759,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4730,'sql function | 分析函数',3760,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4731,'scheduler | dbms',3761,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4732,'scheduler | scheduler',3761,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4733,'table | operation',3762,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4734,'table | select',3762,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4735,'ora',3763,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4736,'trigger | o',3764,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4737,'data file | view',3765,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4738,'index | view',3766,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4739,'dir | o',3767,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4740,'privilege | role list',3768,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4741,'sql function | 字符函数',3769,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4742,'plsql | pragma',3770,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4743,'alert.log',3771,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4744,'plsql | exception',3772,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4745,'plsql | syntax | functin',3772,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4746,'privilege | view',3773,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4747,'privilege | privilege list',3773,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4748,'sys_context',3774,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4749,'ma | concepts',3775,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4750,'ma | parameter',3775,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4751,'ora',3776,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4752,'plsql | exception',3777,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4753,'plsql',3777,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4754,'scheduler | view',3778,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4755,'scheduler | dbms',3778,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4756,'privilege | role list',3779,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4757,'rman | o | recover | spfile',3780,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4758,'rman | o | manage | report',3780,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4759,'ma | cdb | select',3781,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4760,'ma | pdb | operation',3781,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4761,'show',3782,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4762,'ma | pdb | operation',3783,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4763,'sys_context',3784,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4764,'ma | concepts',3785,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4765,'ma | parameter',3785,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4766,'ma | cdb em | operation',3785,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4767,'ma | cdb em | privileg',3785,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4768,'ma | pdb | operation',3785,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4769,'ma | view',3785,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4770,'ora',3786,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4771,'upgrade | concepts',3787,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4772,'database | view',3788,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4773,'cusour| view',3789,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4774,'operation',3790,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4775,'data type | concepts',3791,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4776,'data type | view',3791,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4777,'data type | parameter',3791,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4778,'data type | concepts',3791,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4779,'data type | select',3791,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4780,'plsql function',3792,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4781,'scheduler | view',3793,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4782,'synonym | operation',3794,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4783,'materialized view | concepts',3794,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4784,'select',3795,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4785,'sga | parameter',3796,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4786,'rman | o | backup | dbms',3797,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4787,'ma | pdb | operation',3798,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4788,'show',3799,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4789,'ma | view',3800,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4790,'tns',3801,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4791,'ma | privilge',3802,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4792,'ma | pdb | operation',3802,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4793,'command',3803,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4794,'sys_context',3804,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4795,'operation',3805,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4796,'date | parameter',3806,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4797,'ins',3807,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4798,'tablespace | operation',3808,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4799,'ora',3809,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4800,'rman | c | backup',3810,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4801,'database | view',3811,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4802,'install',3812,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4803,'authenticate | concetps',3813,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4804,'orapwd | view',3813,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4805,'operation',3814,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4806,'privilege | privilege list',3815,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4807,'operation',3816,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4808,'ora',3817,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4809,'operation',3818,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4810,'tuning advisor | operation',3819,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4811,'tuning advisor | parameter',3819,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4812,'tuning advisor | select',3819,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4813,'parameter',3820,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4814,'im column | operation',3821,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4815,'im column | view',3821,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4816,'im column | parameter',3821,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4817,'im column | operation',3821,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4818,'listener | parameter',3822,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4819,'partition index | operation',3823,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4820,'index | select',3824,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4821,'concepts | event',3825,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4822,'partition index | operation',3826,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4823,'characters | parameter',3827,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4824,'undo ts | parameter',3828,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4825,'parameter',3829,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4826,'flashback | parameter',3830,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4827,'AUTHEN | parameter',3831,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4828,'orapwd | parameter',3832,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4829,'AUTHEN | parameter',3833,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4830,'parameter',3834,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4831,'other',3835,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4832,'undo ts | concepts',3836,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4833,'view',3837,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4834,'checkpoint | concepts',3838,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4835,'view | xplan',3839,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4836,'parameter',3839,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4837,'concepts | event',3840,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4838,'plsql',3841,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4839,'profile | operation',3842,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4840,'im column | parameter',3843,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4841,'rman | o',3844,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4842,'database | parameter',3845,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4843,'buffer cache | parameter',3846,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4844,'listener | parameter',3847,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4845,'shard server | parameter',3847,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4846,'dimensions | parameter',3848,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4847,'parameter',3849,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4848,'database | parameter',3850,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4849,'pga | select',3851,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4850,'redo log buffer | select',3851,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4851,'select | instance',3852,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4852,'sga | select',3853,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4853,'data file | view',3854,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4854,'operation',3855,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4855,'process | concepts',3856,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4856,'plsql | key',3857,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4857,'select',3858,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4858,'view',3859,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4859,'sql function',3860,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4860,'profile | limit list',3861,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4861,'ins',3862,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4862,'concepts',3863,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4863,'im column | select',3864,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4864,'scheduler | privile',3865,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4865,'undo ts | view',3866,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4866,'undo ts | parameter',3866,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4867,'sql function',3867,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4868,'undo ts | view',3868,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4869,'support',3869,'2016-04-08 00:15:05','2016-04-08 00:15:05'),(4870,'undo ts | S',3870,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4871,'undo ts | concepts',3870,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4872,'undo ts | operation',3870,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4873,'undo ts | concepts',3870,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4874,'undo',3871,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4875,'data file | parameter',3872,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4876,'view',3873,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4877,'operation | xplan',3874,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4878,'dbms',3875,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4879,'trace | parameter',3876,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4880,'index | concepts',3877,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4881,'ora',3878,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4882,'table | select',3879,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4883,'rman | o | recover',3880,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4884,'install',3881,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4885,'session | view',3882,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4886,'dblink | o',3883,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4887,'scheduler | dbms',3884,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4888,'session | select',3885,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4889,'ma | cdb | concepts',3885,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4890,'ora',3886,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4891,'im column | operation',3887,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4892,'operation',3888,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4893,'im column | parameter',3889,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4894,'im column | operation',3889,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4895,'im column | parameter',3889,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4896,'im column | view',3889,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4897,'listener | o',3890,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4898,'scheduler | operation',3891,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4899,'tns',3892,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4900,'scheduler | select',3893,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4901,'sql',3894,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4902,'ora',3895,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4903,'parameter',3896,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4904,'dbms | database',3897,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4905,'buffer cache | parameter',3898,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4906,'flashback | parameter',3899,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4907,'session | parameter',3900,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4908,'redo log buffer | select',3901,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4909,'table | operation',3902,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4910,'pga | parameter',3903,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4911,'plsql | parameter',3904,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4912,'process | parameter',3905,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4913,'job | parameter',3906,'2016-04-08 00:15:06','2016-04-08 00:15:06'),(4914,'flashback | parameter',3907,'2016-04-08 00:15:06','2016-04-08 00:15:06');
/*!40000 ALTER TABLE `category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `content`
--

DROP TABLE IF EXISTS `content`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `content` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content_1` varchar(10000) DEFAULT NULL,
  `content_2` varchar(10000) DEFAULT NULL,
  `category_id` int(11) NOT NULL,
  `createdata` datetime NOT NULL,
  `updatedata` datetime NOT NULL,
  `document_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `category_id` (`category_id`),
  KEY `document_id` (`document_id`)
) ENGINE=MyISAM AUTO_INCREMENT=1614 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `content`
--

LOCK TABLES `content` WRITE;
/*!40000 ALTER TABLE `content` DISABLE KEYS */;
INSERT INTO `content` VALUES (1,'test','test',2,'2016-03-28 23:08:22','2016-03-28 23:08:22',NULL),(2,'mysqldump --databases g_note > g_note.dmp.bak',' ',8,'2016-03-28 00:00:00','2016-03-28 00:00:00',NULL),(3,'file -i','-i 查看文件字符集',14,'2016-03-28 00:00:00','2016-03-28 00:00:00',NULL),(4,'-e','在命令行执行sql语句\r\nSHELL# mysql -e \"select now()\"',16,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(5,'scala version','1. 安装jdk1.8\r\n2. 安装sbt\r\n3.project/plugins.sbt \r\n    resolvers += \"Typesafe repository\" at \"https://dl.bintray.com/typesafe/maven-releases/\"\r\n    addSbtPlugin(\"com.typesafe.play\" % \"sbt-plugin\" % \"2.5.x\")\r\n4.project/build.properties\r\n    sbt.version=0.13.11\r\n5.build.sbt\r\n    name := \"my-first-app\"\r\n    version := \"1.0.0-SNAPSHOT\"\r\n    lazy val root = (project in file(\".\")).enablePlugins(PlayScala)\r\n6.shell# sbt run\r\n',18,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(6,'Action {\r\n  Ok(\"Hello world\")\r\n}','???',20,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(7,'Action { request =>\r\n  Ok(\"Got request [\" + request + \"]\")\r\n}','',20,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(8,'Action { implicit request =>\r\n  Ok(\"Got request [\" + request + \"]\")\r\n}','使用implicit关键字，当其他api需要隐式的调用request',20,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(9,'Action(parse.json) { implicit request =>\r\n  Ok(\"Got request [\" + request + \"]\")\r\n}','???',20,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(10,'Action的作用','play.api.mvc.Action 的作用是把 play.api.mvc.Request 变成 play.api.mvc.Result 返回给cliect\r\n也就是收到请求，并给出结果，返回给客户端',20,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(11,'Action(parse.json) { implicit request =>\r\n  Ok(\"Got request [\" + request + \"]\")\r\n}','',20,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(15,'play.api.mvc.Results','play提供的结果都在这个特质里面',22,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(16,'Redirect(\"/user/home\")\r\nRedirect(\"/user/home\", MOVED_PERMANENTLY)','转跳',22,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(13,'val ok = Ok(\"Hello world!\")\r\nval notFound = NotFound\r\nval pageNotFound = NotFound(<h1>Page not found</h1>)\r\nval badRequest = BadRequest(views.html.form(formWithErrors))\r\nval oops = InternalServerError(\"Oops\")\r\nval anyStatus = Status(488)(\"Strange response type\")','???',22,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(14,'import play.api.http.HttpEntity\r\n\r\ndef index = Action {\r\n  Result(\r\n    header = ResponseHeader(200, Map.empty),\r\n    body = HttpEntity.Strict(ByteString(\"Hello world!\"), Some(\"text/plain\"))\r\n  )\r\n}','直接定义结果',22,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(17,'def index(name:String) = TODO','TODO dummy page',20,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(18,'提供的方法','GET, PATCH, POST, PUT, DELETE, HEAD',23,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(19,'GET   /clients/all          controllers.Clients.list()','静态路径',23,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(20,'GET   /clients/:id          controllers.Clients.show(id: Long)','动态路径',23,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(21,'GET   /files/*name          controllers.Application.download(name)','假设url是GET /files/images/logo.png\r\n那么就捕获images/logo.png ',23,'2016-03-30 00:00:00','2016-03-31 00:00:00',NULL),(22,'GET   /items/$id<[0-9]+>    controllers.Items.show(id: Long)','使用正则表达式',23,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(24,'yum install -y ntpdate','???',24,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(25,'时间服务器','time.windows.com',24,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(27,'???','yum -y install yum-utils\r\n使用yum-utils中的yumdownloader工具\r\n#查看工具是否存在\r\nrpm -ql yum-utils| grep yumdownloader\r\n#使用工具下载rpm,例子:下载gcc,他默认是放在当前目录\r\nyumdownloader gcc',25,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(28,'group','#列出所有可以安装的GroupList\r\n yum grouplist\r\n#查看\r\n yum groupinfo <groupname>\r\n#安装\r\n yum groupinstall <groupname>\r\n#更新\r\n yum groupupdate <groupname>\r\n#移除\r\n yum groupremove <groupname>',25,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(29,'查看系统中启动的yum资源','yum repolist { enabled | disabled | all }',25,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(30,'EPEL','	\r\nyum install epel-release\r\n',26,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(31,'WANdiscoSVN','/etc/yum.repos.d/wandisco-svn.repo:\r\nname=WANdisco SVN Repo 1.8\r\nenabled=1\r\nbaseurl=http://opensource.wandisco.com/centos/6/svn-1.8/RPMS/$basearch/\r\ngpgcheck=1\r\ngpgkey=http://opensource.wandisco.com/RPM-GPG-KEY-WANdisco',26,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(32,'yum install bind-utils','',27,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(33,'lsof（list open files）是一个列出当前系统(进程)打开文件的工具。','???',28,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(34,'编译安装','yum install -y gcc zlib-devel pcre-devel make wget tar\r\nwget http://nginx.org/download/nginx-1.6.2.tar.gz\r\ntar zxvf nginx-1.6.2.tar.gz\r\ncd nginx-1.6.2 && ./configure --prefix=/usr/local/nginx && make && make install\r\n/usr/local/nginx/sbin/nginx',30,'2016-03-30 00:00:00','2016-03-30 00:00:00',NULL),(35,'nginx 1.9 tcp负载','???',30,'2016-03-30 00:00:00','2016-03-30 00:00:00',10000),(36,'concat','合并2个列为一个字符串\r\nselect concat(a,\'-\',b) from',40,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(37,'substr','截取字符串',40,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(38,'创建表，并使用orc存储','create table Addresses (\r\n  name string,\r\n  street string,\r\n  city string,\r\n  state string,\r\n  zip int\r\n) stored as orc tblproperties (\"orc.compress\"=\"NONE\");',42,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(39,'配置mysql作为元数据存储','???',43,'2016-03-31 00:00:00','2016-03-31 00:00:00',10001),(40,'执行shell','import os\r\ntasks = os.popen(\'curl -X GET -H \"Accept: application/json\" http://192.168.12.40:8080/v2/apps/nginx421a/tasks\').read()',44,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(41,'https://repo.typesafe.com/typesafe/releases/\r\nhttps://repository.apache.org/content/groups/public/\r\nhttps://github.com/InMobi/mvn-repo/raw/master/snapshots/\r\nhttps://repo.maven.apache.org/maven2/\r\nhttps://repository.cloudera.com/artifactory/cloudera-repos/\r\nhttp://repo.spring.io/ext-release-local\r\nhttp://repo.spring.io/libs-release\r\nhttp://repository.apache.org/snapshots','???',51,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(42,'使用socks5代理','在jvm参数中添加\r\n-DsocksProxyHost=127.0.0.1  -DsocksProxyPort=9700',47,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(43,'http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo','???',51,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(44,'安装apache 2.4.12','centos6.5 64',53,'2016-03-31 00:00:00','2016-03-31 00:00:00',10002),(45,'5.6版本','修改/etc/my.cnf配置文件\r\n\r\n[mysqld]\r\ncharacter-set-server=utf8\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n查看\r\n\r\nmysql> show variables like \'character%\';',55,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(46,'alt + command + l','格式化代码',59,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(47,'ctrl+j','生成常规函数，比如main',58,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(48,'快捷键列表(mac)','???',59,'2016-03-31 00:00:00','2016-03-31 00:00:00',10003),(49,'debug','	\r\nF9            resume programe 恢复程序\r\nAlt+F10       show execution point 显示执行断点\r\nF8            Step Over 相当于eclipse的f6      跳到下一步\r\nF7            Step Into 相当于eclipse的f5就是  进入到代码\r\nAlt+shift+F7  Force Step Into 这个是强制进入代码\r\nShift+F8      Step Out  相当于eclipse的f8跳到下一个断点，也相当于eclipse的f7跳出函数\r\nAtl+F9        Run To Cursor 运行到光标处\r\nctrl+shift+F9   debug运行java类\r\nctrl+shift+F10  正常运行java类\r\nalt+F8          debug时选中查看值',58,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(50,'Ctrl + Alt + O ','优化import自动去除无用的import语句，蛮不错的一个功能。 ',58,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(51,'Ctrl + Alt + Shift + L','格式化当前文件代码',58,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(52,'CTRL + SHIFT + U','大小写切换',58,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(53,'编译consul-template','???',62,'2016-03-31 00:00:00','2016-03-31 00:00:00',10004),(54,'检查表是否存在','println(Await.result(db.run(MTable.getTables), Duration.Inf).toList)',64,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(55,'can\'t find method result on TableQuery with slick 3.0.0-RC1','I did hit the same problem and here is what I did to get rid of it:\r\n\r\nUpdated IntelliJ to version 14.1.3\r\nUsed Scala Plugin version 1.5\r\nMy scala version is 2.11.6\r\n\r\nI hope this helps somebody who might run into the same problem!',65,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(57,'zeppelin配置--yarn','zeppelin-env.sh\r\n  MASTER=yarn-client\r\n  HADOOP_CONF_DIR=/xxx/etc/hadoop\r\nbin/zeppelin-daemon.sh start',71,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(58,'在某个项目中，使用自己的仓库\r\n','在build.gradle文件中添加如下:\r\nrepositories {\r\n    maven {\r\n        url \"http://repo.mycompany.com/maven2\"\r\n    }\r\n}',50,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(59,'dir','内存dump到磁盘的位置\r\n可以在cli中用save手动刷,或shutdown save',72,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(60,'???','???',73,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(61,'-Xmx100m','最大head内存',74,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(62,'jconsole.exe','图形化用户界面的监测工具，主要用于监测并显示运行于Java平台上的应用程序的性能和资源占用等信息。',75,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(63,'jstat -gcutil','',76,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(64,'1. jmap -dump:live,file=a.map \r\n2. jhat a.map ','???',77,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(65,'application/java-archive','???',80,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(66,'application/java-archive','???',80,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(67,'400','Bad Request\r\nHTTP 1.1 中头缺失HOST协议，就回报400',81,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(68,'# The version parameter is optional. E.g. /api/list-all?version=3.0\r\nGET   /api/list-all         controllers.Api.list(version: Option[String])','可选参数',23,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(69,'routes.Application.hello','把action方法作为url',23,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(70,'Ok(\"Hello World!\")','Content-Type 自动设置为 text/plain',82,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(71,'Ok(<message>Hello World!</message>.as(\"application/xml\")','xml',82,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(72,'Ok(<h1>Hello World!</h1>).as(\"text/html\")\r\nOk(<h1>Hello World!</h1>).as(HTML)','使用HTML和使用text/html区别是使用HTML play会自动设置为text/html; charset=utf-8',82,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(73,'改变http responses text的charset 值','class Application extends Controller {\r\n\r\n  implicit val myCustomCharset = Codec.utf_8\r\n//  implicit val myCustomCharset = Codec.javaSupported(\"iso-8859-1\")\r\n\r\n  def index = Action {\r\n    Ok(<h1>Hello World!</h1>).as(HTML)\r\n  }\r\n\r\n}',82,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(74,'Ok(\"Welcome!\").withSession(\"connected\" -> \"user@gmail.com\")','设置session的值',83,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(75,'Ok(\"Hello World!\").withSession(request.session + (\"saidHello\" -> \"yes\"))','在session中添加值',83,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(76,'Ok(\"Theme reset!\").withSession(request.session - \"theme\")','移除session的值',83,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(77,'def index = Action { request =>\r\n  request.session.get(\"connected\").map { user =>\r\n    Ok(\"Hello \" + user)\r\n  }.getOrElse {\r\n    Unauthorized(\"Oops, you are not connected\")\r\n  }\r\n}','从action中读取session的值',83,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(78,'Ok(\"Bye\").withNewSession','开启一起新的session，等价于开启一个无值的session，等价于丢失上一个session保存的值',83,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(79,'text/plain','当设置为此值时，浏览器不会对body中的数据做处理，只是简单的当作文本展示出来',80,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(80,'text/html','浏览器把body的内容作为html数据解析后展示出来',80,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(81,'ActionBuilder','在Action中添加逻辑',85,'2016-03-31 00:00:00','2016-03-31 00:00:00',10005),(82,'dmesg','查看系统启动信息',13,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(83,'ActionTransformer','在request中添加信息\r\n具体来说就是你想在request中点出你自定义的属性：比如:request.user',85,'2016-03-31 00:00:00','2016-03-31 00:00:00',10006),(84,'ActionFilter','想在某些条件下过滤请求，并立即返回结果',85,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(85,'ActionRefiner','在某些条件下，增加一些定制的信息到request中',85,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(86,'泛型类','class Pair[T, S](val first: T, val second: S)\r\nval abc = new Pair(\"a\", 1)\r\nval abc2 = new Pair[String,Int](\"a\",1)  //显示的指定类型',88,'2016-03-31 00:00:00','2016-03-31 00:00:00',NULL),(87,'泛型函数','def getFun[T](a: Array[T]) = a.length\r\nval a1 = Array(1,2,3);\r\ngetFun(a1);\r\ngetFun[Int](a1);\r\nval a2 = Array(\"1\",\"2\",\"3\");\r\ngetFun(a1)\r\ngetFun[String](a2)',88,'2016-03-31 00:00:00','2016-04-01 00:00:00',NULL),(88,' yum -y install openssh-clients','???',89,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(89,'apexins.sql 	\r\n','--安装apex\r\n例子：@apexins.sql USERS USERS TEMP /i/',91,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(90,'apxremov.sql\r\n','--删除apex',91,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(91,'admin','http://hostname:port/ords/apex_admin',93,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(92,'开发\r\n','http://hostname:port/ords/apex',93,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(93,'打开web控制台','java -cp h2-1.4.187.jar  org.h2.tools.Server',94,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(94,'打开H2控制台(web)','$TYPESAFE_HOME//activator.bat h2-browser\r\n$TYPESAFE_HOME//activator h2-browser',96,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(95,'类型变量界定 T<:Comparable[T]，界定T是Comparable的子类型','class A\r\nclass A1 extends A\r\ndef fun[R <: A](a: R) = println(a.getClass)\r\nfun(new A1)\r\n\r\n',88,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(96,'类型变量界定 下界\r\n定义T是R的子类','class Pair[T](val first: T, val second: T) {\r\n  def replaceFirst[R >: T](newFirst: T) = new Pair[R](newFirst, second)\r\n  //或者 def replaceFirst[R >: T](newFirst: T) = new Pair(newFirst, second)\r\n}\r\nor\r\nclass A\r\nclass A1 extends A\r\ndef fun[R >: A1](a: R) = println(a.getClass)\r\nfun(new A)',88,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(97,'视图界定','???',88,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(98,'型变 +','class A\r\nclass A1 extends A\r\nclass P[+T]\r\ndef fun[R <: P[A]](a: R) = println(a.getClass)\r\nfun(new P[A1])\r\n\r\nps:如果P[T]不用P[+T]，那么fun执行会报错,因为A1是A的子类，但是P[A1]不是P[A]的子类,+T意思跟着一起变\r\n',88,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(99,'型变 -','class A\r\nclass A1 extends A\r\nclass Friend[-T]\r\ndef fun(f: Friend[A1]) = println(f.getClass)\r\nfun(new Friend[A])',88,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(100,'scp -P','指定端口',111,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(101,'scp -v ','显示进度',111,'2016-04-01 00:00:00','2016-04-01 00:00:00',NULL),(102,'2.1 字符集','js是用unicode字符集编写',118,'2016-04-04 00:00:00','2016-04-04 00:00:00',NULL),(103,'2.1.1 区分大小写','javascript是区分大小写的',118,'2016-04-04 00:00:00','2016-04-04 00:00:00',NULL),(104,'2.1.2 空格、换行符和格式控制符','在js中可以随意使用空格和换行，在2.5中有一种意外情况',118,'2016-04-04 00:00:00','2016-04-04 00:00:00',NULL),(105,'2.1.3 unicode转义序列','',118,'2016-04-04 00:00:00','2016-04-04 00:00:00',NULL),(106,'2.1.4 标准化','???',118,'2016-04-04 00:00:00','2016-04-04 00:00:00',NULL),(107,'2.2 注释','// 单行注释\r\n/*...*/ 多行注释',118,'2016-04-04 00:00:00','2016-04-04 00:00:00',NULL),(108,'2.3 直接量','直接量的意思，直接使用数据值，如:\r\n12 //数字\r\ntrue //布尔值',118,'2016-04-04 00:00:00','2016-04-04 00:00:00',NULL),(109,'2.4 标识符和保留字','标识符就是一个名字，用于对变量和函数进行命名，或者用作某些循环语句中的跳转位置的标记。\r\njs标识符必须以字母，下划线或美元符开始。后续的字符可以是字母、数字、下划线或美元符(数字是不允许作为首字符出现的)',118,'2016-04-04 00:00:00','2016-04-04 00:00:00',NULL),(110,'2.4 标识符和保留字','保留字:\r\n  break delete function return typeof case do if switch var catch else \r\n  in this void continue false instanceof throw while debugger finally \r\n  new true with default for null try\r\nECMAScript5中的保留字:\r\n  class const enum export extends import super\r\n以下关键字在严格模式下是保留字:\r\n  implements let private public yield interface package protected static\r\n严格模式下对下列标识符做了严格限制，不能用作变量名、函数名或参数名\r\n  arguments eval\r\nECMAScript3保留字:\r\n',118,'2016-04-04 00:00:00','2016-04-04 00:00:00',NULL),(111,'OPTIMIZER_USE_INVISIBLE_INDEXES','#当值为TRUE时使得优化器把不可见索引视作普通索引看待。\n#session/system',3908,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(112,'查看索引是否为不可见索引','SELECT INDEX_NAME ,VISIBILITY FROM DBA_INDEXES WHERE INDEX_NAME =\'XXX\';',3909,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(113,'DBA_TEMP_FILES ','--DBA_TEMP_FILES describes all temporary files (tempfiles) in the database.\n查看临时表空间的DATA FILE',3910,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(114,'DBA_TEMP_FREE_SPACE','查看TEMP TS的空间使用情况。',3910,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(115,'ALL_SQLSET','显示用户可见的STS相关的信息',3911,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(116,'DBA_ADVISOR_TASKS','这个视图显示database中所有的task。其中每一个task有一行row。每个task有一个唯一的名字给到拥有者。Task names are just informational and no uniqueness is enforced within any other namespace.\nRelated View:USER_ADVISOR_TASKS displays information about the tasks owned by the current user. This view does not display the OWNER column.',3912,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(117,'V$ADVISOR_PROGRESS',NULL,3912,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(118,'DBA_ADVISOR_LOG','显示database中所有task的状态，包括进程监视和完成状态。这个view中每个task有一个row。\nRelated View:USER_ADVISOR_LOG displays information about the current state of the tasks owned by the current user. This view does not display the OWNER column.\n',3912,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(119,'ORA-01547','ORA-01547ORA-01547: warning: RECOVER succeeded but OPEN RESETLOGS would get error below\n我是在archivelog模式下，热备份，但是没有备份archivelog，只备份了datafile，在恢复的时候导致不一致，无法用resetlogs打开数据库，可以使用_allow_resetlogs_corruption=TRUE这个隐藏参数解决。',3913,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(120,'_ALLOW_RESETLOGS_CORRUPTION','强制启动数据库，设置此参数之后，在数据库Open过程中，Oracle会跳过某些一致性检查，从而使数据库可能跳过不一致状态。',3914,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(121,'v$system_event','整个instance级别的event和time.\n当time_statistics设置为true时，这个试图包含时间统计\n',3915,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(122,'v$session_wait','V$SESSION_WAIT displays the current or last wait for each session\nThe P1RAW, P2RAW, and P3RAW columns display the same values as the P1, P2, and P3 columns, except that the numbers are displayed in hexadecimal.',3916,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(123,'v$session_history','显示连接中的session中，最后10个等待的event.',3917,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(124,'BINARY_FLOAT和BINARY_DOUBLE','简介/使用DOC-1861/1862/1863',3918,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(125,'ADRCI> SPOOL /XXX/XXX/XX\nADRCI> SHOW  ALERT\nADRCI> SPOOL OFF','捕获ALERT文件内容到另一个文件中。',3919,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(126,'DESCRIBE INCIDENT','显示INCIDENT中所有的字段，可以用于SHOW INCIDENT来详细显示某个事件的谓词。另外这个命令也只能在SHOW HOMEPATH显示中指定一个主目录不然会报错DIA-48448.',3919,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(127,'NVL','把null替换为一个你指定的值:select NVL(salary,\"abc\") from employees;',3920,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(128,'<','小于',3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(129,'<=','小于等于',3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(130,'ANY','与一个列表中的任意值进行比较',3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(131,'LIKE',NULL,3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(132,'IS NULL',NULL,3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(133,'IS NAN',NULL,3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(134,'IS INFINITE',NULL,3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(135,'NOT IN',NULL,3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(136,'NOT BETWEEN',NULL,3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(137,'AND/OR/NOT','AND的优先级高于OR/比较操作符的优先级高于AND',3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(138,'笛卡尔乘积','假设一个表50行，另一个表100行，那么回返回5000行',3921,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(139,'查看data file的物理读/写次数，物理读/写时间','select name,phyrds,phywrts,readtim,writetim from v$filestat a ,v$datafile b where a.file#=b.file# order by readtim desc;',3922,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(140,'SHOW INCIDENT [-P \"INCIDENT_ID-XXXX\"] \n              [-MODE DETAIL|BASIC|BRIEF]','-P指定谓词，显示指定的事件号\n-MODE显示这个事件的详细信息,他的三个选项用于显示详细信息不同的程度。',3923,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(141,'SHOW PROBLEM','显示ADR可用的主目录中的问题',3923,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(142,'动态注册','代码示例',3924,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(143,'注册DB到listener','SQL> alter system register;',3924,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(144,'查看当前DB scn','SELECT CURRENT_SCN FROM V$DATABASE;',3925,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(145,'FLASHBACK ON object_name','闪回某个对象权限',3926,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(146,'SELECT ANY DICTIONARY','查询任何字典,用于恢复点的使用',3926,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(147,'查看回收站',' SHOW RECYCLEBIN;',3927,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(148,'查看回收站','SELECT object_name AS recycle_name, original_name, type \nFROM   recyclebin;\n',3927,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(149,'DBA_RECYCLEBIN','回收站信息',3928,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(150,'FLASHBACK DROP','闪回被删除的表',3929,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(151,'不完全恢复','基于恢复点/时间点/SCN/ARCHIVELOG的不完全恢复',3930,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(152,'只读表空间','默认情况下，即使丢失了制度的数据文件，RMAN也不会在执行完全数据库还原操作时还原只读的数据文件。',3930,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(153,'对restore database preview显示结果的思考',NULL,3931,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(154,'v$flash_recovery_area_usage','查看闪回区的空间使用情况',3932,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(155,'v$recovery_file_dest','查看闪回区的空间使用情况，可回收空间数量/已用空间/总空间。',3932,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(156,'sts概念','1.创建STS\n2.传输STS\n由12c doc:19 Managing SQL Tuning Sets提供',3933,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(157,'授权视图给某个用户','授权v$fixed_table给hr用户\nSQL> grant select on v_$fixed_table to hr;',3934,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(158,'ORA-19813','ORA-19813ORA-19813: cannot have unavailable file /u01/app/flash_recovery_area/GOKU/backupset/2014_03_20/o1_mf_nnndf_TAG20140320T091951_9lnjkr5o_.bkp in DB_RECOVERY_FILE_DEST,在fra中不能为unavailable',3935,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(159,'v$backup_archivelog_details','包含所有可还原归档日志的信息',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(160,'v$backup_async_io','提供正在进行的和最近完成的RMAN备份的还原的性能信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(161,'v$backup_controlfile_details','提供可还原控制文件的信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(162,'v$backup_copy_details','提供可用的控制文件和数据文件副本的相关信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(163,'v$backup_corruption','提供从控制文件获得的关于数据文件备份损坏的相关信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(164,'v$backup_datafile','提供所有的rman备份(包括映像副本和备份集)的信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(165,'v$backup_piece_details','提供所有可用的备份片信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(166,'v$backup_redolog','提供从控制文件获得的在备份集中的归档日志的信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(167,'v$backup_set','提供从控制文件获得的备份集的信息',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(168,'v$backup_set_details','提供从控制文件获得备份集的详细信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(169,'v$backup_spfile','提供从控制文件获得的在备份集中的spfile信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(170,'v$backup_sync_io','提供正在进行的和最近完成的RMAN备份和还原的性能信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(171,'v$recovery_file','包含需要进行截至恢复的文件的状态信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(172,'v$recover','提供与恢复区有关的信息',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(173,'v$rman_backup_job_details','提供备份工作的详细信息',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(174,'v$rman_backup_type','提供rman备份类型的信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(175,'v$rman_configuration','提供rman的持久性配置设置有关的信息/显示的设置的rman configure',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(176,'v$rman_status','提供rman完成的和正在进行的工作的信息。',3936,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(177,'查看辅助TS使用空间','select sum(space_usage_kbytes) from v$sysaux_occupants ',3937,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(178,'BACKUP_TAPE_IO_SLAVES','开启异步I/O.默认false，如果设备支持异步I/O那么建议开启。如果开启这个参数，那么可以在allocate channel和configure channel命令的parms参数来定义内存cache的大小。',3938,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(179,'查看channel对应的server sessions','select sid,username,client_info from v$session where client_info is not null;',3939,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(180,'V$ARCHIVED_LOG',NULL,3940,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(181,'v$block_change_tracking','跟踪block文件相关信息',3940,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(182,'远程数据库复制',NULL,3941,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(183,'查看awr使用sysaux TS的空间','select occupant_name,occupant_desc,space_usage_kbytes/1024 USAGE_MB from v$sysaux_occupants where occupant_name like \'%AWR%\';',3942,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(184,'查看当前session不关闭和重启DB就可以设置的参数','select name，value，isdefault，isses_modifiable,issys_modifiable from v$parameter where issys_modifiable =\'IMMEDIATE\';',3943,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(185,'v$option','V$OPTION displays Oracle Database options and features. Typically, although not always, options must be separately licensed, whereas features come with the product and are enabled based on the product that is running (Standard Edition, Enterprise Edition, and so on).',3944,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(186,'查看只对新session生效的参数','select name，value，isdefault，isses_modifiable,issys_modifiable from v$parameter where isses_modifiable =\'DEFERRED\';',3945,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(187,'buffer cache命中率','select metric_name,value from v$sysmetric where metric_name =\'Buffer Cache Hit Ratio\';',3946,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(188,'V$SYSMETRIC','V$SYSMETRIC displays the system metric values captured for the most current time interval for both the long duration (60-second) and short duration (15-second) system metrics.\n显示系统度量值(有各个pool的命中率)，这个值捕获当前时间前推60秒和前推15秒的统计。',3947,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(189,'DB_BLOCK_SIZE',NULL,3948,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(190,'data dictionary--查看数据字典中命中率详单','select parameter,gets,getmisses,modifications,flushes,\n	(getmisses/decode(gets,0,1,gets)) getmiss_ratio,\n	(case when(getmisses/decode(gets,0,1,gets))>0.1 then \'*\'else\' \'end) \" \" \nfrom v$rowcache \nwhere gets+getmisses<>0;\n--当最后一列为*时，说明此行的数据字典区域命中率低于90%',3949,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(191,'library cache--查看命中率','select sum(pins) \"Hits\",sum(reloads) \"Misses\",(sum(pins)/(sum(reloads)+sum(pins))*100) \"HIT RATIO%\" from v$librarycache;',3949,'2016-04-08 00:15:06','2016-04-08 00:15:06',NULL),(192,'library cache--查看各个namespace命中率详单','select namespace,\n    GETHITRATIO*100 GETHITRATIO,--get命中率\n    PINHITRATIO*100 PINHITRATIO,--pin命中率\n    reloads,--reload次数\n    reloads/decode(pins,0,1,pins)*100 reloadratio --reload和pin的比率\nfrom v$librarycache;\n--get命中率和pin名中应该接近1',3949,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(193,'x$ksmsp','[k]ernal [S]torage [M]emory Management [S]GA Hea[p], 其中每一行都代表着shared pool中的一个chunk.',3950,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(194,'BUFFER_POOL_RECYCLE','设置回收池大小(不能使用)',3951,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(195,'v$rollname','V$ROLLNAME lists the names of all online rollback segments. It can only be accessed when the database is open.',3952,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(196,'archive log',NULL,3953,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(197,'数据文件copy',NULL,3953,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(198,'损坏的数据块',NULL,3953,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(199,'V$BACKUP_CORRUPTION','坏块的历史视图',3954,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(200,'V$DATABASE_BLOCK_CORRUPTION','当前的坏块视图',3954,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(201,'ts_pitr_objects_to_be_dropped','查看在表空间中所创建的对象的时间和名字。',3955,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(202,'迁移DB，在不同平台之间','http://www.itpub.net/forum.php?mod=viewthread&tid=1775009\nhttp://tech.it168.com/db/2007-12-19/200712191131170_2.shtml\n<<rman备份与恢复>>359页14.5',3956,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(203,'查看当前系统中在线的某个用户的event','select event from v$session_event where sid =(select sid from V$SESSION where username=\'HR\');',3957,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(204,'v$event_name',NULL,3958,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(205,'V$SESSION_WAIT_CLASS','V$SESSION_WAIT_CLASS displays the time spent in various wait event operations on a per-session basis.',3959,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(206,'V$ACTIVE_SESSION_HISTORY','ASH取样database中活跃的session。他每秒执行一次快照。一个session在cpu上，或者等待一个event(这个event等待不包括idle等待)。\nThis view contains one row for each active session per sample and returns the latest session sample rows first. A majority of the columns describing the session in the active session history are present in the V$SESSION view.\n\nThe P1RAW, P2RAW, and P3RAW columns display the same values as the P1, P2, and P3 columns, except that the numbers are displayed in hexadecimal.',3959,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(207,'删除DB','SQL>alter system enable restricted session;\nRMAN> DROP DATABASE INCLUDING backups;',3960,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(208,'v$backup_piece','提供从控制文件获得的备份片的信息。',3961,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(209,'v$backup_spfile_details','提供从控制文件获得的在备份集中的spifle的详细信息。',3961,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(210,'v$rman_output','提供由rman报告的消息',3961,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(211,'DBWR_IO_SLAVES',NULL,3962,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(212,'查看RMAN备份时正在使用的sid','select sid,spid,client_info\nfrom v$process p,v$session s\nwhere p.addr=s.paddr\nand client_info like \'%rman%\';\n',3963,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(213,'CONTROL FILE_RECORD_KEEP_TIME','控制文件内容保留天数，包括有关rman的信息',3964,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(214,'v$backup_files',NULL,3965,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(215,'不完全恢复---12c_doc',NULL,3966,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(216,'不完全恢复---恢复到之前的化生','恢复到之前的化身',3966,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(217,'v$buffer_pool_statistics','V$BUFFER_POOL_STATISTICS displays statistics about all buffer pools available for the instance.',3967,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(218,'_DB_AGING_TOUCH_TIME','再次递增touch计数所需要的秒数',3968,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(219,'V$UNDOSTAT','V$UNDOSTAT displays a histogram of statistical data to show how well the system is working. The available statistics include undo space consumption, transaction concurrency, and length of queries executed in the instance. You can use this view to estimate the amount of undo space required for the current workload. Oracle uses this view to tune undo usage in the system. The view returns NULL values if the system is in manual undo management mode.\n\nEach row in the view keeps statistics collected in the instance for a 10-minute interval. The rows are in descending order by the BEGIN_TIME column value. Each row belongs to the time interval marked by (BEGIN_TIME, END_TIME). Each column represents the data collected for the particular statistic in that time interval. The first row of the view contains statistics for the (partial) current time period. The view contains a total of 576 rows, spanning a 4 day cycle.',3969,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(220,'flashback SCN in an Abandoned Incarnation Branch','flashback到DB之前某个化生中的某个位置',3970,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(221,'通过sql语句text来查看sql_id','select sql_id from v$sqlarea where sql_text like \'select * %\';',3971,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(222,'使用PL/SQL来优化sql text使之统一格式化','PL/SQL执行sql语句会统一把SQL语句改为大写，多余的空格合并为一个空格。\n出自--Oracle Database 10g 性能调整与优化(122页 4.5.1)',3972,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(223,'library cache概念','Library cache 查找sql的计算基于构建词语句的字符的ASCII值，所以SELECT（大写）和select（小写），是不同的语句，需要再次解析。',3972,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(224,'DB_BLOCK_LRU_LATCHES','LRU链表作为一个内存对象，对它的访问是需要进行锁(latch)控制的，以防止多个用户进程同时使用一个空闲缓存块。DB_BLOCK_LRU_LATCHES设置了LUR latch的数量范围。Oracle通过一系列的内部检测来决定是否使用这个参数值。如果这个参数没有设置，Oracle会自动为它计算出一个值。一般来说，oracle计算出来的值是比较合理，无需再去修改。\n9i以后这个参数是隐含参数。对于隐含参数，我建议在没有得到Oracle支持的情况下不要做修改，否则，如果修改了，Oracle是可以拒绝为你做支持的。',3973,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(225,'将表移动到keep池','ALTER TABLE STATE_LIST STORAGE(buffer_pool keep);',3974,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(226,'SPRT_AREA_SIZE',NULL,3975,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(227,'V$COPY_CORRUPTION',NULL,3976,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(228,'增量备份','差异性/累积性增量备份/跟踪文件的配置',3977,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(229,'查看DB的化身号(受resetlogs影响)','SELECT PRIOR_INCARNATION# FROM V$DATABASE_INCARNATION WHERE  STATUS = \'CURRENT\';\n',3978,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(230,'V$SESSION_EVENT','当前在线的session的event信息',3979,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(231,'查看最占用资源的sql语句，并排名','select * from (select sql_text,rank() over(order by buffer_gets desc) as rank_bufgets,\n to_char(100*ratio_to_report(buffer_gets) over (),\'999.99\') pct_bufegts,buffer_gets from v$sql)\nwhere rank_bufgets<11;',3980,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(232,'V$SQL','--V$SQL列出shared sql area中的sql统计，不使用group by，因为需要列出原始sql text的每一个子游标。正常情况下，每个查询执行完成后就会更新这个视图，但是对于查询超过5秒的查询，这个查询的统计会每5秒一次更新这个视图。',3981,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(233,'V$SESSMETRIC','V$SESSMETRIC displays the metric values for all sessions.',3982,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(234,'db_file_multiblock_read_count','                                                                                     doc-12c',3983,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(235,'_KSM_GRANULE_SIZE','设置instance granule大小',3984,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(236,'data dictionary--查看data dictionary命中率','select ((1-(sum(getmisses)/(sum(gets)+sum(getmisses))))*100) \"Hit Rate\" from v$rowcache where gets+getmisses<>0;\n--命中率应该在95%以上.',3985,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(237,'instance granule分配准则','SGA_MAX_SIZE小于128M,_ksm_granule_size就等于4M;\nSGA_MAX_SIZE大于等于128M,_ksm_granule_size就等于16M;\n_ksm_granule_size的大小，意味着SGA中各个组件的大小，都已_ksm_granule_size为倍数增加',3986,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(238,'CURSOR_SHARING',NULL,3987,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(239,'v$rowcache','V$ROWCACHE displays statistics for data dictionary activity. Each row contains statistics for one data dictionary cache.\nV$ROWCACHE显示数据字典活动的统计信息。每个row包含一个数据字典cache的统计信息。',3988,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(240,'library cache--查看librarycache的整体reload率','select  sum(pins) \"Hits\",sum(reloads) \"Misses\",((sum(reloads)/sum(pins)) *100) \"Reload %\" from v$librarycache;\n',3989,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(241,'shared pool--查看的当前大小/空余空间/百分比','select S.CURRENT_SIZE/1024/1024 \"Current Shared Pool MB\",g.bytes/1024/1024 as \"Free MB\",g.bytes/s.current_size  \"Percent Free\" from V$SGA_DYNAMIC_COMPONENTS s,v$sgastat g where s.component=\'shared pool\' and g.name=\'free memory\' and g.pool=\'shared pool\';',3989,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(242,'v$db_object_cache','V$DB_OBJECT_CACHE displays database objects that are cached in the library cache. Objects include tables, indexes, clusters, synonym definitions, PL/SQL procedures and packages, and triggers.\n--可以查看尚未固定且需要的空间较大，可能会引起问题的对象。',3990,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(243,'v$librarycache',NULL,3990,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(244,'两个不同的sql语句，但是object可以共享解析','select * from orders;和select sum(order_amount) from orders虽然是不同的语句，但是DD cache中，orders这个对象已经缓存在DD中了。',3991,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(245,'存储的PLSQL比匿名PLSQL执行要快','因为存储的plsql是存储数据字典中的，而匿名不是所以，对于再次执行而言，不能被cache 和重用。',3991,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(246,'DD与library cache调优优先级','SGA中分配内存算是首先分配字典缓存，所以，如果library cache正确无误，DD cache也必然正确。',3991,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(247,'flashback open resetlogs','flashback到当前database化生开始的位置',3992,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(248,'DBA_HIST_SQLSTAT','DBA_HIST_SQLSTAT displays historical information about SQL statistics. This view captures the top SQL statements based on a set of criteria and captures the statistics information from V$SQL. The total value is the value of the statistics since instance startup. The delta value is the value of the statistics from the BEGIN_INTERVAL_TIME to the END_INTERVAL_TIME in the DBA_HIST_SNAPSHOT view.\n这个视图显示关系sql统计的历史信息。这个视图从V$SQL视图中捕获TOP SQL.\nThis view is used with the DBA_HIST_OPTIMIZER_ENV, DBA_HIST_SQLTEXT, and DBA_HIST_SQL_PLAN views to provide a complete picture of historical SQL statistics.',3993,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(249,'复制数据库的三种类型','1.使用rman备份复制并访问目标数据库\n2.使用rman备份复制并无需访问目标数据库\n3.不适用备份复制，复制活动的数据库\n',3994,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(250,'DBA_HIST_SQL_PLAN','用于检索DBA_HIST_SQLSTAT中sql语句的执行计划',3995,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(251,'撤销权限','SQL> REVOKE privilege_name FROM username;',3996,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(252,'赋予权限','SQL> GRANT privilege_name TO username;',3996,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(253,'delete any table','删除任何表',3997,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(254,'FLASHBACK TABLE','Flashback table需要的权限/FLASHBACK TABLE先决条件/FLASHBACK TABLE操作/在FLASHBACK TABLE保持triggers enabled',3998,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(255,'查看恢复点','SELECT NAME, SCN, TIME FROM V$RESTORE_POINT;',3999,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(256,'查看表是否有依赖','SELECT other.owner, other.table_name\n    FROM sys.all_constraints this, sys.all_constraints other\n    WHERE  this.owner = schema_name\n    AND    this.table_name = table_name\n    AND    this.r_owner = other.owner\n    AND    this.r_constraint_name = other.constraint_name\n    AND    this.constraint_type=\'R\';\n#schema_name/table_name需要替换',3999,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(257,'FLASHBACK DATABASE',NULL,4000,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(258,'查看redo file之间切换花费的时间(秒)','select b.recid,\n    to_char(b.first_time,\'dd-mm-yyyy hh24:mi:ss\') start_time,\n    a.recid,\n    to_char(a.first_time,\'dd-mm-yyyy hh24:mi:ss\') end_time,\n    round(((a.first_time-b.first_time)*25)*60,2) min \nfrom v$log_history a,v$log_history b where a.recid=b.recid+1 order by a.first_time asc;\n',4001,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(259,'查看redo log file信息','select a.member,b.*\nfrom v$logfile a,v$log b\nwhere a.group# = b.group#;',4001,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(260,'v$sqlarea','v$sqlarea displays statistics on shared sql areas and contains one row per sql string. it provides statistics on sql statements that are in memory, parsed, and ready for execution.',4002,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(261,'将表移动到recycle池','alter table abc storage(buffer_pool recycle);',4003,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(262,'_DB_PERCENT_HOT_DEFAULT','热点区域里的缓冲区比例，默认值50',4004,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(263,'v$pga_target_advice','pga顾问;',4005,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(264,'SGA_MAX_SIZE',NULL,4006,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(265,'自制事务--示例',NULL,4007,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(266,'基于函数的索引---可以为指定key建立索引\n从而缩小index size','例如表T上processed_flag列内有很多值，我只为值为N的值，建立索引',4008,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(267,'注入式攻击示例,不使用绑定变量的下场','见文档。',4009,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(268,'dbms_flashback.get_system_change_number','查看系统scn号',4010,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(269,'多版本控制示例--plsql循环插入','通过t表本身做循环插入t表。',4011,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(270,'查看保护级别','--SQL> select protection_level from v$database;',4012,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(271,'dbms_lock.sleep(5);','停顿5秒',4013,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(272,'查看表所在的TS,EXTENT_ID,EXTENT大小,FILE ID,EXTENT起始BLOCKID','SELECT TABLESPACE_NAME,EXTENT_ID,BYTES,FILE_ID,BLOCK_ID FROM DBA_EXTENTS WHERE SEGMENT_NAME=\'GOKU_DOC\';',4014,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(273,'V$LOG',NULL,4015,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(274,'ONLINE/OFFLINE DATA FILE','ALTER DATABASE DATAFILE \'FILE_NAME\' OFFLINE/ONLINE;\n#recovery需要用到。',4016,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(275,'查看备份进度','SELECT SID,SERIAL#,opname,CONTEXT,SOFAR,TOTALWORK,\n		ROUND(SOFAR/TOTALWORK*100,2) \"%_COMPLETE\"\nFROM V$SESSION_LONGOPS \nWHERE OPNAME LIKE \'RMAN%\'\nAND OPNAME NOT LIKE \'%AGGREGATE%\'\nAND TOTALWORK !=0\nAND SOFAR <>TOTALWORK order by 7 desc;',4017,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(276,'DBA_OUTSTANDING_ALERTS','FRA添加或删除文件，这些事件会被记录到alert日志中。比如空间不够。',4018,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(277,'创建口令文件','ORAPWD FILE=orapwsid PASSWORD=ROBERT ENTRIES=20 force=<y/n> ignorecase=<y/n> nosysdba=<y/n>;\n#force:if(y)覆盖已经存在的密码文件\n#ignorecase:if(y)密码区分大小写\n#ENTRIES:密码文件中保存账户的数量\n#format - use format=12 for new 12c features like SYSBACKUP, SYSDG and SYSKM support, longer identifiers, etc.If not specified, format=12 is default (optional),\n--远程连接使用的是设置密码文件的密码，而不是sys或system的用户密码',4019,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(278,'TOM对分区使用的建议','如果可以按照某个属性自然的对数据完成区间分区,那么就是用区间分区,而不是散列分区或列表分区。散列列表和列表分区能够提供优点，但是在分区消除方面不如区间分区。如果你像使用PDML功能或对一个区间分区使用并行索引扫描，则建议区间分区中再使用列表分区或散列分区。',4020,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(279,'查询分区表所在的表空间的容量使用情况','SELECT B.TABLESPACE_NAME,\n	MBYTES_ALLOC,\n	MBYTES_FREE\nFROM(SELECT ROUND(SUM(BYTES)/1024/1024) MBYTES_FREE,\n			TABLESPACE_NAME\n		FROM DBA_FREE_SPACE\n		GROUP BY TABLESPACE_NAME) A,\n	(SELECT ROUND(SUM(BYTES)/1024/1024) MBYTES_ALLOC,\n			TABLESPACE_NAME\n		FROM DBA_DATA_FILES\n		GROUP BY TABLESPACE_NAME) B\nWHERE   A.TABLESPACE_NAME(+) = B.TABLESPACE_NAME \n	AND B.TABLESPACE_NAME IN(\'TS1\',\'TS0\')\n	/\n',4021,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(280,'分区表--允许行移动','ALTER TABLE TABLE_NAME ENABLE ROW MOVEMENT;	\n1.如果一个分区的行因为更新，而导致它不再属于这个分区，需要换分区，如果这个表不能行移动那么就会报错\n2.行移动的同时ROWID也会变化\n3.执行行移动(分区表),实际是删除一行，在插入一行。\n',4022,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(281,'局部前缀索引和局部非前缀索引都可以来进行分区消除',NULL,4023,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(282,'分区索引分区种类/局部索引分类',NULL,4023,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(283,'ORA-01543','ORA-01543创建分区时，分区的名字一样了，会包这个错误',4024,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(284,'全局索引概念','全局索引的索引键一定从该索引的索引分区键开始.',4025,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(285,'全局索引在线维护---以一种数据仓库技术来示范','数据仓库技术是:把新数据导入分区表，把老的分区导出到新的表，然后删除老的分区，在这个操作中的任何步骤，都会使得全局索引不可用。',4025,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(286,'局部索引和唯一性约束','如果要在分区索引上建立唯一性约束unipue/primary key，那么分区键必须包含在索引中，否则无法创建针对局部分区索引的唯一性约束',4025,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(287,'局部分区索引对OLTP性能影响','索引散列分区',4025,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(288,'b*tree---反向键索引测试','反向键索引和正常索引的区别主要在buffer BUSY WANITS上.',4026,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(289,'b*tree---降序索引的概念和用户/测试','#降序索引，用于减少排序操作，在执行计划中。',4026,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(290,'DBA_INDEXES','ALL_INDEXES DESCRIBES THE INDEXES ON THE TABLES ACCESSIBLE TO THE CURRENT USER. \n使用DBMS_STATS包可以收集统计信息，放在这个视图中\n\nRELATED VIEWS\n•DBA_INDEXES DESCRIBES ALL INDEXES IN THE DATABASE.\n\n•USER_INDEXES DESCRIBES THE INDEXES OWNED BY THE CURRENT USER. THIS VIEW DOES NOT DISPLAY THE OWNER COLUMN.\n\nNOTE:\nCOLUMN NAMES FOLLOWED BY AN ASTERISK ARE POPULATED ONLY IF YOU COLLECT STATISTICS ON THE INDEX USING THE DBMS_STATS PACKAGE.',4027,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(291,'B*TREE---B*TREE索引适用在哪种情况','1.只有当访问表中很少一部分行的情况下.\n2.可以只用索引来回答查询，而不需要使用表的情况下,那这样的查询访问表中多少行都没有关系。\n',4028,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(292,'B*TREE---性能相关---物理组织(INDEX RANGE SCAN)','如何物理的组织列的数据，非常影响INDEX RANGE SCAN的性能',4028,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(293,'SPFILE','设置spfile地址。例子:\nalert system set spfile=\'?/dbs/spfilesid.ora\'; #?是$ORACLE_HOME',4029,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(294,'查看表上的索引的聚簇因子和BLOCK','SELECT A.INDEX_NAME,B.NUM_ROWS,B.BLOCKS,A.CLUSTERING_FACTOR \nFROM USER_INDEXES A, USER_TABLES B WHERE A.TABLE_NAME IN(\'DISORGANIZED\',\'COLOCATED\')\nAND A.TABLE_NAME = B.TABLE_NAME;',4030,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(295,'查看oracle当前进程相关信息','select addr,pid,spid,username,program from v$process;\naddr #进程地址/pid #oracle进程 id/spid #对应os的进程id号/username #进程的所属用户/program #进程名',4031,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(296,'查看当前进程等待的latch','select latchwait from v$process;',4031,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(297,'BACKGROUND_DUMP_DEST',NULL,4032,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(298,'USER_DUMP_DEST',NULL,4032,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(299,'v$controlfile_record_section','控制文件包含的内容',4033,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(300,'v$controlfile','列出当前instance里面control file 所有的信息',4033,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(301,'查看执行计划---dbms_xplan.cursor','--方法1(查看上一次执行的sql的执行计划):\n  --SELECT * from table(dbms_xplan.display_cursor(null,null,\'BASIC LAST ALLSTATS\'));\n--方法2(通过sql_id查看执行计划):\n  --select * from table(dbms_xplan.display_cursor(\'a67wqmkfb9j65\',null,\'typical -predicate -rows\'));',4034,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(302,'查看当前scn号-1','select dbms_flashback.get_system_change_number from dual;',4035,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(303,'查看当前session的trace file位置','select value from v$diag_info where name=\'default trace file\';',4036,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(304,'创建表在keep buffer pool','CREATE table abc(a int) storage(buffer_pool keep);',4037,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(305,'_DB_AGING_TOUCH_TIME','递增touch计数所需要的秒数，默认值3',4038,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(306,'_DB_AGING_HOT_CRITERIA','把缓冲区移到lru链的mru端的阈值，默认值2',4038,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(307,'v$pga_target_advice_histogram;','pga顾问;',4039,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(308,'DB_KEEP_CACHE_SIZE',NULL,4040,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(309,'DB_RECYCLE_CACHE_SIZE',NULL,4040,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(310,'锁定指定行,然后处理,并且需要多用户(并发进行)','目的:多个用户并发的查找第一个未锁定,未处理的记录(这里的未处理，指的是下面创建的表中processed_flag列为\'n\'值的记录,具体怎么才算是未处理可以根据实际情况来制定)，然后锁定，并处理这条记录。',4041,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(311,'skip locked','11g新个性，使用发发见doc-1568-方法二',4041,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(312,'多版本控制示例--游标open','通过打开游标后，删除数据来观察多版本控制。',4042,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(313,'_TRACE_FILES_PUBIC','设置是否所有用户都可以查看TRACE FILE\nTRUE/FALSE',4043,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(314,'SHARED SERVER连接过程','见文档',4044,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(315,'查看REDO FILE的状态/组/大小','SELECT GROUP#,SEQUENCE#,STATUS,BYTES FROM V$LOG;',4045,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(316,'查看REDO FILE的位置','SELECT GROUP#,MEMBER FROM V$LOGFILE;',4045,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(317,'区间分区','根据分区表定义的界限,这些分区的界限都是事先定义好的,然后把数据放入不同的分区下,他与间隔分区不同，区间分区不会自己创建(扩展)分区数\n--可以把不同的分区存放在一个TS下',4046,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(318,'TRACEFILE_IDENTIFER','对跟踪文件做标记',4047,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(319,'分区对于OLAP系统的作用','TOM:分区非常适合OLAP系统，他可以消除扫描大的SEGMENT,而且可以频繁的使用并行查询。',4048,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(320,'散列分区','把数据平均分布到,创建分区表时定义的分区中,注意创建HASH 分区时分区数一定是2的幕.',4049,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(321,'组合分区','就是把不同的分区组合在一起.',4049,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(322,'UTL_SMTP','发送MAIL,见文档',4050,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(323,'BITMAP---DML语句相互限制实验','INSERT/UPDATE/DELETE/相互作用，查看阻塞情况。',4051,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(324,'DB_FILE_MULTIBLOCK_READ_COUNT','设置多块读的数量。\n以下三种情况会导致，多块读的数目少于这个参数指定的数量,(换句话说,这个参数是怎么进行多块读的)\n1.读segment heard时是单块读\n2.物理读不能跨越extent\n3.部分数据块已经被cache，除非直接读，否则不会从I/O子系统重新读取。如果一个多块读被发出，要求读block 1 到block 10，但是block 5已经在buffer cache中，那么多块读会被分成2次第一次是block 1 到block 4 第二次是block 6 到block 10.\nps:此外如果有系统统计是，这个参数被系统统计的mbrc的值取代。\n',4052,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(325,'_SERIAL_DIRECT_READ ','直接路径读/direct path read\n值:TRUE/FLASE',4052,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(326,'OPTIMIZER_INDEX_COST_ADJ','设置优化器，在执行时偏向索引还是偏向全表扫描。',4052,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(327,'OPTIMIZER_INDEX_COST_ADJ---参数设置例子','例子:把本该索引扫描的执行，变成全表扫描。',4052,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(328,'DBA_TAB_STATISTICS','表的统计信息',4053,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(329,'ALL_TAB_COL_STATISTICS','列的统计信息',4053,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(330,'DBMS_STATS','统计信息相关操作。',4054,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(331,'ALL_IND_STATISTICS','索引统计信息',4055,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(332,'B*TREE---性能相关---聚簇因子2','主要是针对RANGE SCAN有影响。',4056,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(333,'DBMS_STATS.GATHER_SCHEMA_STATS','收集SCHEMA下的所有对象的统计信息。',4057,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(334,'DBMS_STATS.GATHER_TABLE_STATS','收集表的统计信息。',4057,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(335,'配置备份加密',NULL,4058,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(336,'备份保留策略/设置和维护','1.基于窗口\n2.基于冗余\n3.无保留策略',4058,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(337,'基于函数的索引---ORA-04150','#创建自建函数的基于函数的索引碰到的错误。\n#如果index 的key的长度超过block的限制，就会报这个错。这个错误的起因是函数的返回值，返回的类型是VARCHAR2(4000);',4059,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(338,'基于函数的索引---ORA-01743','ORA-01743警告,关于创建基于函数索引的不确定性所引发的错误',4059,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(339,'ORA-04150','ORA-04150DOC-1658',4060,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(340,'B*TREE---概念:视图是不能建立索引的','#你可以建立在表上。',4061,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(341,'DBMS_STATS.GATHER_INDEX_STATS','收集索引的统计信息',4062,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(342,'DBMS_STATS.GATHER_FIXED_OBJECTS_STATS','收集动态性能视图的统计信息。',4062,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(343,'DBMS_STATS.GATHER_DICTIONARY_STATS','收集数据字典的对象统计信息.',4062,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(344,'DBMS_STATS.GATHER_DATABASE_STATS','收集整个数据库的对象统计信息',4062,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(345,'dbms_rowid.rowid_block_number(rowid)','通过rowid计算block号',4063,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(346,'index cluster table',NULL,4064,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(347,'LOG_ARCHIVE_DEST_N','可以指定31个归档路径.另外设置归档路径(本地，远程),包括一些归档参数.',4065,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(348,'开启主键附加日志','alter database add supplemental log data(primary key) columns;',4066,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(349,'列出archive信息','archive log list;（这个是sqlplus的命令）',4067,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(350,'LOG_ARCHIVE_FORMAT','设置archive log file的命名格式，具体见本文档。',4068,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(351,'v$archived_log','v$archived_log displays archived log information from the control file, including archive log names. an archive log record is inserted after the online redo log is successfully archived or cleared (name column is null if the log was cleared). if the log is archived twice, there will be two archived log records with the same thread#, sequence#, and first_change#, but with a different name. an archive log record is also inserted when an archive log is restored from a backup set or a copy and whenever a copy of a log is made with the rman copy command.\n\n从control file显示被归档的archive log file，包括archive log name.',4069,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(352,'v$archive_dest_status','v$archive_dest_status displays runtime and configuration information for the archived redo log destinations. the information in this view does not persist across an instance shutdown.',4069,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(353,'v$archive_processes','v$archive_processes displays the state of the various arch processes for the instance.',4069,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(354,'查看当前db是否为archive mode','select log_mode from v$database;\n',4070,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(355,'查看表的pctfree/pctused','select pct_free,pct_used from dba_tables where table_name = \'table_assm2\'',4071,'2016-04-08 00:15:07','2016-04-08 00:15:07',NULL),(356,'查询某个索引，索引了哪个表的哪些列','select table_name,index_name,column_name,column_position from user_ind_columns \n	where index_name=\'xxx\' order by column_position;\n',4072,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(357,'查看执行计划---指标',NULL,4073,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(358,'v$recover_file','显示当前需要被media recovery的files的status',4074,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(359,'NLS_INITCAP','首字母大写',4075,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(360,'全局索引\n--OLTP中使用全局索引同样可以带来分区消除\n--同时使用全局索引在OLTP中和非分区表性能同样好','关键在于,你的查询到底需不需要访问表，是否只要索引就可以回答你的查询。\ntom总结:使用全局索引，你同样可以得到、快速访问(不必非分区表读块多)/完整性(约束)/可用性(分区消除)。',4076,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(361,'b*tree---压缩键索引的概念和实验','#压缩键索引概念\n#查看压缩效果，和，过度压缩的效果。',4077,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(362,'BITMAP---适用环境','BITMAP适用于查询环境，不适用于插入或UPDATE频繁的环境。',4077,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(363,'查看当前scn号-2','select current_scn from v$database;',4078,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(364,'几种不走索引的原因',NULL,4079,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(365,'索引BLOCK空间可以被重用','如果一个索引BLOCK上有1~10个KEY，其中5被删除掉了，那么这个5不会被11或13或100给重用，这是肯定的，如果这个BLOCK上的KEY全被删除了，那么整个BLOCK可以被其他KEY重用。',4079,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(366,'建立索引时，不同的列的前后顺序的区别.','一般认为，列上的重复值少的应该排在前面，多的排在后面，但是未必一样要这样。',4079,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(367,'查看系统时间负荷分布','SELECT * FROM V$SYS_TIME_MODEL;',4080,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(368,'查看某SESSION的时间模型分布','SELECT * FROM V$SESS_TIME_MODEL;',4080,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(369,'设置sql标识和trace','1.设置客户端标记/设置客户端信息/设置模块名称/设置操作名称\n2.开启SQL TRACE',4081,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(370,'查看本instance的运行时长','SELECT TO_CHAR(startup_time, \'DD-MON-YYYY HH24:MI:SS\') started_at,\n       TRUNC(SYSDATE - (startup_time)) || \'day(s).\' ||\n       TRUNC(24 *\n             ((SYSDATE - startup_time) - TRUNC(SYSDATE - startup_time))) ||\n       \'hour（s）.\' || MOD(TRUNC(1400 * ((SYSDATE - STARTUP_TIME) -\n                               TRUNC(SYSDATE - STARTUP_TIME))),\n                         60) || \'minute(s).\' ||\n       MOD(TRUNC(86400 *\n                 ((SYSDATE - STARTUP_TIME) - TRUNC(SYSDATE - STARTUP_TIME))),\n           60) || \'seconds\' uptime\n  FROM v$instance;',4082,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(371,'dbms_metadata.get_dll','--查看表的定义\n--set long 999999\n--select dbms_metadata.get_ddl(\'TABLE\',\'XXXXXX\',\'SCHEMA\') FROM DUAL;',4083,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(372,'dbms_random.random','生成一个随机数',4084,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(373,'dbms_utility.get_hash_value','计算hash值/dbms_utility.get_hash_value（1,2,1024)\n1. 要被计算的位置是1\n2. 2是计算出来的hash值的起始值\n3. 1024是hash值的上限，是指，计算出来的hash本身不超过1024，不算和2号位置的相加。\nps其实计算出来的hash值本身而言，只和1和1024位置的值有关系，2号位置的意思，比如1号位置计算出来的值是100，而2个位置值是0，那么最后得到的值就是100，如果2号位置是5，那么得到的值就是105，看你需要的值了\"\n',4084,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(374,'dbms_lob.substr','相当于to_char，是不过to_char不能处理超过4000个字节的数据。/select dbms_lob.substr(\'aaa\') from dual;',4084,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(375,'index organized table',NULL,4085,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(376,'将数据库处于归档模式 （5步）','1.shutdown normal/immediate/transactional\n2.startup mount\n3.alter database archivelog;#alter database noarchivelog;处于非归档状态.\n4.alter database open\n5.全备数据库（还要关闭db）\n',4086,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(377,'手动归档','alter system archive log current;',4087,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(378,'开启附加日志','alter database add supplemental log data;',4087,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(379,'LOG_ARCHIVE_MAX_PROCESSES','specifies the maximum number of ARCn processes that can be created.',4088,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(380,'log_archive_min_succeed_dest','指定至少需要完成多少个归档路径(log_archive_dest_n)，才能确认归档成功。',4088,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(381,'LOG_ARCHIVE_DEST_STATE','此参数是对每一个log_archive_dest_n参数的设置，可以设置为可用，和不可用等3个选项。',4088,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(382,'v$archive_dest','v$archive_dest displays, for the current instance, all of the destinations in the data guard configuration, including each destination\'s current value, mode, and status.',4089,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(383,'v$archive','v$archive displays information about redo log files in need of archiving. each row displays information for one thread. this information is also available in v$log. oracle recommends that you use v$log.',4089,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(384,'v$archive_gap','v$archive_gap displays information about archive gaps on a standby database. this view can be used to find out the current archive gap that is blocking recovery for the current recovery incarnation.',4089,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(385,'查询表所使用的索引','select table_name,index_name from dba_indexes where table_name=\'xxx\';',4090,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(386,'查看是否开启附加日志','select log_mode,supplemental_log_data_min from v$database;',4091,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(387,'查看表的存储属性','select dbms_metadata.get_ddl(\'table\',\'t\') from dual;',4092,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(388,'RMAN-06564','\n数据库已经使用了SFPILE，就不能在$ORACLE_HOME/DBS/下恢复，只能回到其他位置。',4093,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(389,'监控RMAN的所有操作或输出','SELECT * FROM (SELECT * FROM V$RMAN_OUTPUT ORDER BY STAMP DESC) WHERE ROWNUM <10;\n#这里只显示了最后10行的操作或输出',4094,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(390,'b*tree---B*TREE的一些感念','#B*TREE索引的结构概念\n#对于INDEX RANGE SCAN，如SELECT * FROM T WHERE BETWEEN 20 AND 30，索引的查找方式\n#B*TREE索引中不存在非唯一(NONUIQUE)条目',4095,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(391,'b*tree---反向键索引的概念','#反向键索引\n#观察反向键索引如何存储的?\n#反向键索引的限制',4095,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(392,'B*TREE---性能相关---聚簇因子(clustering factor)','影响 INDEX RANGE SCAN',4095,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(393,'基于函数的索引---使用自建的函数','#使用自建的函数，必须在函数中加入deterministic。\n#测试自建函数使用和不适用deterministic的性能差异\n#测试使用和不使用基于函数的索引的差别。\n#测试insert到有基于函数索引的表的性能差别。',4095,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(394,'基于函数的索引---实现有选择的唯一性','#始终保持表中某一个状态的命名，只有一个。具体见文档',4095,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(395,'ORA-01743','ORA-01743DOC-1660',4096,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(396,'B*TREE---和NULL的关系','#B*TREE索引不是不存储NULL，而是不存储完全为NULL的条目。',4097,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(397,'B*TREE---外键应该和不应该加索引的情况','1.加索引的情况\n2.不加索引的情况\n3.测试某个子表由于外键未加索引，而被锁住.',4097,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(398,'OPTIMIZER_MODE','OPTIMIZER_MODE ESTABLISHES THE DEFAULT BEHAVIOR FOR CHOOSING AN OPTIMIZATION APPROACH FOR THE INSTANCE.',4098,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(399,'OPTIMIZER_FEATURES_ENABLE','限制优化器的版本，用于禁用最新的优化器特性.\n查询当前系统可设置的优化器版本。\nselect value from v$parameter_valid_values where name=\'optimizer_features_enable\';',4098,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(400,'DB_FILE_MULTIBLOCK_READ_COUNT---TEST','测试不同的参数设置，对多块读性能的影响',4098,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(401,'DB_FILE_MULTIBLOCK_READ_COUNT---TEST','以下情况会用到这个参数设置的值\n1.FULL SCAN TABLE\n2.INDEX FAST FULL SCAN\n以下情况不会用到这个参数设置的值(做过实验)\n1.index range scan(大范围的范围扫描，增大或缩小不会对成本有影响)。',4098,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(402,'DB_FILE_MULTIBLOCK_READ_COUNT---ORACLE_DOC','文档',4098,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(403,'查看执行计划---dbms_xplan.display','显示plan_table$表中的执行计划:\n    step1:EXPLAIN PLAN FOR SELECT last_name FROM employees;\n    step2:SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY());\n    DISPLAY():中可以设置3个参数，见文档。',4099,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(404,'查看role拥有的权限','select privilege from role_sys_privs where role=\'aq_administrator_role\';',4100,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(405,'创建队列','见文档',4101,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(406,'查看执行计划---通过视图','select id,lpad(\' \',2*(level-1))||operation||\' \'||options||\' \'||\n	object_name||\' \'||decode(id,0,\'cost=\'||cost) \"query plan_table\"\nfrom v$sql_plan\nstart with id=0\n		and sql_id =\'\'\n		and plan_hash_value =\nconnect by prior id = parent_id\n		and sql_id =\'\'\n		and plan_hash_value=\n',4102,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(407,'dbms_flashback.get_system_change_number','显示当前系统的scn号',4103,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(408,'v$log_history','v$log_history displays log history information from the control file.',4104,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(409,'switch log file checkpoint','见文档',4105,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(410,'SGA_MAX_SIZE','*Dynamic:N',4106,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(411,'SGA_TARGET','*Dynamic:Y\n#大于0就是开启自动内存管理，为0就是关闭.',4106,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(412,'buffer cache命中率','select sum(decode(name,\'physical reads\',value,0)) Physical_Reads,\n	sum(decode(name,\'db block gets\',value,0)) DB_Block_Gets,\n	sum(decode(name,\'consistent gets\',value,0)) Consistent_Gets,\n	(1-sum(decode(name,\'physical reads\',value,0)) /\n	(sum(decode(name,\'db block gets\',value,0))+\n	sum(decode(name,\'consistent gets\',value,0))))*100 hit_ratio\nfrom v$sysstat;\n#命中率应该大于95%',4107,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(413,'v$db_cache_advice','data buffer cache顾问/使用顾问必须开启参数db_cache_advice\nV$DB_CACHE_ADVICE contains rows that predict the number of physical reads for the cache size corresponding to each row. The rows also compute a \"physical read factor,\" which is the ratio of the number of estimated reads to the number of reads actually performed by the real buffer cache during the measurement interval.',4108,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(414,'shared pool--查看shared pool命中率','select ((1-(sum(getmisses) / (sum(gets) + sum(getmisses))))*100) hit_rate \nfrom v$rowcache \nwhere gets+getmisses<>0;\n',4109,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(415,'_DB_AGING_STAY_COUNT','当移到mru端时把touch计数重置为该值，默认为0',4110,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(416,'_DB_AGING_COOL_COUNT','当移到lru段时把touch计数重置为该值',4110,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(417,'查看instance是不是rac instance','select parallel from v$instance;',4111,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(418,'查看是否配置了stream','select * from dba_streams_administrator;',4111,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(419,'查看sga组件的大小和变化','SELECT * from v$sga_dynamic_components;',4112,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(420,'查询SEGMENT所在TS的位置','SELECT BLOCK_SIZE * BLOCK_ID FROM DBA_TABLESPACES WHERE TABLESPACE_NAME=TS_NAME;\n#BLOCK_ID,为SEGMENT的第一个EXTENT的起始ID.文档1581',4113,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(421,'V$LOGFILE',NULL,4114,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(422,'DBA_HIST_LOG','回荡日志空间使用的情况。',4115,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(423,'V$RECOVERY_FILE_DEST','查看FRA区域的使用情况（概况）',4116,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(424,'重命名表','sql>rename customer1 to customer;',4117,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(425,'V$FLASH_RECOVERY_AREA_USAGE','具体查看某类文件使用FRA区域的大小。\n某类文件可能是ARCHIVE LOG/DATA FILE/BACKUP FILE/and so on',4118,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(426,'V$BACKUP_PIECE',NULL,4119,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(427,'DIAGNOSTIC_DEST','设置TRACE的根目录',4120,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(428,'V$DIAG_INFO','查看TRACE FILE的结构.',4121,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(429,'REMOTE_LOGIN_PASSWORDFILE','设置是否使用密码文件，如果使用，是否在多个数据库共享这个密码文件.\nNONE/SHARED/EXCLUSIVE  #非动态参数。',4122,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(430,'CONTROL_FILE_RECORD_KEEP_TIME','默认7天，设置为0表示控制文件内容不会被重用，控制文件无限增长。\n0为不做限制，可以无限增长。',4123,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(431,'普通用户查看INSTANCE参数','见文档使用DBMS_UTILITY.GET_PARAMETER_VALUE',4124,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(432,'SPFILE设置','ALTER SYSTEM SET PARAMETER=VALUE <COMMENT=\'TEXT\'> <DEFERRED> <SCOPE=MEMORY|SPFILE|BOTH> <SID=\'SID|*\'>;\n#COMMENT=注释\n#scope=记录在spfile中还是memory还是这两个都记录\n#sid=可以指定sid，对于rac环境中*代表所有instance\n#deferred=某些参数需要这个设置这个参数，设置后，当前session不生效这个参数设置的值，之后的session生效.可以查看select name from v$parameter where issys_modifiable=\'DEFERRED\';',4124,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(433,'查看哪些参数是之后登录SESSION生效','SELECT NAME FROM V$PARAMETER WHERE ISSYS_MODIFIABLE=\'DEFERRED\';',4125,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(434,'重置PARAMETER值','ALTER SYSTEM RESET PARAMETER <SCOPE=SPFILE|MEMORY|BOTH> SID=\'SID|*\';',4126,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(435,'SPFILE与PFILE相互转换','CREATE PFILE[=\'XXXX\'] FROM SPFILE[=\'XXXX\'];\nCREATE SPFILE[=\'XXXX\'] FROM PFILE[=\'XXXX\'];',4126,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(436,'DBMS_MONITOR.SESSION_TRACE_ENABLE','开启针对SESSION的跟踪',4127,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(437,'V$WAITSTAT',NULL,4128,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(438,'开启SESSION TRACE','ALTER SESSION SET EVENTS \'10046 TRACE NAME CONTEXT FOREVER ,LEVEL 12\';\n   或\ndoc 1612',4129,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(439,'DBMS_MONITOR.SQL_TRACE','开启SQL TRACE',4130,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(440,'对跟踪文件标记','PARAMETER :  TRACEFILE_IDENTIFER',4131,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(441,'查看INSTANCE在ALERT LOG中记录的停机时间(包括崩溃)','查看停机时间,计算出的停机时间可能包括奔溃时间',4132,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(442,'间隔分区','类似于区间分区,不过他不用事先定义好各个分区,因为他可以自己根据情况创建分区.\n#为间隔分重命名.改为有意义的名字\nnumtoyminterval ( n, { \'YEAR\'|\'MONTH\'})\nnumtodsinterval ( n, { \'DAY\'|\'HOUR\'|\'MINUTE\'|\'SECOND\'})',4133,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(443,'分区对于OLTP系统的作用','TOM:OLTP很难在分区中得到性能的提高，而且使用分区要非常小心，但是分区对于OLTP而言可以得到管理负担减轻和更高可用性。',4134,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(444,'列表分区','根据分区表中用来分区的列事先定义值,然后把匹配定义的值的数据放入相应的分区。',4135,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(445,'引用分区','--这是一个父子关系,是对父表进行分区，而子表是根据父表来分区，但是子表在创建时创建语句是没有分区子句的,而只是增加了一个外键的完整性约束,而且这个外键与父表的分区键无关。\n--当在父表中增加一个分区时，子表也会自动增加一个与之对应的分区。',4135,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(446,'从内存中创建SPFILE/PFILE','CREATE SPFILE FROM MEMORY;\nCREATE PFILE FROM MEMORY;',4136,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(447,'ALL_PART_COL_STATISTICS','分区的列和直方图的信息',4137,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(448,'ALL_SUBPART_HISTOGRAMS','子分区的直方图信息。',4137,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(449,'ALL_IND_PARTITIONS','索引的分区统计信息',4137,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(450,'ALL_IND_SUBPARTITIONS','索引子分区的统计信息',4137,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(451,'DBMS_STATS.CREATE_EXTENDED_STATS','扩展的统计信息。\n创建函数的索引，会自动创建扩展的统计信息。',4138,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(452,'ALL_STAT_EXTENSIONS','扩展的统计信息。',4139,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(453,'查看表的直方图','SELECT ENDPOINT_NUMBER,ENDPOINT_VALUE FROM DBA_HISTOGRAMS \n    WHERE OWNER=\'HR\' AND TABLE_NAME=\'T\' AND COLUMN_NAME =\'ID\';',4140,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(454,'DBMS_STATS.DELETE_TABLE_STATS','删除统计信息',4141,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(455,'查看扩展的统计信息','SELECT * FROM ALL_STAT_EXTENSIONS WHERE OWNER=\'HR\' AND TABLE_NAME=\'T\';',4142,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(456,'DBMS_STATS.LOCK_SCHEMA_STATS','锁定SCHEMA下的对象的统计信息。',4143,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(457,'DBMS_STATS.LOCK_TABLE_STATS','锁定表的统计信息。',4143,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(458,'HASH PARTITION为什么分区数一定是2的幕','如果不是的话，数据分布将不均匀,例子见本文档',4144,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(459,'OPEN_CURSORS','单个会话能够打开的最大游标数.',4145,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(460,'SESSION_CACHED_CURSORS','每个SESSION可以被缓存的游标数.',4145,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(461,'DBMS_SQLTUNE.CREATE_TUNING_TASK','创建一个调优任务\n',4146,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(462,'DBMS_SQLTUNE.REPORT_TUNING_TASK','查看调优报告',4146,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(463,'DBMS_SQLTUNE.ACCEPT_SQL_PROFILE','接受SQL TUNING建议',4147,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(464,'SQLTUNE_CATEGORY','激活SQL PROFILE\n可以使用的值:true/false/sql概要指定类别的名称。\n一个会话在一定时期内只能激活单个类别的sql概要。',4148,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(465,'HINT的几个概念','*HINT有效域\n*用HINT来为SQL语句起别名\n*等等',4149,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(466,'PROFILE的文本标准化','是否消除字面量对SQL语句签名的影响。',4150,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(467,'ADMINISTER SQL MANAGEMENT OBJECT','创建/删除/更改SQL概要',4151,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(468,'PROFILE使用的注意事项','1.SQL PROFILE会影响，相同文本的两条SQL语句，他们有相同的签名，即使引用的对象在不同的模式下，profile同样会影响到他们.',4152,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(469,'查看PROFILE使用被语句使用到','1.EXPLAIN PLAN FOR SELECT * FROM T ORDER BY ID;\n2.SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY(NULL,NULL,\'BASIC+NOTE\'));\n3.会出现NOTE/SQL PROFILE \"IMPORT_SQL_PROFILE\" USED FOR THIS STATEMENT提示',4152,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(470,'移动PROFILE到另一个数据库','1.通过CREATE_STGTAB_SQLPROF创建舞台表\n2.通过PACK_STGTAB_SQLPROF从数据字典中将SQL概要复制到舞台表\n3.通过REMAP_STGTAB_SQLPROF改变存储在舞台表中SQL概要的名称和类别\n4.通过UNPACK_STGTAB_SQLPROF将舞台表中的SQL概要复制到数据字典中。',4153,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(471,'OPTIMIZER_CAPTURE_SQL_PLAN_BASELINES','SQL基线是否打开参数。\n可以在session和system级别使用。',4154,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(472,'DBA_SQL_PLAN_BASELINES','查看SQL基线',4155,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(473,'手动建立SQL基线','1.通过SQL语句来建立基线。\n2.通过SQL_ID来建立基线',4156,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(474,'SQL基线的概念','什么是SQL基线/以及作用.\nsql基线是存储在sysaux表空间中的，并且是有限额的，限额可以看select中的select语句，来查询',4157,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(475,'手动替换基线','在语句不改变的情况，依旧执行FULL HINT，但是却是用INDEX语句的执行计划。',4158,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(476,'修改基线占用SYSAUX表空间的比例','DBMS_SPM.CONFIGURE(PARAMETER_NAME=>\'SPACE_BUDGET_PERCENT\',PARAMETER_VALUE=>5);\n这里设置的是50%',4158,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(477,'PARTITION GANGE INLIST','访问多个分区，并且这些分区在解析时知道需要访问那些分区',4159,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(478,'PARTITION RANGE OR','对OR的谓语执行分区消除',4159,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(479,'PLAN_TABLE','计划表，存放执行计划',4160,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(480,'创建计划表','UTLXPLAN.SQL',4161,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(481,'V$SQL_WORKAREA',NULL,4162,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(482,'查看子游标','select status,sql_id,sql_child_number from v$session where username=\'xxx\';',4163,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(483,'查看子游标','SELECT SQL_ID,CHILD_NUMBER,SQL_TEXT FROM V$SQL WHERE SQL_TEXT LIKE \'XXX\';',4163,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(484,'shared pool--查看各个组件的内存大小','SELECT POOL,NAME,BYTES FROM V$SGASTAT WHERE POOL=\'shared pool\';\n',4164,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(485,'以下进程是不能KILL掉的','RDBMS部分\n	DBWR/LGWR/CKPT/PMON/SMON/RECO/MMAN/PSP0\nASM部分\n	ASMB/RBAL/DBW0/SMON/CKPT/PSP0/GMON/\n',4165,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(486,'_DB_AGING_HOT_CRITERIA','从8I开始,LRU上的BUFFER不在因为访问量高而移动，只要大于这个参数就是热块。\n把buffer移到LRU链的MRU端的阈值。',4166,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(487,'ALL_TAB_HISTOGRAMS','表的直方图信息',4167,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(488,'ALL_PART_HISTOGRAMS','分区的直方图信息。',4167,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(489,'ALL_SUBPART_COL_STATISTICS','子分区的列的统计信息和直方图信息。',4167,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(490,'DBMS_STATS.DROP_EXTENDED_STATS','删除扩展的统计信息。\n删除函数的索引会自动删除扩展的统计信息，而且如果函数的索引没有删除，是不能通过这个DBMS来删除扩展的统计信息，如果执行会报ORA-20000错误',4168,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(491,'DBMS_STATS.UNLOCK_SCHEMA_STATS','解锁SCHEMA下的对象的统计信息。',4168,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(492,'DBMS_STATS.UNLOCK_TABLE_STATS','解锁定表的统计信息。',4168,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(493,'DBMS_SQLTUNE.EXECUTE_TUNING_TASK','执行调优任务',4169,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(494,'查看SQL PROFILE','SELECT * FROM DBA_SQL_PROFILES',4170,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(495,'PROFILE一些概念和创建概述','PROFILE主要的一点，是当你无法修改SQL语句(因为他被封装在软件中)时，你可以通过PROFILE来改变这个SQL语句原有的执行计划。',4171,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(496,'修改PROFILE','*修改状态\n*修改描述',4172,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(497,'DBMS_SQLTUNE.ALTER_SQL_PROFILE','更改profile',4173,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(498,'删除PROFILE','DBMS_SQLTUNE.DROP_SQL_PROFILE(NAME =>\'FIRST_ROWS\',IGNORE=>\'TRUE\');',4174,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(499,'手动创建PROFILE，而不通过SQL顾问','DBMS_SQLTUNE.IMPORT_SQL_PROFILE(\n	NAME 		=>	\'IMPORT_SQL_PROFILE\',\n	DESCRIPTION	=>	\'SQL PROFILE CREATED MANUALLY\',\n	CATEGORY	=>	\'TEST\',\n	SQL_TEXT	=>	\'SELECT * FROM T ORDER BY ID\',\n	PROFILE		=>	SQLPROF_ATTR(\'FIRST_ROWS()\',\'OPTIMIZER_FEATRUES_ENABLE(DEFAULT)\'),\n	REPLACE		=> 	FALSE,\n	FURCE_MATCH	=>	FALSE\n)；',4174,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(500,'显示基线信息','SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY_SQL_PLAN_BASELINE(SQL_HANDLE =>\'XXXXXXXX\'));',4175,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(501,'_DB_PERCENT_HOT_DEFAULT','PERCENT OF DEFAULT BUFFER POOL CONSIDERED HOT.\n新的BLOCK被读入DATA BUFFER中的BUFFER时，是先读入这个参数的LRU百分比的位置，默认为50%,也就是LRU的一半。\n热点区域里的缓冲区比例\n这个参数设置的低可以增加原缓冲区的悬置时间，如果设置的高会使其快速被清除。',4176,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(502,'OPTIMIZER_CAPTURE_SQL_PLAN_BASELINES',NULL,4177,'2016-04-08 00:15:08','2016-04-08 00:15:08',NULL),(503,'LINUX> ADRCI EXEC=\"SHOW HOMES;show incident\"','在SHELL下执行ADRCI内的命令,如果执行多个命令用分好隔开.',4178,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(504,'SHOW TRACEFILE','显示每个adr主目录中所有的TRACE FILE',4178,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(505,'IPS CREATE PACKAGE;','打包主目录，有一个问题，这个打包命令只能应用于SHOW HOMEPATH只有一个主目录的情况下，如果SHOW HOMEPATH有多个主目录那么会报错 DIA-48448: THIS COMMAND DOES NOT SUPPORT MULTIPLE ADR HOMES',4178,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(506,'查看基线可以占用SYSAUX表空间的空间','SELECT PARAMETER_VALUE FROM DBA_SQL_MANAGEMENT_CONFIG WHERE PARAMETER_NAME=\'SPACE_BUDGET_PERCENT\';\n',4179,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(507,'查看分区对应的分区名','select partition_name,partition_position,num_rows\nfrom user_tab_partitions\nwhere table_name =\'T\' order by partition_position;',4180,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(508,'PARTITION RANGE SINGEL','访问单个分区',4181,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(509,'PARTITION GANGE ITERATOR','访问多个分区，并且这些分区在解析时是不确定要访问哪些分区',4181,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(510,'PARTITION RANGE ALL','访问所有分区',4181,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(511,'PARTITION RANGE EMPTY','查询的数据不存在分区中',4181,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(512,'笛卡尔乘积(cross join)','SELECT EMP.ENAME,DEPT.DNAME FROM EMP,DEPT;--oracle语法\nselect emp.ename,dept,dname from emp cross join dept;--ANSI-语法',4182,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(513,'V$SQL_PLAN',NULL,4183,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(514,'V$SQL_PLAN_STATISTCS',NULL,4183,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(515,'V$SQL_PLAN_STATISTICS_ALL','V$SQL_PLAN_STATISTICS_ALL contains memory usage statistics for row sources that use SQL memory (sort or hash-join). This view concatenates information in V$SQL_PLAN with execution statistics from V$SQL_PLAN_STATISTICS and V$SQL_WORKAREA.',4183,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(516,'ORA-4031','ORA-4031共享内存碎片化导致宕机',4184,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(517,'修复ORAINVENTORY(含RAC)',NULL,4185,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(518,'口令文件的作用和位置',NULL,4186,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(519,'CONTROL_FILES','指定控制文件的位置。',4187,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(520,'检查DATA FILE的有效性','ALTER SYSTEM CHECK DATAFILES;',4188,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(521,'_DB_BLOCK_WRITE_BATCH','1.这个参数在ORACLE 8.0.6还存在，在之后的版本没有了。他的作用是脏BUFFER达到多少时，通知DBWR来写他们到DATA FILE。这个值就是这个参数的值的一半。\n2.同时DBWR每次可写的块数也由这个参数来指定。\n3.如果DBWR在3秒内未有任何动作，那么DBWR对LRU列表查找指定数目的buffer，并将找到的脏buffer写到data file中，这个值就是这个参数的两倍。',4189,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(522,'_DB_BLOCK_MAX_SCAN_CNT','这个参数ORACLE 8.1.7还存在，之后的版本没有了.这个参数的表示，数据库进程需要data buffer中的buffer时，找了多少个buffer，还是没有找到可用的buffer，就通知dbwr来写脏buffer，这个值就是这个参数。',4189,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(523,'_DB_BLOCK_HASH_BUCKETS','DATA BUFFER中BUCKETS的数量',4189,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(524,'_OPTIM_PEEK_USER_BINDS','是否开启绑定变量窥探.',4190,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(525,'DIAGNOSTIC_DEST','定义diag目录的位置.',4191,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(526,'SHOW/SET BASE','显示/设置ADRCI根目录',4192,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(527,'SHOW HOMES','显示ADR可用的主目录',4192,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(528,'SHOW ALERT [-P][-tail 100]\nshow alert -p \"message_text like \'%ORA%\'\"','#-P \"XXX\" 显示指定的字符行\n#-tail 100 显示alert文件后100行数据\n#使用通配符来搜索alert文件',4192,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(529,'SHOW/SET HOMEPATH XXXX','#显示和设置当前ADR主目录的位置.你可以在show home看到很多个instance的主目录(当你的机器上面运行多个DB时)，如果你设置这个参数，也就是这个参数为空，那么oracle认为show home显示出来的所有目录都为\"当前\"状态，即为可用状态，如果你只想应用某一个路径，则可以在这个参数中指定。\n#SET HOMEPATH diag/rdbms/goku/goku diag/tnslsnr/localhost/listener 如果要同时激活多个主目录就用空格分隔，加在后面',4192,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(530,'DIA-48448','ADRCI导致\n使用IPS CREATE PACKAGE;所显示的错误，由于ADRCI> SHOW HOMEPATH 指定了多个主目录所导致，HOMEPATH只有当指定一个目录时才能执行IPS CREATE PACKAGE。',4193,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(531,'V$MEMORY_DYNAMIC_COMPONENTS','V$MEMORY_DYNAMIC_COMPONENTS displays information about the dynamic SGA components. This view summarizes information based on all completed SGA resize operations since instance startup. All sizes are expressed in bytes.',4194,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(532,'DBA_AUTOTASK_TASK','查看数据库中自动任务的名称和状态',4195,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(533,'DBA_SCHEDULER_WINDOWS','查看时间窗口',4196,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(534,'DBA_SCHEDULER_WINGROUP_MEMBERS','查看窗口组成员',4196,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(535,'DBA_RSRC_CONSUMER_GROUPS','DISPLAYS INFORMATION ABOUT ALL RESOURCE CONSUMER GROUPS IN THE DATABASE.\n显示关于DB中所有的资源消费组。',4197,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(536,'FLASHBACK ANY TABLE','可以闪回任何表',4198,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(537,'USER_FLASHBACK_ARCHIVE_TABLES','查询被作用的闪回数据归档的表.',4199,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(538,'DBA_FLASHBACK_ARCHIVE_TS','查看闪回数据归档所使用的表空间。',4199,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(539,'ORA-55610','ORA-55610在使用DROP TABLE XX;时报的错误.\nORA-55610: INVALID DDL STATEMENT ON HISTORY-TRACKED TABLE \n需要先关闭表的闪回数据归档。',4200,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(540,'虚拟列','#创建/增加/约束虚拟列。\n#虚拟列的注意事项\n',4201,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(541,'DDL_LOCK_TIMEOUT','DDL语句等待DML锁的时间。',4202,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(542,'LOCK TABLE','SQL> LOCK TABLE TABLE_NAME IN LOCKMODE MODE[WAIT|NOWAIT];\n#TABLE_NAME:表名\n#LOCKMODE:锁的模式,如:EXCLUSIVE(独有)\n#WAIT|NOWAIT为等或不等待这个锁。',4203,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(543,'V$TEMPFILE','查看正在使用的TEMP FILE的路径/大小',4204,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(544,'TEMP TS 管理',NULL,4205,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(545,'TEMP TABLE',NULL,4206,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(546,'V$RESTORE_POINT','查看DB的还原点，包括是不是永久被保留的还原点。',4207,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(547,'静态注册','代码示例',4208,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(548,'||','连接符',4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(549,'+ - * /','算数运算',4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(550,'=','等于',4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(551,'<>或!=','不等于',4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(552,'>','大于',4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(553,'>=','大于等于',4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(554,'SOME','等同于ANY操作符。应该使用ANY来代替SOME，因为ANY使用的更为广泛，且更易阅读',4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(555,'ALL','与一个列表中的所有值进行比较',4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(556,'IN',NULL,4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(557,'BETWEEN',NULL,4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(558,'NOT LIKE',NULL,4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(559,'IS NOT NULL',NULL,4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(560,'IS NOT NAN',NULL,4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(561,'IS NOT INFINITE',NULL,4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(562,'ORDER BY','ASC:升序/DESC:降序/可以用数字表达排序select中指定的column',4209,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(563,'db_keep_cache_size','设置保留池大小',4210,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(564,'db_recycle_cache_size','设置回收池大小',4210,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(565,'db_cache_advice','开启buffer cache顾问',4210,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(566,'v$buffer_pool','V$BUFFER_POOL displays information about all buffer pools available for the instance.',4211,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(567,'查看buffer cache中的各buffer类型的情况','select name,block_size,resize_state,current_size,buffers from v$buffer_pool;',4212,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(568,'V$SHARED_POOL_ADVICE','shared pool顾问',4213,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(569,'ADMINISTER SQL TUNING SET','使用DBMS_SQLTUNE管理自己的STS',4214,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(570,'ADMINISTER ANY SQL TUNING SET','使用DBMS_SQLTUNE管理任何STS',4214,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(571,'MEMORY_TARGET','大于0就是开启自动内存管理，为0就是关闭.\n*Dynamic:N',4215,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(572,'MEMORY_MAX_TARGET','*Dynamic:N',4215,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(573,'HASH_AREA_SIZE',NULL,4216,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(574,'DB_CACHE_SIZE',NULL,4217,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(575,'PGA_AGGREGATE_TARGET',NULL,4218,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(576,'V$MEMORY_TARGET_ADVICE','MEMORY顾问',4219,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(577,'DBA_AUTOTASK_SCHEDULE','查看所有的预定义的维护时间窗',4220,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(578,'启动/关闭 所有自动任务','EXEC DBMS_AUTO_TASK_ADMIN.DISABLE/ENABLE;',4221,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(579,'DBA_AUTOTASK_OPERATION',NULL,4222,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(580,'DBA_AUTOTASK_SCHEDULE','DISPLAYS THE SCHEDULE OF MAINTENANCE WINDOWS FOR THE NEXT 32 DAYS FOR EACH CLIENT.\n查看接下来32天的维护窗口的时间安排',4223,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(581,'DBA_SYS_PRIVS','查看DB中所有的权限。',4224,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(582,'FLASHBACK ARCHIVE ADMINISTER','可以管理闪回数据库归档,开启表的闪回数据归档.',4225,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(583,'DBA_FLASHBACK_ARCHIVE','查询有哪些闪回数据归档.查看默认的闪回数据归档。',4226,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(584,'Search','Search',4227,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(585,'v$session_event','显示连接中的session.累计的event。如果用于exit，那么这个session在这个视图中event，被移除',4228,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(586,'不可见索引(INVISITBLE INDEX):','#概念\n#不可见索引的使用例子',4229,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(587,'instance_number','INSTANCE_NUMBER is an Oracle RAC parameter that can be specified in parallel mode or exclusive mode. It specifies a unique number that maps the instance to one free list group for each database object created with storage parameter FREELIST GROUPS.\n//instance number 是一个Oracle RAC参数，这个参数可以指定在parallel mode or exclusive mode.他指定一个唯一的number，这个number\n\nThe INSTANCE parameter of the ALTER TABLE ... ALLOCATE EXTENT statement assigns an extent to a particular free list group. If you set INSTANCE_NUMBER to the value specified for the INSTANCE parameter, the instance uses that extent for inserts and for updates that expand rows.\n//ALTER TABLE ... ALLOCATE EXTENT 命令的INSTNCE 参数分配一个extent到一个指定的free list group.如果你设置instance_number\n\n这个参数的最大值是在CREATE DATABASE命令中制定的max instance number.The absolute maximum is operating system-dependent.\n',4230,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(588,'thread','THREAD已经被INSTANCE_NAME和INSTANCE_NUMBER参数取代，并且将废弃在未来的Oracle Database.\n    既然废弃了，就不设置对应的文档.',4230,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(589,'ROLLBACK_SEGMENTS','ROLLBACK_SEGMENTS allocates one or more rollback segments by name to this instance. If you set this parameter, the instance acquires all of the rollback segments named in this parameter, even if the number of rollback segments exceeds the minimum number required by the instance (calculated as TRANSACTIONS / TRANSACTIONS_PER_ROLLBACK_SEGMENT).\n\nYou cannot change the value of this parameter dynamically, but you can change its value and then restart the instance. Although this parameter usually specifies private rollback segments, it can also specify public rollback segments if they are not already in use.\n\nTo find the name, segment ID number, and status of each rollback segment in the database, query the data dictionary view DBA_ROLLBACK_SEGS.\n\n当undo_management是设置为auto，rollback_segment是被忽略',4231,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(590,'CLUSTER_INTERCONNECTS','这个参数可以被用在rac 环境中用来指明node之间的通讯地址.可以使用这个参数来压倒，默认的node间的配置,他是存储在cluster registry.\n这个程序也可用于数据仓库系统，来提高的node间相互连接的通讯的带宽需求。\n\n指定这个参数将重写并压倒以下：:\n•Network classifications stored by oifcfg in the OCR.\n•The default interconnect chosen by Oracle.\n\n\nIf you want to load-balance the interconnect, then Oracle recommends that you use link-bonding at the operating system level, even if you have two databases on the same server, so that multiple interconnects use the same address. Note that multiple private addresses provide load balancing, but do not provide failover unless bonded. If you specify multiple addresses in init.ora using CLUSTER_INTERCONNECTS, instead of bonding multiple addresses at the operating system level, then typically availability is reduced, because each network interface card failure will take down that instance.\n如果你在node间增加load-balance ,那么oracle推荐，你使用link-bonding在操作系统级别，即使你有两个DB在相同的服务器上，所以\n\nRefer to your vendor documentation for information about bonding interfaces. Some vendor bonding architectures may require the use of this parameter.\n\nIf you have multiple database instances on Oracle Real Application Clusters nodes and want to use a specific interface for each instance, then you can set the CLUSTER_INTERCONNECTS initialization parameter to the IP address for each database instance. For example:\nhr1.init.ora.cluster_interconnects=\"192.0.2.111\"\noltp3.init.ora.cluster_interconnects=\"192.0.2.112\"\n\n\nIf the Oracle RAC interconnect is configured to run on a different interface than the Oracle Clusterware interconnect, then this configuration can cause reduced availability, as failovers or instance evictions can be delayed if the Oracle RAC interconnect fails while the Oracle Clusterware NIC remains up.\n',4232,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(591,'CLUSTER_DATABASE_INSTANCES','这个参数是一个Oracle rac参数，指定rac database中instance数量。你必须设置这个参数对于每个instance。正常情况下你应该设置这个参数在rac中。合理的设置这个参数可以改善内存的使用情况。\n\nOracle使用这个参数值来计算默认的LARGE_POOL_SIZE的值，当PARALLEL_AUTOMATIC_TUNING设置为true的时候。\n   note:PARALLEL_AUTOMATIC_TUNING 参数已经被废弃。\n\nrac手册:在管理员管理的DB中这个参数的默认值是instane 数量，在基于策略的管理中，这个参数默认值为16,Oracle会使用这个参数值来计算其他一些的参数值，例如large_pool_size.',4232,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(592,'DML_LOCKS','A DML lock is a lock obtained on a table that is undergoing a DML operation (insert, update, delete). DML_LOCKS specifies the maximum number of DML locks—one for each table modified in a transaction. The value should equal the grand total of locks on tables currently referenced by all users. For example, if three users are modifying data in one table, then three entries would be required. If three users are modifying data in two tables, then six entries would be required.\n一个DML lock是一个获得table的lock，这个表接收一个DML操作(insert,update,delete).\nDML_LOCKS指定DML的最大数，这个数是对于在一个transaction中修改的每一个表的DML。这个值应该等于当前所有用户引用的表上的lock总数。例如如果3个用户正在修改一个表上的数据，那么3个entries将来被需求。如果3个用户正在修改两个表中的数据，那么6个entries在将来被需求。\n\nThe default value assumes an average of four tables referenced for each transaction. For some systems, this value may not be enough.\n默认值假设一个每个transaction引用4个表的平均值。对于某些系统这个值可能不够。\n\nenqueues是共享内存结构，这个结构连续访问database资源。如果你设置DML_LOCK为0，enqueues是disabled并且性能略微增强。然而，你应该明白以下限制，对于设置为0：\n\n•你不能使用DROP TABLE,CREATE INDEX命令\n\n•你不能使用使用明确的lock命令，例如LOCK TABLE 在EXCLUSIVE MODE中。\n\n•如果DML_LOCK设置为0，那么EM不能运行在恩赫instance上。\n\nOracle在并行DML的时候比串行DML的时候持有更多的lock.因此，如果你的database支持大量的并行DML，你可能需要来增加这个参数值。',4232,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(593,'查看oracle版本','linux>file $oracle_home/bin/oracle',4233,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(594,'查看表是否是分区表','select table_name,partitioned from dba_tables;',4234,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(595,'v$fixed_view_definition','这个视图包含所有fixed view的定义.',4235,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(596,'v$fixed_table','V$FIXED_TABLE displays all dynamic performance tables, views, and derived tables in the database. Some V$ tables (for example, V$ROLLNAME) refer to real tables and are therefore not listed.',4235,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(597,'ALL_VIEWS','ALL_VIEWS describes the views accessible to the current user.\nRelated Views:\nDBA_VIEWS describes all views in the database.\nUSER_VIEWS describes the views owned by the current user. This view does not display the OWNER column.',4235,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(598,'查看awr保留期','select dbms_stats.get_stats_history_retention from dual;',4236,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(599,'LICENSE_MAX_SESSIONS','弃用',4237,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(600,'查看不为默认值的参数','select name，value，isdefault，isses_modifiable,issys_modifiable from v$parameter where ISDEFAULT =\'FALSE\';',4238,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(601,'V$SGA_DYNAMIC_FREE_MEMORY','V$SGA_DYNAMIC_FREE_MEMORY displays information about the amount of SGA memory available for future dynamic SGA resize operations.\nsga未来可用，但现在还未分配给sga的内存数量。',4239,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(602,'查看执行过且有绑定变量的sql语句','select sql_id from v$sql_bind_capture;',4240,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(603,'Segment Advisor','基本概念',4241,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(604,'各种审计操作','\"操作说明\"',4242,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(605,'并发和多版本控制_01','脏读/不可重复读/幻像读; \nread uncommitted\nread committed\nrepeatable read\nserializable\nread only',4243,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(606,'并发和多版本控制_02','\"一种会失败的数据仓库技术\"',4243,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(607,'并发和多版本控制_04','\"写一致性。一致读会对update的影响。重启动update\"',4243,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(608,'并发和多版本控制_05','\"update会触发重启动，以及触发器对重启动的影响\"',4243,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(609,'查看块的事务槽是否满足块内行的并发修改数量','\"procedure.tom.201页\"',4244,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(610,'plsql加载lob数据','\"使用方法，和字符集转换包\"',4245,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(611,'char/varchar2/nvarchar2/nchar','\"使用说明\"',4246,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(612,'创建钱夹','\"创建和查看钱夹\"',4247,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(613,'列级加密','\"创建列级加密 | 加密列的限制 | 非列级加密改为列级加密 |对CLOB/BLOB加密\"',4247,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(614,'创建加密表空间','\"注意事项\"',4247,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(615,'列级加密效果试验','\"insert和select的效果\"',4247,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(616,'tom演示的手动加密方法','\"同时测试了手动加密和不加密的cpu时间。注:tom严重不推荐这个方法，只是用于了解\"',4247,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(617,'手动实现加密','\"见t-1048\"',4247,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(618,'测试列级加密的开销/副作用','\"cpu时间和redo生成量/副作用就是获取数据的基数变多，会使执行计划改变\"',4247,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(619,'测试表空间加密的性能影响','\"测试:普通插入，直接插入，plsql循环插入，主键读取等\"',4247,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(620,'DIY加密和列级加密和表空间加密的选择','\"tom解释什么情况下用什么.\"',4247,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(621,'ora-12838','ora-12838\"直接路径插入错误\"',4248,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(622,'ora-12014','ora-12014\"创建物化视图log报错\"',4248,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(623,'INS-20802','grid安装\n安装grid报错-scan错误',4249,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(624,'ORA-27486','ORA-27486\"执行DBMS_PARALLEL_EXECUTE显示的权限不足\"',4250,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(625,'shutdown immediate hang住问题','\"解决方法\"',4251,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(626,'ora-00257','ora-00257\"触发原因：执行impdp时所导致的错误\"',4252,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(627,'INS-20802','rac安装\n\"netca错误\"',4253,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(628,'INS-40908','\"未记录\"',4253,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(629,'ORA-01031','ORA-01031\"dbca安装DB报错\"',4254,'2016-04-08 00:15:09','2016-04-08 00:15:09',NULL),(630,'ORA-15081','ORA-15081\"显示无法读取asm磁盘\"',4254,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(631,'ORA-16047','ORA-16047\"配置DG时的错误\"',4254,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(632,'ORA-16179','ORA-16179\"启动instance时错误。\"',4254,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(633,'ORA-30052','ORA-30052\"闪回查询时的错误\"',4254,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(634,'11.2.0.1 linux rac 重启节点(OS)后遇到asm磁盘组不能加载','此问题为11.2.0.1的bug\nWARNING: failed to online diskgroup resource ora.GI.dg (unable to communicate with CRSD/OHASD',4255,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(635,'ORA-00257','impdp\"执行impdp时所导致的错误\"',4256,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(636,'ORA-00845','ORA-00845\"启动时显示memory_target不支持所致\"',4256,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(637,'ORA-30653','ORA-30653\"外部表创建完毕后，查询错误\"',4256,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(638,'control file','\"增加和减少控制文件\"',4257,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(639,'create a logical standby database','配置逻辑DG',4258,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(640,'管理ocr/olr','检查/备份/恢复/增加/移动/等',4259,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(641,'disk group/create/alter/属性/','\"操作说明\"',4260,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(642,'asmcmd','\"参数说明\"',4260,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(643,'advm','\"创建/设置相关\"',4260,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(644,'acfs和advm与linux版本兼容表','\"某些linux版本不能使用advm和acfs\"',4260,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(645,'oracleasm','\"配置asm环境/创建asm磁盘/初始化asm配置\"',4260,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(646,'索引操作','\"create/alter/drop\"',4261,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(647,'Script_Install_Linux_5_5_64_bit_Oracle_11g_R2','\"安装oracle脚本\"',4262,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(648,'oracle_11_2_64_bit_静默安装配置文件','\"示例文件\"',4262,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(649,'普通插入','\"大致流程\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(650,'测试sqlldr中exceeds maximum length','\"重演和解决\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(651,'测试加载定界数据','\"使用某个符号来划分数据(划分列与列)\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(652,'sql-load控制文件语法','\"语法图\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(653,'测试定界数据--制表符X\'09\'和WHITESPACE区别','\"测试两个制表符的区别\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(654,'关键字filler测试','\"忽略数据中的某列的数据\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(655,'测试加载固定格式数据','\"关键字position/char/*/偏移量/:的作用\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(656,'加载日期','\"date关键字使用\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(657,'使用函数加载','\"这里演示upper/连接符||/case函数\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(658,'加载有换行符的数据','\"有4种方法和注意事项\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(659,'加载内联的lob数据','\"lob数据在数据文件中。\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(660,'加载外联的lob数据','\"lob数据是单独存放在文件中\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(661,'sqlldr命令参数','\"解释\"',4263,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(662,'使用sqlldr来创建外部表创建语句','\"包含简单的语法解释\"',4264,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(663,'外部表操作','\"多数据文件加载/只加载符合的数据\"',4264,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(664,'外部表语法图','\"未完\"',4264,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(665,'使用外部表卸载数据,并且移植到另一台oracle',NULL,4264,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(666,'lock','\"锁相关查询\"',4265,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(667,'外键未加索引死锁','\"展示这个过程\"',4266,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(668,'lock','\"悲观和乐观锁定使用方法\"',4266,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(669,'lock基本概念','\"锁的概念，丢失更新，阻塞，死锁，锁的类型。资料源于TOM\"',4266,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(670,'latch','\"lathc的请求过程。绑定变量对latch的减少效果。\"',4267,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(671,'创建物化视图基本语法','\"参数等解释\"',4268,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(672,'维度','重要概念',4269,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(673,'验证维度有效性','dbms_dimension来验证',4270,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(674,'parallel select','\"并行查询相关\"',4271,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(675,'并行加载对extent截断的影响','\"uniform和autoallocate在并行加载中的extent截断区别\"',4272,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(676,'plsql并行化执行','\"通过dbms_parallel_exectue包来处理plsq并行\"',4273,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(677,'创建和转换参数文件','\"spfile转pfile，反之，instance参数启动顺序说明\"',4274,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(678,'普通用户查看系统参数---脚本','\"并不是所有参数都可以用这个脚本查看，如果看不到会显示*access denied* 拒绝访问\"',4274,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(679,'Full Table Scans','\"详细解释每个计划的含义\"',4275,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(680,'statspack安装和执行','\"操作说明\"',4276,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(681,'statistics','\"统计相关操作\"',4277,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(682,'创建runtats','\"比较两个sql或plsql的性能，输出指标，latch，redo，cpu等等\"',4278,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(683,'RUNTATS使用方法','\"介绍\"',4278,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(684,'pipelined','\"管道函数\"',4279,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(685,'sysdba和sysoper权限区别',NULL,4280,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(686,'backup','操作说明',4281,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(687,'recovery','操作说明',4282,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(688,'手动备份','\"操作说明\"',4283,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(689,'Flashback','\"使用说明\"',4284,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(690,'redo log?????3??????','\"?��???????????��????????????????��?��?????????��?��???????-??-?\"',4285,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(691,'查看当前session的redo生成量','select b.value\n from v$statname a, v$mystat b\n where a.statistic# = b.statistic#\n and a.name = \'redo size\';',4286,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(692,'块清除--实验','\"块清除导致select语句会产生redo\"',4287,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(693,'块清除','\"概念\"',4287,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(694,'big_table','\"创建big_table脚本\"',4288,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(695,'show space','\"输出segment空间利用率脚本\"',4288,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(696,'查看当前schema下那些表的外键没有加索引','\"显示表和这个表的外键/因为外键不加索引，会引起某些阻塞\"',4289,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(697,'通过alert log 文件来看DB启动和关闭时间，以及运行时间','\"脚本使用方法\"',4290,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(698,'Optimizer','\"优化器相关知识\"',4291,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(699,'ACCESS PATHS','\"访问路径概念\"',4291,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(700,'hints','所有hints的使用介绍',4291,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(701,'STATISTICS','\"statistics相关概念\"',4291,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(702,'join','\"join相关概念\"',4291,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(703,'LEFT OUTER JOIN','\"左外连接\"',4292,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(704,'to_char','\"数据转换\"',4292,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(705,'mod','\"取余\"',4292,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(706,'distinct','去掉重复行',4292,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(707,'cast','\"数据类型转换\"',4292,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(708,'instr','\"返回要截取的字符串在源字符串中的位置\"',4292,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(709,'ORA_HASH','\"把某个值或列hash\"',4292,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(710,'lag','\"显示一个字段中的值的前N行，是什么值。\"',4293,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(711,'sqlplus set','\"set相关设置\"',4294,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(712,'基本用法','\"...\"',4294,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(713,'使用sqlplus输出html和excel','\"脚本使用方法\"',4295,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(714,'hash cluster table','\"创建HASH table\"',4296,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(715,'table','\"一般操作\"',4296,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(716,'恢复set_unused的列','2013-07-13的知识水平，不建议使用，而且需要重启DB才能起效',4296,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(717,'常用操作','\"create/alter/plsql\"',4297,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(718,'常用查询','\"P/undo/TEMP表空间\"',4298,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(719,'Buffer Busy Waits','\"检查和处理方法\"',4299,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(720,'user相关操作','\"增加、删除等等\"',4300,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(721,'all privilege','\"所有相关权限及解释\"',4301,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(722,'select','\"用户和权限相关查询\"',4302,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(723,'commit/rollback/隔离级别','\"参数/操作说明\"',4303,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(724,'弥补insert阻塞','\"带有主键的表，两个session同时插入相同的值，导致阻塞的弥补方法。\"',4304,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(725,'外键未加索引死锁','\"实验展示\"',4304,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(726,'约束/not null/索引/3者关系实验','\"对not null 列，建立约束并开启DEFERRABLE后，对这列建立index，索引在需要使用count(*)时无效。\"',4305,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(727,'V$ACCESS','V$ACCESS displays information about locks that are currently imposed on library cache objects. The locks are imposed to ensure that they are not aged out of the library cache while they are required for SQL execution.',4306,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(728,'v$sql_bind_capture','V$SQL_BIND_CAPTURE displays information on bind variables used by SQL cursors. Each row in the view contains information for one bind variable defined in a cursor. This includes:\n\nReference to the cursor defining the bind variable\n\n(hash_value, address) for the parent cursor and (hash_value, child_address) for the child cursor.\n\nBind metadata\n\nName, position, data type, character set ID, precision, scale, and maximum length of the bind variable.\n\nBind data\n\nOne of the bind values used for the bind variable during a past execution of its associated SQL statement. Bind values are not always captured for this view. Bind values are displayed by this view only when the type of the bind variable is simple (this excludes LONG, LOB, and ADT data types) and when the bind variable is used in the WHERE or HAVING clauses of the SQL statement.\n\n如果参数STATISTICS_LEVEL参数设置为BASIC那么Bind捕获关闭. This view can be joined with V$SQLAREA on (HASH_VALUE, ADDRESS) and with V$SQL on (HASH_VALUE, CHILD_ADDRESS).',4307,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(729,'db file scattered read','分散读',4308,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(730,'db file sequential read','连续读',4308,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(731,'direct path read and direct path read temp','直接路径读/直接路径临时读',4308,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(732,'direct path write and direct path write temp','直接路径写/直接路径临时写',4308,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(733,'enqueue (enq) waits','等待一个lock',4308,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(734,'free buffer waits','空余buffer等待',4308,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(735,'设置不同的pctthreshold参数的实验',NULL,4309,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(736,'DB_BLOCK_CHECKING','blokc检查',4310,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(737,'ddl_lock_timeout','用于指定DDL操作的等待时间',4311,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(738,'REMOTE_OS_AUTHENT','是否开启远端OS验证',4312,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(739,'DB_CREATE_FILE_DEST','创建data file/temp file/redo log file/control file的默认位置指定,遵循OMF标准.\n可以指定asm group，或asm group 加上template,或OS路径\n+data/+data(template)',4313,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(740,'DBA_OBJECT_USAGE','监控索引\nDBA_OBJECT_USAGE displays statistics about index usage gathered from the database for all the indexes in the database. You can use this view to monitor index usage. All indexes that have been used at least once can be monitored and displayed in this view.\n\nRelated View\nUSER_OBJECT_USAGE displays statistics about index usage gathered from the database for the indexes owned by the current user.',4314,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(741,'v$rollstat','V$ROLLSTAT contains rollback segment statistics.',4315,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(742,'v$transaction',NULL,4315,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(743,'dba_tab_privs','对象权限',4316,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(744,'V$TRANSACTION','系统中所有活跃的transaction/事务',4317,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(745,'Rank() over()','Rank() over()的用法',4318,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(746,'listener命令','\"listener参数解释\"',4319,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(747,'orapwd','\"创建密码文件/参数/操作说明\"',4320,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(748,'db link','\"数据库链接/创建/基本使用方法\"',4321,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(749,'ratio_to_report() over()','分析列占列的百分比',4322,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(750,'RECOVERY_PARALLELISM','执行instance recovery的进程数量',4323,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(751,'V$IOSTAT_CONSUMER_GROUP','消费组的I/O统计',4324,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(752,'V$IOStat_FILE','db DATA FILE的I/O统计',4324,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(753,'V$IOSTAT_FUNCTION','数据库功能的I/O统计 例如LGWR和dbwr',4324,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(754,'V$IOSTAT','单块读写和多块读写的操作',4324,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(755,'LNS','--从SGA的重做缓冲区读取信息，交由ORACLE NET传输到备用DB。\n--在多备用配置中，每个LNS对应一个备用DB，所以LNS不止可以有一个。\n--而且有两种传输方法，同步和异步',4325,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(756,'RFS','--LSN传输的redo log，在备用DB这边由RFS接收',4325,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(757,'查看每个session的负载和当前的sql text','select s.sql_id ,m.* from  v$sessmetric m,v$session s where  m.session_id=s.sid and m.session_serial_num=s.serial# order by 1,2,3;',4326,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(758,'redo调优一般概念','粗略的概念',4327,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(759,'DBA_HIST_SQLTEXT','用于检索DBA_HIST_SQLSTAT中sql_id变为sql_text',4328,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(760,'index_join','合并index',4329,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(761,'TS extent设置优化','对于并发insert的优化',4330,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(762,'查看表空间空间使用情况','set line 200\ncol tablespace_name for a20\ncol Use_Ratio for a20\ncol free_mb for a10\ncol file_mb for 99999\ncol maxsize for 99999\ncol extend for a15\nselect df.tablespace_name,\n      df.file_id,\n      round(sum(decode(fs.bytes,null,0,fs.bytes))/1024/1024,0)||\' MB\' free_mb ,\n      round((df.BYTES-sum(decode(fs.bytes,null,0,fs.bytes)))/df.BYTES*100,0)||\' %\' Use_Ratio,\n      df.INCREMENT_BY*8/1024||\' MB\' extend,\n      round(df.BYTES/1024/1024,0) file_mb,\n      round(df.maxbytes/1024/1024/1024,0) maxsize\nfrom  dba_data_files df,dba_free_space fs \nwhere df.file_id=fs.file_id(+) group by df.file_id,df.tablespace_name,df.BYTES,df.maxbytes,df.INCREMENT_BY order by 6;',4331,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(763,'FAST_START_MTTR_TARGET','Parameter type	Integer\nDefault value	0\nModifiable	ALTER SYSTEM\nRange of values	0 to 3600 seconds\nBasic	No\nOracle RAC	Multiple instances can have different values, and you can change the values at run time.',4332,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(764,'查看系统总的hard parse和总parse数量','select sum(s.value )\nfrom v$sesstat s,v$statname n \nwhere s.statistic#=n.statistic#  and\n    n.name in(\'parse count (hard)\',\'parse count (total)\') \ngroup by n.name',4333,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(765,'create a physical standby database','配置物理DG',4334,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(766,'操作文档','创建',4335,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(767,'创建分区表','各个分区表创建示例',4336,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(768,'创建sequence语法','序列/参数解释',4337,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(769,'v$lock','V$LOCK lists the locks currently held by the Oracle Database and outstanding requests for a lock or latch.\nV$LOCK 列出当前oracle DB 和\'未完成的请求\'所持有的锁，这所可能是lock或latch\n文档内是锁的类型.',4338,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(770,'ORA-00376','ORA-00376ORA-00376: file cannot be read at this time\n这个解决方案:recover这个data file',4339,'2016-04-08 00:15:10','2016-04-08 00:15:10',NULL),(771,'FAST_START_MTTR_TARGET','instance recovery时间',4340,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(772,'DB_RECOVERY_FILE_DEST_SIZE','这个参数指定bytes，用于限制fast recovery file的总大小。\n注意:每个oracle file中既没有block 0也没有OS block header包含在这个设置的大小中，在计算真实的被用于fast recovery file的磁盘使用空间时，给予额外的10%.(goku：这句话理解有问题，待确定)',4340,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(773,'DB_RECOVERY_FILE_DEST','指定默认fast recovery area的位置.fast recovery area包含当前control file和redo log file的多个副本,就像 archived redo logs, flashback logs, and RMAN backups.\n指定此参数，而不指定DB_RECOVERY_FILE_DEST_SIZE，是不可以的.',4340,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(774,'登录rman','connect\n指定log/指定脚本',4341,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(775,'manage rman','*VALIDATE:验证备份文件的是否可以完整回复，是否有坏块。检测中的错误，会被记录在V$BACKUP_CORRUPTION/V$COPY_CORRUPTION\n*LIST\n*REPORT / \n*CROSSCHECK:验证备份文件是否存在于备份时的位置，也就是控制文件中记录的位置。\n*DELETE',4341,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(776,'rman configure','rman配置信息',4342,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(777,'修复backup set','1.LIST FAILURE;--查看损坏的backup set\n2.ADVISE FAILURE;--执行修复顾问\n3.手动执行修复/或者执行 command:REPAIR FAILURE;',4343,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(778,'RECOVERY_CATALOG_OWNER ','连接recovery catalog权限',4344,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(779,'检查rman语法错误','见文档\nLinux>rman CHECKSYNTAX\n然后输入rman命令这里面输入的命令，只检查语法,不执行.',4345,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(780,'Linux_5_5_64_bit_Oracle_Rac_11g_r2安装文档','大致流程',4346,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(781,'INS-32012','rac安装\n安装rac时碰到，问题出在/u01/app这个目录定义的组成员不能写。需修改成775',4347,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(782,'asmca',NULL,4348,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(783,'DB_FLASHBACK_RETENTION_TARGET','执行闪回DB可以闪回的时间，以分钟为单位。\n这个参数间接的指定了多少flashback log 数据存放在recovery area。',4349,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(784,'查看session是SHARED 还是DEDICATED，专有还是共享','SQL> SELECT SERVER FROM   V$SESSION WHERE  SID = (SELECT DISTINCT SID FROM V$MYSTAT);\n',4350,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(785,'DB_LOST_WRITE_PROTECT','执行是否开启，或开启那个级别的写侦测检查。\nNONE | TYPICAL | FULL \n    NOTE：不执行侦测\n    TYPICAL：对读写表空间侦测\n    FULL:对只读或读写表空间侦测\n\n开启后性能开销在5 to 10% \n\n这个参数更有效于DG，当Primary DB SCN小于standby DB，那么oracle抛出外部错误ORA-752.如果standby DB SCN小于primary DB那么抛出ORA 600[3020]错误，这些错误都是油standby DB发现，并记录在她的alert和trace file中。\n\n这个参数也适用于非DG环境下.',4351,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(786,'INSTANCE_GROUPS','note:instance_groups参数是弃用的。他是保留用于向后兼容。\n\nINSTANCE_GROUPS is an Oracle RAC parameter that you can specify only in parallel mode. Used with the PARALLEL_INSTANCE_GROUP parameter, it lets you restrict parallel query operations to a limited number of instances.\n\nThis parameter specifies one or more instance groups and assigns the current instance to those groups. If one of the specified groups is also specified in the PARALLEL_INSTANCE_GROUP parameter, then Oracle allocates query processes for a parallel operation from this instance.\n',4352,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(787,'PARALLEL_INSTANCE_GROUP','PARALLEL_INSTANCE_GROUP is an Oracle RAC parameter that you can specify in parallel mode only. Used in conjunction with services or with the INSTANCE_GROUPS parameter, it lets you restrict parallel query operations to a limited number of instances. Note that the INSTANCE_GROUPS parameter has been deprecated.\n\nThis parameter identifies the parallel instance group Oracle will use for spawning parallel execution processes. If used in conjunction with services, then parallel operations will spawn parallel execution processes only on instances defined in the service. If used in conjunction with INSTANCE_GROUPS, then parallel operations will spawn parallel execution processes only on instances that specify a matching group in their INSTANCE_GROUPS parameter.\n\nIf the value assigned to PARALLEL_INSTANCE_GROUP is the name of a service or group that does not exist, then the operation runs serially. No parallelism is used.\n',4352,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(788,'V$LOG','显示从control file中的log file信息',4353,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(789,'V$LOGFILE','关于redo log的信息',4353,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(790,'查看当前rac中的service','col network_name for a10\nselect name,network_name,creation_date,goal,dtp,aq_ha_notification,clb_goal from v$services;\n',4354,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(791,'UNDO_RETENTION','Parameter type	Integer\nDefault value	900\nModifiable	ALTER SYSTEM\nRange of values	0 to 231 - 1\nBasic	No\nOracle RAC	Oracle recommends that multiple instances have the same value.',4355,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(792,'v$services','V$SERVICES displays information about the services in the database.',4356,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(793,'rac 工具 tool','clsfmt =>在安装GRID infrastructure二进制文件之后，root.sh脚本在内部执行这个工具，已设定，OCR和voting disk的格式\nolsnodes => 用于检测节点\ndiagcollention => 集群诊断集合工具，用来一次性收集有关所有必须组建的诊断信息.\ngpnptool => 管理GPnP配置文件\noifcfg => 接口配置工具，确定网卡在RAC中的使用。\nclscfg => 这个工具在CRS安装期间使用，建议不用使用，\ncemutlo => 输出cluster名称信息，\naddnode.sh => 添加节点脚本\ndeletenode.sh => 删除节点脚本',4357,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(794,'V$INSTANCE_RECOVERY','V$INSTANCE_RECOVERY monitors the mechanisms available to users to limit recovery I/O. Those mechanisms are:\n\nSet the LOG_CHECKPOINT_TIMEOUT initialization parameter\nSet the LOG_CHECKPOINT_INTERVAL initialization parameter\nSet the FAST_START_MTTR_TARGET initialization parameter\nSet the size of the smallest redo log',4358,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(795,'ORA-12537','ORA-12537在11.2.0.1中过DNS解析来配置的固定SCAN VIP和节点的VIP地址。这个错误是一个bug，在11.2.0.2修复.',4359,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(796,'-F','允许SQL*PLUS从rac DB 接受FAN。',4360,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(797,'-S','静默模式',4360,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(798,'-L','无提示登录，若在第一次时未能登录，将不再提示输入新用户名和密码。',4360,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(799,'-M','从sqlplus中产生网页形式的输出。参数:\n-M HTML [ON|OFF] [HEAD text] [BODY text] [TABLE text] [ENTMAP {ON|OFF}] [SPOOL {ON|OFF}] [PRE[FORMAT] {ON|OFF}]\nHTML:是否生成网页\nHEAD:HEAD怎么写，可以自己来定义，直接写在这里.\nBODY:同HEAD\nTABLE:同HEAD\nENTMAP:是否把html的关键字,\'>\',\'<\'，替换成HTML的形式< >\nSPOOL：是否开启SQLUS来写<HTML> and <BODY>, 这两个标签.#开启的话自动格式化表格样式，还是不错的。\nPREFORMAT：是否开启<PRE>标签，如果开启为ON，那么不会生成以<table>形式的输出。',4360,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(800,'help index','显示sqlplus命令.另外还可以在用help command，相应的命令来看参数\n例:\n    help set',4361,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(801,'set markup','key:sqlplus 网页\n把select结果生成html\nsql> set markup html on spool on;\nsql> commands ....\nsql> set markup html off spool off;',4362,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(802,'copy','从远端DB复制表,note:copy复制表，相比create xxx as select...创建有个优势，就是不会受到某些数据类型额限制，但是劣势就是速度慢。\n例:\nsql>copy from sys/oracle@tnsname -\n    create test - \n    using select * from employees;',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(803,'get','在sqlplus中读取文本,例子:\nget abc.sql\n还可以这样用get,可以同时执行多个脚本:\nsql> get abc.sql\n1.@cba.sql\n2.@dfd.sql\n\n',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(804,'remark','注释sqlplus脚本,例：\nremark select  * from employees;',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(805,'break','一种不适用group语句，但是达到group的显示效果的做法：见本文档。',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(806,'column xxx format axx HEADING \'XXX\'','1.格式化列在sqlplus中显示的长度\n2.加前导符号\n3.替换列名\n4.显示列宽(限制分字符和数字)\ncol[umn] xxx for[mat] axx HEADING \'XXX\'\n见文档',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(807,'repfooter','在报告底部当一个页脚,例子:\nrepfooter page right \'ccccccccccccccccccccccccccccccccccccc1\'\nnote:使用完记得关闭 sql>repfooter off',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(808,'repheader','在报告顶部打印页眉\nrepheader page right \'ccccccccccccccccccccccccccccccccccccc1\'\nnote:使用完记得关闭 sql>repheader off',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(809,'ttitle','在每一页的顶部打印:\nttitle \'abc\'\nnote:使用完记得关闭 sql>ttitle off',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(810,'btitle','在每一页的底部打印\nbtitle \'cba\'\nnote:使用完记得关闭 sql>btitle off',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(811,'save','保存sqlplus中buffer的内容. \nparameter：replace/APPEND #对已存在的文件追加和替换，文件中的内容,例子\nsql>save replace | append abc.txt\nnote:保存的是buffer内容，不是select出来的row的内容',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(812,'define/undefine','定义变量/撤销定义变量:\n例子：\ndefine dept = abc\nselect \'&dept\' aa from dual;\nundefine dept\n还可以在没有参数的情况下使用，例：\nsql>DEFINE',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(813,'define_editor','设置OS文本编辑器位置,可以使用edit来在sqlplus中调用：\ndefine_editor=\'/<full path>/myeditor.exe\'.',4363,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(814,'PAGES[IZE] {14|n}','--设置一页的行数.\n--什么是一页:sqlplus打印出的数据格式为、一行列名/N行数据/空行/一行列名/N行数据/空行，其中\'一行列名/N行数据/空行/\'就这个就代表一页，也就是说一页至少需要2行，如果查询是有数据的话，那么至少需要3行。',4364,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(815,'set newp[age] {1/n/none}','*制定每个新页顶部的空行数量,在sqlplus中表示，发送语句，到回返结果之间空行数。',4364,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(816,'set ti[me] {off/on}','*是否显示时间，这个时间不是执行时间，而是真是时间.\n例子:11:53:29 SQL>',4364,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(817,'剩余空间不足\n','SELECT *\n  FROM (select b.tablespace_name,\n               round(a.bytes / 1024 / 1024) free_MB,\n               round(b.bytes / 1024 / 1024) userd_MB,\n               round(b.maxbytes / 1024 / 1024) max_MB\n          from (select sum(bytes) bytes, tablespace_name\n                  from dba_free_space\n                 group by tablespace_name) a,\n               (select TABLESPACE_NAME,\n                       sum(bytes) bytes,\n                       decode(sum(MAXBYTES), 0, sum(bytes), sum(maxbytes)) maxbytes\n                  from dba_data_files\n                 group by TABLESPACE_NAME) b\n         where a.tablespace_name = b.tablespace_name)\n WHERE ((USERD_MB - FREE_MB) / USERD_MB * 100) > par1\n   AND (USERD_MB / MAX_MB * 100) > par2',4365,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(818,'virtual circuit wait','--由于客户端连接共享服务器所致\nhttp://blog.chinaunix.net/uid-116213-id-3730088.html',4366,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(819,'ORA-03137','--①  可以通过更换不同版本的JDBC驱动来避免该错误，也说明为什么同事在另外一套环境下，通过Weblogic的JDBC来访问数据库时，则不会遇到该错误；\n② 给数据库打patch,初步认为可以通过打Patch:9703463 来解决；\n③ 通过修改数据库参数来规避该错误：\n修改之后，同事用之前的Tomcat那个版本的驱动来重新访问数据库时，则不再报错；\n④ 直接升级数据库版本至11.2.0.3.0，通过导出导入的方式将刚项目组下的schema数据复制一份到一套11.2.0.3.0的库上，重新使用Tomcat那个版本的驱动来重新访问数据库时，亦不再报错。\n\nhttp://www.oracleonlinux.cn/2013/09/ora-17410_and_ora-03137/',4367,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(820,'set errorlogging on|off','*开启错误记录，用一个表，把sqlplus中用户执行sql产生的错误，都记录在里面\n*show errorlogging # 显示错误记录是否开启，以及如果开启后的记录(记录错误的表)位置。\n',4368,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(821,'set pause on|off','*在显示完一页后停顿，直到按回车再显示下一页。可以配合set pagesize 一起使用',4368,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(822,'SET AUTO[COMMIT] { OFF | ON | IMM[EDIATE] | n }','*设置自动提交\nset autocommit 10  执行10条DML语句，就自动提交，PLSQL block 算一条事务。建议off',4368,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(823,'set sqlprompt','连接用户的显示.变量：\n_connect_identifier #数据库名\n_date\n_editor 指定了使用edit命令启动那个编辑器。\n_o_version\n_o_release\n_privilege #显示权限\n_sqlplus_release\n_user #显示当前用户\n组合使用：set sqlprompt \"_connect_identifier\'@\'_user\'@\'_date >\"',4368,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(824,'clear','*清除屏幕信息。\nclear breaks/clear buffer/clear columns/clear sql/clear timing/clear screen',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(825,'show','*show recyclebin :显示回收站信息，可以确认哪些表，可以用于flashbak to befroe drop命令。\n*show errors:显示错误记录信息,show errors [procedure xxx],还可以在为运行plsql之前，检验一下语法。\n*show user:\n*show parameter\n*show 环境变量名:来看这个环境变量的值，例:show timing',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(826,'store','1.把当前sqlplus的环境变量保存在xx.sql\n2.把xx.sql里保存的换将变量，在当前环境生效。\n例子:保存=>store set xxx.sql,使用=>start xxx.sql',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(827,'spool','*输出记录在操作系统文本中\nspool {file_name[.ext] [CRE[ATE]|REP[LACE]|APP[END]]|OFF|OUT}\nFILE_NAME #存放的文件\ncre #crete创建新的文件\nREP #替换已有文件的内容，如果文件不再则创建\nAPP #加载到文件的最后\n例子\nspool xxx.txt\nselect * from talbe;\nspool off;\n',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(828,'accept','*在脚本中，输入，并把输入赋给变量\n例子\n    prompt Please enter employee number; #一般accept和prompt结合使用，prompt用于提示输入什么，accept用来接收值。\n    accept lastname;\n    set serveroutput on\n    exec dbms_output.put_line(\'&lastname\');\n    exit',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(829,'exec[ute]','*执行plsql\n例子:exec dbms_abc;',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(830,'compute','可以计算avg/sum/MAX/MIN例子:\nSQL> compute sum of sal on deptno;#根据不同的deptno组，来看sal的总计。\nSQL> select * from emp where deptno =20;',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(831,'edit','打开OS的文本编辑器，可以用define_editor来设置，使用那个文本编辑器。',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(832,'注释','/**/\n--\nREMARK',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(833,'buffer相关操作','替换buffer:c/XX/XX，插入/删除,具体见文档。',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(834,'recover','恢复命令',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(835,'archive log','archive log {start|stop|list}',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(836,'@/@@/run','执行脚本	SQL>@/@@/START/run\nstart @{url | file_name[.ext]} [arg ,,,]\nurl //可以运行远端的脚本，\nfile_name[.EXT] //可以代扩展名\narg //参数\n',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(837,'prompt','打印输出，例:prompt abc #打印了abc，一般用于脚本',4369,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(838,'V$MEMORY_TARGET_ADVICE','V$MEMORY_TARGET_ADVICE provides information about how the MEMORY_TARGET parameter should be sized based on current sizing and satisfaction metrics.',4370,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(839,'在sqlplus中限制用户使用DML/DDL','限制oracle用户使用sqlplus来使用以下命令ALTER/BEGIN/CONNECT/DECLARE/EXEC/EXECUTE/GRANT/HOST/INSERT/SELECT/UPDATE/命令,见文档',4371,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(840,'v$session','V$SESSION displays session information for each current session\nFootnote 1 The P1RAW, P2RAW, and P3RAW columns display the same values as the P1, P2, and P3 columns, except that the numbers are displayed in hexadecimal.\n显示当前连接的session，以及这个session正在等待的event',4372,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(841,'V$PROCESS','V$PROCESS displays information about the currently active processes.',4372,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(842,'DBMS_MONITOR.CLIENT_ID_TRACE_ENABLE','开启trace，在client identifier(客户端标识符)级别，只要session被表示为某个client identifier,那么如果针对这个client identifier开启了trace，就会跟踪，注意这个过程，根据连接DB时OS进程号不同，会产生多个trace.',4373,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(843,'V$SQL_PLAN_STATISTICS_ALL','V$SQL_PLAN_STATISTICS_ALL contains memory usage statistics for row sources that use SQL memory (sort or hash-join). This view concatenates information in V$SQL_PLAN with execution statistics from V$SQL_PLAN_STATISTICS and V$SQL_WORKAREA.',4374,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(844,'v$sql','V$SQL lists statistics on shared SQL areas without the GROUP BY clause and contains one row for each child of the original SQL text entered. Statistics displayed in V$SQL are normally updated at the end of query execution. However, for long running queries, they are updated every 5 seconds. This makes it easy to see the impact of long running SQL statements while they are still in progress.',4374,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(845,'继续符\'-\'','#如果继续符在用于数字之间，会有误解.\nselect 200 -\n100 from dual;\n#继续符就是一个空格，结果是 select 200 100 from dual; 不是想要的select 200100 from dual;\n#另一个误解是减号\nselect 200 -\n100 from dual; #结果会报错\n#应该写成\nselect 200 - -\n100 from dual;',4375,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(846,'-R','*限制sqlplus使用command的能力，有3个级别，1、2、3，3为限制最高.\n*限制级别的具体实现见本文档。\n*level 3时，oracle不读取login.sql。',4376,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(847,'set hea[ding]','*是否打印列标题\n*off/on',4377,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(848,'timi[ng] {off/on}','*显示sql执行时间',4377,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(849,'Set serveroutput on [WORD_WRAPPED|TRUNCATED]','*显示执行结果（PL/SQL）\n*parameter:\n    WORD_WRAPPED #这个参数受到set line 设置的影响，长出的部分会换行。\n    TRUNCATED #这个参数也受到set line的影响，但是长出的部分被截断。\nset serveroutput on size 100000 #设置缓存区大小',4377,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(850,'desc[ribe]','*显示表或过程或函数的定义\nSQL> DESC[RIBE] table_or_view_name\nSQL> DESC afunc(PL/SQL 过程或函数的调用接口)\n',4378,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(851,'file的寻道时间','select FILE#,round(SINGLEBLKRDTIM/SINGLEBLKRDS,1) from v$filestat;',4379,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(852,'1.系统统计信息概念和操作','系统统计信息的概念/收集系统统计信息/删除系统统计信息等等',4380,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(853,'查看系统统计信息','select pname,pval1 from sys.aux_stats$;',4381,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(854,'移动data file位置','见文档。',4382,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(855,'查看表空间extent管理方式和分配方式(auto OR 统一分配)','select tablespace_name,extent_management,allocation_type,segment_space_management\n    from dba_tablespaces;',4383,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(856,'dba_tablespaces','DBA_TABLESPACES describes all tablespaces in the database.\nhttp://docs.oracle.com/cd/E16655_01/server.121/e17633/tablecls.htm#CNCPT89198',4384,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(857,'BACKGROUND_DUMP_DEST',NULL,4385,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(858,'查看asm磁盘\nfree_mb/used_mb/tot_mb/disk_path/disk_name','select os_mb,total_mb,free_mb,name,path,group_number from v$asm_disk;',4386,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(859,'mount/dismount disk group','alter diskgroup mount/Dismount;',4387,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(860,'count stopkey','停止操作，返回给父',4388,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(861,'建立自定义的索引','当索引的索引类型都达不到要求的情况下，自己来创建一个表，作为索引.\n比如where like \'%XXXX%\';就是什么索引都无法起作用。',4389,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(862,'TIMED_STATISTICS','value:true/false\n建议:不管是否调优都不这个参数打开true',4390,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(863,'startup','sql> startup [ MOUNT | NOMOUNT | RESTRICT | FORCE | OPEN RECOVER | read only ]\n    #start force #相当于shutdown abort+startup\n    #当前session不能在shared server下启动instance\n    #RESTRICT，只有RESTRICTED SESSION和CREATE SESSION权限才能登陆RESTRICT模式',4391,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(864,'alter database','sql> Alter database [db_name] { open [ read only | READ WRITE ] | mount | close };	\n    #mount进入open，* 可指定某个DB，也可以不指定\n    #RESETLOGS不能用在READ ONLY',4391,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(865,'restricted mode | 在open状态下修改','sql> ALTER SYSTEM [ {ENABLE|DISABLE} RESTRICTED SESSION ];	#open状态下进入和关闭restricted mode',4391,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(866,'pfile启动','sql> startup pfile = $oracle_home/dbs/initdba1.ora	#指定pfile来启动db',4391,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(867,'open read only','sql> alter database open [ read only | READ WRITE ];	#mount状态下打开只读模式\nsql> startup read only;',4391,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(868,'查看spfile文件上的参数值','select name,value from v$spparameter order by name;',4392,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(869,'查看instance内存中参数设置','select name,value from v$parameter order by name;',4392,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(870,'v$parameter','查看instance内存中参数设置',4393,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(871,'v$spparameter','查看spfile文件中参数设置',4393,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(872,'关闭数据库','sql> shutdown abort	        # 强行关闭数据库\nsql> shutdown immediate	        #关闭数据库触发checkpoint\nsql> shutdown transactional	#等待用户完成任务(commit/rollback)后断开\nsql> shutdown normal	        #等待用户连接断开后关闭DB\n#shared server链接是不能shutdown database的\n#Shutdown modes that wait for users to disconnect or for transactions to complete have a limit on the amount of time that they wait. If all events blocking the shutdown do not occur within one hour, the shutdown operation aborts with the following message: ORA-01013: user requested cancel of current operation. This message is also displayed if you interrupt the shutdown process, for example by pressing CTRL-C.',4394,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(873,'sysresv','管理oracle内存共享段,可以查看，和移除oracle内存共享段',4395,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(874,'instance启动选择parameter file过程',NULL,4396,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(875,'dismount','sql> alter database dismount;',4397,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(876,'查看instance状态','select status from v$instance;',4398,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(877,'移动data file','#note:这是一个初级步骤不建议使用，建议使用doc-1430\n1.sql> alter tablespace ts_name offline;\n2.linux> cp /disk1/oraders1.dbf /db2/orders1.dbf\n3.sql> alert tablespace orders rename datafile \'/disk1/oraders1.dbf\' to \'/db2/orders1.dbf\';\n4.sql> alter tablespace orders online;\n5.删除old data file',4399,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(878,'v$object_usage','监控索引\nV$OBJECT_USAGE displays statistics about index usage gathered from the database for the indexes owned by the current user. You can use this view to monitor index usage. All indexes that have been used at least once can be monitored and displayed in this view.\n\nNote:\nThe V$OBJECT_USAGE view is deprecated in Oracle Database 12c Release 1 (12.1) and maintained for backward compatibility. Support for this view may be removed in a future release. Oracle recommends that you use the USER_OBJECT_USAGE view instead of the V$OBJECT_USAGE view.',4400,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(879,'使用和不使用绑定变量的区别',NULL,4401,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(880,'dbms_space_admin.tablespace_migrate_to_local','--字典管理tablespace迁移到本地管理tablespace\n--建议转换之前先做备份',4402,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(881,'DB_RECOVERY_FILE_DEST','该参数定义redo log file/control file/rman backup file/archive log file/fashback log的默认位置。\n定义了这个参数他会推翻DB_CREATE_FILE_DEST的设置',4403,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(882,'DB_CREATE_ONLINE_LOG_DEST_N','定义control file的位置,并且推翻db_recovery_file_dest和db_create_file_dest对于control file的设置。',4404,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(883,'constraint','create/alter/drop constraint',4405,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(884,'shared pool--查看Hard parser次数和total parser次数:','select * from v$sysstat where name like  \'parse count%\';',4406,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(885,'_db_block_hash_buckets','Number of database block hash buckets.',4407,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(886,'_db_block_lru_latches','number of lru latches',4407,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(887,'UNDO_TABLESPACE','Parameter type	String\nSyntax	UNDO_TABLESPACE = undoname\nDefault value	The first available undo tablespace in the database.\nModifiable	ALTER SYSTEM\nRange of values	Legal name of an existing undo tablespace\nBasic	Yes\nOracle RAC	Each instance must have a unique value for this parameter, when it is set.',4408,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(888,'V$SORT_SEGMENT','V$SORT_SEGMENT displays information about every sort segment in a given instance. The view is only updated when the tablespace is of the TEMPORARY type.',4409,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(889,'V$SERVICE_STATS','V$SERVICE_STATS displays a minimal set of performance statistics. These call rate statistics are used for making run-time routing decisions, for tracking service levels, and for per-instance diagnostics per call rate. The elapsed timing for each call provides a relative value across instances for how well a node is processing SQL calls issued under a service name.\n显示性能统计的最小集合。这里的信息统计比率，用于运行期间的路由判定，跟踪service level，并且每个instance诊断每个call率。\n\nWhen aggregation is enabled for the Service Name, then this view provides the timing and work done for calls issued for the whole service.',4410,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(890,'V$SERVICEMETRIC','V$SERVICEMETRIC displays metric values measured on the most recent time interval period for services executing inside the database. Service metrics are measured in 5-second and 1-minute intervals.',4410,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(891,'GLOBAL_TXN_PROCESSES','GLOBAL_TXN_PROCESSES specifies the initial number of GTXn background processes (GTX0, ... GTX9 and GTXa, ... GTXj) per instance to support global (XA) transactions in an Oracle RAC environment.\n这个参数指定GTXn后台进程的初始数量.rac中支持分布式事务。\n\nIf you want to disable the GTXn background processes, then you must set GLOBAL_TXN_PROCESSES to 0 in your parameter file. Setting this parameter to 0 will disable the XA support on an Oracle RAC database. Error ORA-55712 will be returned if you try to run XA transactions on an Oracle RAC database with this parameter set to zer0. You can change the setting to a nonzero value at run time to turn on the support for XA.\n\nGLOBAL_TXN_PROCESSES is useful for systems that process global (XA) transactions heavily. You do not need to specify a value for this parameter since Oracle Database automatically determines the number of processes and autotunes them, as necessary. GTXn background processes are only seen in an Oracle RAC environment.\n\nSee Also:\nOracle Database Development Guide for more information about this parameter',4411,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(892,'REMOTE_LISTENER','REMOTE_LISTENER specifies a network name that resolves to an address or address list of Oracle Net remote listeners (that is, listeners that are not running on the same system as this instance). The address or address list is specified in the TNSNAMES.ORA file or other address repository as configured for your system.\n',4411,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(893,'hard parser占total parser的百分比','select (select value from  v$sysstat where name=\'parse count (hard)\')/(select value from  v$sysstat where name=\'parse count (total)\')*100 as \"parse%\" from dual;',4412,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(894,'ASM_DISKSTRING','Note:\nThis parameter may only be specified in an Oracle Automatic Storage Management (Oracle ASM) instance.\n\nASM_DISKSTRING specifies an operating system-dependent value used by Oracle ASM to limit the set of disks considered for discovery. When a new disk is added to a disk group, each Oracle ASM instance that has the disk group mounted must be able to discover the new disk using the value of ASM_DISKSTRING.\n\nIn most cases, the default value will be sufficient. Using a more restrictive value may reduce the time required for Oracle ASM to perform discovery, and thus improve disk group mount time or the time for adding a disk to a disk group. A \"?\" at the beginning of the string gets expanded to the Oracle home directory. Depending on the operating system, wildcard characters can be used. It may be necessary to dynamically change ASM_DISKSTRING before adding a disk so that the new disk will be discovered.\n\nAn attempt to dynamically modify ASM_DISKSTRING will be rejected and the old value retained if the new value cannot be used to discover a disk that is in a disk group that is already mounted.',4413,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(895,'ASM_DISKSTRING','note:这个参数只能指定在asm instance中。\n\nasm_diskstring指定一个依赖OS的值，这个值让asm发现asm disk所在的位置。当一个新的asm disk增加到disk group，每个oracle asm instance 必须能够从asm_disstring来发现新的asm disk.\n\n A \"?\" at the beginning of the string gets expanded to the Oracle home directory. Depending on the operating system, wildcard characters can be used. It may be necessary to dynamically change ASM_DISKSTRING before adding a disk so that the new disk will be discovered.\n大多数情况下，这个参数的默认值将足够。使用一个明确的值(也就是目录),可以减少disk group mount的时间，已经寻找disk的时间。可以使用问号\'?\'通配符，他放在值的开头。\n\n动态的修改这个参数，如果在新值下找不到已经被mount的disk那么将失败，继续使用旧的值。',4413,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(896,'ASM_POWER_LIMIT','从11.2.0.2开始，如果COMPATIBLE.ASM disk group属性设置为11.2.0.2或更高，那么这个值的范围是0 ~ 1024.\n\nnote:这个参数只能指定在asm instance中。\n\nASM_POWER_LIMIT 指定最大pwer在一个ASM instance对于disk 再平衡。值越高，再平衡完成的速度越快，值越低，完成再平衡的时间越长，但是消耗较少的处理和I/O资源。\n\n如果power在asm相关操作中没有明确指定，那么这个参数的值，作为这些操作的默认值。',4413,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(897,'INSTANCE_TYPE','instance_TYPe指定一个instance的类型，database instance/asm instance/asm proxy instance\n\nValues:\n1.RDBMS:The instance is a database instance.\n2.ASM:The instance is an Oracle ASM instance.\n3.ASMPROXY:The instance is an Oracle ASM proxy instance.',4413,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(898,'查看隐藏参数','SELECT   ksppinm, ksppstvl, ksppdesc\nFROM   x$ksppi x, x$ksppcv y\nWHERE   x.indx = y.indx AND TRANSLATE (ksppinm, \'_\', \'#\') LIKE \'#%\';\n\nselect ksppinm,ksppstvl,ksppstdf \nfrom x$ksppi a, x$ksppcv b \nwhere a.indx=b.indx;\n--ksppinm 参数名称\n--ksppstvl参数的当前值，\n--ksppstdp参数的默认值 \n',4414,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(899,'cache buffer chains','cache chain争用',4415,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(900,'INSTANCE_NAME','在rac环境中，多个instance可疑访问到一个DB service.客户端可以压倒oracle connect load balancing 通过制定一个明确的instance，来链接这个instance。instance_name指定这个instance 的唯一名字。\n\n在单instance system，通常instance name 等于database name.\n\nrac手册:提到整个参数最好不要指定在参数文件中，让他默认。因为很多view的column的instance_name和inst_name是根据ORACLE_SID来的，而不是INSTANCE_NAME这个参数而来的.',4416,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(901,'manage instance','startup asm instance / shutdown asm instance / instance 密码文件 password',4417,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(902,'asm基本概念','主要详细解释: \n1.au和extent是什么,以及他们的关系 \n2.asm条带，细粒度和粗粒度的区别。',4418,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(903,'MEMORY_TARGET','MEMORY_TARGET specifies the Oracle systemwide usable memory. The database tunes memory to the MEMORY_TARGET value, reducing or enlarging the SGA and PGA as needed.\n\nMEMORY_TARGET should be set higher than or equal to the sum of the current sizes of the SGA and PGA.\n\nIn a text-based initialization parameter file, if you omit MEMORY_MAX_TARGET and include a value for MEMORY_TARGET, then the database automatically sets MEMORY_MAX_TARGET to the value of MEMORY_TARGET. If you omit the line for MEMORY_TARGET and include a value for MEMORY_MAX_TARGET, the MEMORY_TARGET parameter defaults to zero. After startup, you can then dynamically change MEMORY_TARGET to a nonzero value, provided that it does not exceed the value of MEMORY_MAX_TARGET.\n\nTotal memory usage can grow beyond the value of MEMORY_TARGET. For example, memory is allocated to PL/SQL tables and varrays regardless of the value of MEMORY_TARGET as long as memory is available at the operating system level.\n\nIn the Default value field, IMMEDIATE mode autotuning requests are necessary to avoid ORA-04031 errors. The DEFERRED and IMMEDIATE modes are reflected in the OPER_MODE column of the V$MEMORY_RESIZE_OPS view.',4419,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(904,'MEMORY_MAX_TARGET','MEMORY_MAX_TARGET specifies the maximum value to which a DBA can set the MEMORY_TARGET initialization parameter. See the description of MEMORY_TARGET for more information about how the settings of MEMORY_MAX_TARGET and MEMORY_TARGET affect each other.\n\nSee Also:\nOracle Database Administrator\'s Guide for more information about managing memory',4419,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(905,'ASM_DISKGROUPS','note:这个参数只能指定在asm instance中。\n\n这个参数指定一个disk group name 列表，当执行alter diskgroup all mount 语句时，可以被mount上的.asm instance启动时执行alter diskgroup all mount.\n\nasm 自动增加一个disk group到这个参数值中，当，disk group完成创建或被mount,并且自动的remove 一个disk group 从这个参数中，档disk group 被drop或dismount.\n\nIssuing the ALTER DISKGROUP...ALL MOUNT or ALTER DISKGROUP...ALL DISMOUNT command does not 影响 the value of this parameter.\n\nSupporting Up to 511 Disk Groups for an Oracle ASM Instance\n\nIn Oracle Database 12c, Oracle ASM supports up to 511 disk groups for an Oracle ASM instance.',4419,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(906,'DB_CACHE_SIZE','DB_CACHE_SIZE specifies the size of the DEFAULT buffer pool for buffers with the primary block size (the block size defined by the DB_BLOCK_SIZE initialization parameter).\n\nThe value must be at least 4M * number of cpus (smaller values are automatically rounded up to this value). A user-specified value larger than this is rounded up to the nearest granule size. A value of zero is illegal because it is needed for the DEFAULT memory pool of the primary block size, which is the block size for the SYSTEM tablespace.\n\nSee Also:\nOracle Database Performance Tuning Guide and Oracle Database Administrator\'s Guide for more information on setting this parameter',4419,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(907,'DIAGNOSTIC_DEST','As of Oracle Database 11g Release 1 (11.1), the diagnostics for each database instance are located in a dedicated directory, which can be specified through the DIAGNOSTIC_DEST initialization parameter. The structure of the directory specified by DIAGNOSTIC_DEST is as follows:\n\n<diagnostic_dest>/diag/rdbms/<dbname>/<instname>\nThis location is known as the Automatic Diagnostic Repository (ADR) Home. For example, if the database name is proddb and the instance name is proddb1, the ADR home directory would be <diagnostic_dest>/diag/rdbms/proddb/proddb1.\n\nThe following files are located under the ADR home directory:\n\nTrace files - located in subdirectory <adr-home>/trace\n\nAlert logs - located in subdirectory <adr-home>/alert. In addition, the alert.log file is now in XML format, which conforms to the Oracle ARB logging standard.\n\nCore files - located in the subdirectory <adr-home>/cdumd\n\nIncident files - the occurrence of each serious error (for example, ORA-600, ORA-1578, ORA-7445) causes an incident to be created. Each incident is assigned an ID and dumping for each incident (error stack, call stack, block dumps, and so on) is stored in its own file, separated from process trace files. Incident dump files are located in <adr-home>/incident/<incdir#>. You can find the incident dump file location inside the process trace file.',4419,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(908,'LARGE_POOL_SIZE','LARGE_POOL_SIZE specifies (in bytes) the size of the large pool allocation heap. The large pool allocation heap is used in shared server systems for session memory, by parallel execution for message buffers, and by backup processes for disk I/O buffers. Parallel execution allocates buffers out of the large pool only when SGA_TARGET is set.\n\nCaution:\nWhen Oracle derives a default value, it adds 250K for each session for the shared server if DISPATCHERS is configured. The final derived value also includes a port-specific amount of memory for backup I/O buffers. The total derived default value can either be too large to allocate or can cause performance problems. In that case, set LARGE_POOL_SIZE to a number sufficiently small so that the database can start.\nYou can specify the value of this parameter using a number, optionally followed by K or M to specify kilobytes or megabytes, respectively. If you do not specify K or M, then the number is taken as bytes.\n\nSee Also:\nOracle Database Performance Tuning Guide for more information on setting this parameter',4419,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(909,'V$SEGMENT','V$SEGMENT_STATISTICS displays information about segment-level statistics.\n显示信息关于segment-level统计./关于segment的统计信息/统计segment的event',4420,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(910,'CACHE BUFFER LRU CHAIN','lru争夺',4421,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(911,'V$PARAMETER','此参数显示的信息关于，当前session所生效的parameter.\n新的session所继承的参数值，从v$system_parameter view来看。',4422,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(912,'ASM_PREFERRED_READ_FAILURE_GROUPS','ASM_PREFERRED_READ_FAILURE_GROUPS指定failure groups，这个failure groups包含优先的读取磁盘。优先的磁盘是instance指定的。\n\n这个参数只有效在oracle ASM instance中。\n\n这个参数一般被用在rac中，在每个node可以有不同的值。',4422,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(913,'CLUSTER_DATABASE','这是一个rac参数，这个参数指定oracle rac是否被启动。',4423,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(914,'gcs_server_process','Footnote 1 For Oracle RAC instances with less powerful CPUs, the RDBMS spawns fewer GCS server processes than indicated in the Default value description.\n\nGCS_SERVER_PROCESSES specifies the number of background GCS server processes (LMS0, ... LMS9 and LMSa, ... LMSz) to serve the inter-instance traffic among Oracle RAC instances. GCS server processes are only seen in an Oracle RAC environment.\n',4423,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(915,'gv$sort_segment','使用这个试图来查看当前和最大排序segment的统计信息',4423,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(916,'gv$tempseg_usage','使用这个视图来查看临时段的详细使用信息，如用户名，sql等.',4423,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(917,'V$TEMPFILE','显示temp file的信息',4423,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(918,'LOCAL_LISTENER','LOCAL_LISTENER specifies a network name that resolves to an address or address list of Oracle Net local listeners (that is, listeners that run on the same system as this instance). The address or address list is specified in the TNSNAMES.ORA file or other address repository as configured for your system.\n\nLOCAL_LISTENER指定一个network name，这个network name解析了一个或多个Oracle net local listener address。\n这address或address list是指定在TNSNAME.ORA文件中，或者配置在你的系统中。',4424,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(919,'GCS_SERVER_PROCESSES','For Oracle RAC instances with less powerful CPUs, the RDBMS spawns fewer GCS server processes than indicated in the Default value description.\n\nGCS_SERVER_PROCESSES specifies the number of background GCS server processes (LMS0, ... LMS9 and LMSa, ... LMSz) to serve the inter-instance traffic among Oracle RAC instances. GCS server processes are only seen in an Oracle RAC environment.',4425,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(920,'PROCESSES','PROCESSES specifies the maximum number of operating system user processes that can simultaneously connect to Oracle. Its value should allow for all background processes such as locks, job queue processes, and parallel execution processes.\n\nThe default values of the SESSIONS and TRANSACTIONS parameters are derived from this parameter. Therefore, if you change the value of PROCESSES, you should evaluate whether to adjust the values of those derived parameters.\n\nSee Also:\nYour operating system-specific Oracle documentation for the range of values',4426,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(921,'PROCESSES','在asm instance来确定process的数量',4427,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(922,'REMOTE_LOGIN_PASSWORDFILE','REMOTE_LOGIN_PASSWORDFILE specifies whether Oracle checks for a password file.\n\nValues:\n\nshared\n\nOne or more databases can use the password file. The password file can contain SYS and non-SYS users.\n\nWhen REMOTE_LOGIN_PASSWORDFILE is set to shared:\n\nThe SYS password cannot be changed. If you try, the password change ooperation fails with \"ORA-28046: Password change for SYS disallowed.\"\n\nThe password of any user who has SYS* admin privileges (SYSDBA, SYSOPER, SYSASM, SYSBACKUP, SYSDG, SYSKM) cannot be changed. If you try, the password change operation fails with \"ORA-01999: password file cannot be updated in SHARED mode.\"\n\nGrants of SYS* admin privileges (SYSDBA, SYSOPER, SYSASM, SYSBACKUP, SYSDG, SYSKM) to individual users are not allowed. For example, grant sysdba to scott fails with \"ORA-01999: password file cannot be updated in SHARED mode.\" Similarly, revoke of SYS* admin privileges fails.\n\nIf the password file does not exist, then the behavior is the same as setting REMOTE_LOGIN_PASSWORDFILE to none.\n\nexclusive\n\nThe password file can be used by only one database. The password file can contain SYS and non-SYS users.\n\nWhen REMOTE_LOGIN_PASSWORDFILE is set to exclusive, if the password file does not exist, then the behavior is the same as setting REMOTE_LOGIN_PASSWORDFILE to none.\n\nnone\n\nOracle ignores any password file. Therefore, privileged users must be authenticated by the operating system.\n\nWhen remote login is attempted (such as sqlplus sys/password_for_sys@tns_name_of_database as sysdba), then:\n\nIf a password file does not exist, error \"ORA-01031: insufficient privileges\" will be raised.\n\nIf the password is incorrect, error \"ORA-01017: invalid username/password; logon denied\" will be raised.\n\nIf the username is incorrect, error \"ORA-01031: insufficient privileges\" will be raised.\n\nNotes:\nIf you change REMOTE_LOGIN_PASSWORDFILE to exclusive or shared from none, then ensure that the password file is synchronized with the dictionary passwords. See Oracle Database Administrator\'s Guide for more information.',4428,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(923,'SHARED_POOL_SIZE','SHARED_POOL_SIZE specifies (in bytes) the size of the shared pool. The shared pool contains shared cursors, stored procedures, control structures, and other structures. If you set PARALLEL_AUTOMATIC_TUNING to false, then Oracle also allocates parallel execution message buffers from the shared pool. Larger values improve performance in multiuser systems. Smaller values use less memory.\n\nYou can monitor utilization of the shared pool by querying the view V$SGASTAT.\n\nSee Also:\nOracle Database Performance Tuning Guide for more information on setting this parameter\nOracle Database Upgrade Guide for information on parallel execution message buffers\n\"PARALLEL_AUTOMATIC_TUNING\" and \"V$SGASTAT\"\n#设置asm sga中 shard pool的大小。',4428,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(924,'SHARED_POOL_SIZE','#设置asm sga中 shard pool的大小。',4429,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(925,'V$ASM_CLIENT','识别DB正在使用的由asm instance管理的disk group。\n在一个DB instance，V$ASM_CLIENT显示信息关于Oracle asm instance 如果database有任何打开的oracle asm file.\n\n在 ASM instance上显示所有连接到他的instance(可能是DB，也可能是ASM，因为他自己)\n在 DB  instance上显示DB连接的disk group，已经disk group所在的asm instance.',4430,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(926,'asm权限和OS组的关系','sysasm\nsysoper\n等等',4431,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(927,'ARCHIVE_LAG_TARGET','这个参数强制一个log switch，在指定的时间。\n\nA 0 value disables the time-based thread advance feature; otherwise, the value represents the number of seconds. Values larger than 7200 seconds are not of much use in maintaining a reasonable lag in the standby database. The typical, or recommended value is 1800 (30 minutes). Extremely low values can result in frequent log switches, which could degrade performance; such values can also make the archiver process too busy to archive the continuously generated logs.',4432,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(928,'V$ASM_ATTRIBUTE','v$asm_atiribute显示每个属性有一个row.此外，属性被指定在CREATE DISKGROUP 和 ALTER DISKGROUP，这个视图可能还会显示其他属性，这些属性是create是自带的.\n\nnoge:属性是只被显示在disk groups COMMPATIBLE.ASM设置为11.1或更高。',4433,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(929,'V$ASM_DISK','V$ASM_DISK displays one row for every disk discovered by the Oracle Automatic Storage Management (Oracle ASM) instance, including disks that are not part of any disk group.\nv$ASM_DISK显示由asm instance找到的每个磁盘，包括还不属于disk group的磁盘的磁盘。\n\nNote:\nThe GROUP_NUMBER and DISK_NUMBER columns will only be valid if the disk is part of a disk group which is currently mounted by the instance. Otherwise, GROUP_NUMBER will be 0, and DISK_NUMBER will be a unique value with respect to the other disks that also have a group number of 0.',4433,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(930,'asm file type/alias/template/','asm file type  alias  template',4434,'2016-04-08 00:15:11','2016-04-08 00:15:11',NULL),(931,'V$ASM_DISK_STAT','Contains the same columns as V$ASM_DISK, but to reduce overhead, does not perform a discovery when it is queried. It only returns information about any disks that are part of mounted disk groups in the storage system. To see all disks, use V$ASM_DISK instead.\n\nV$ASM_DISK_STAT displays performance statistics in the same way that V$ASM_DISK does, but without performing discovery of new disks. This results in a less expensive operation. However, since discovery is not performed, the output of this view does not include any data about disks that are new to the system.\n\nThe columns for V$ASM_DISK_STAT are the same as those for V$ASM_DISK.\n这个view与V$ASM_DISK相同。所以可以放弃它了',4435,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(932,'V$ASM_DISKGROUP_STAT','V$ASM_DISKGROUP_STAT displays performance statistics in the same way that V$ASM_DISKGROUP does, but without performing discovery of new disk groups. This results in a less expensive operation. However, since discovery is not performed, the output of this view does not include any data about disk groups that are new to the system.\n\nThe columns for V$ASM_DISKGROUP_STAT are the same as those for V$ASM_DISKGROUP.\n这个视图等同于V$ASM_DISKGROUP,但是访问V$ASM_DISKGROUP会对性能产生影响，所以一般情况下，只要访问这个视图就可以了，但是这个视图不会涉及磁盘发现，也就是为什么V$ASM_DISKGROUP会对性能产生影响。',4435,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(933,'V$ASM_USER','V$ASM_USER displays the effective operating system user names of connected database instances and of file owners.',4435,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(934,'V$ASM_USERGROUP','V$ASM_USERGROUP displays the creator for each Oracle Automatic Storage Management (Oracle ASM) File Access Control group.',4435,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(935,'V$ASM_USERGROUP_MEMBER','V$ASM_USERGROUP_MEMBER displays the members for each Oracle Automatic Storage Management (Oracle ASM) File Access Control group.',4435,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(936,'常用查询',NULL,4436,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(937,'清除shared pool中的对象','ALTER SYSTEM FLUSH SHARED_POOL;',4437,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(938,'tuning sql text','手动调用sql tuning advisor，来调优sql text',4438,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(939,'查看系统中所有的参数','select name,isinstance_modifiable from v$parameter;\n除此之外，还显示他们是否可以在，rac中的每个instance中，设置独立的参数值。',4439,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(940,'SET LONGCHUNKSIZE 200','这个参数与set long相关，他表示每一行显示的字符数(也会受到set line影响)。有例子',4440,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(941,'V$ASM_DISKGROUP','V$ASM_DISKGROUP displays one row for every Oracle Automatic Storage Management (Oracle ASM) disk group discovered by the Oracle ASM instance on the node.\n\nNote:\nThe GROUP_NUMBER, TOTAL_MB, and FREE_MB columns are only meaningful if the disk group is mounted by the instance. Otherwise, their values will be 0.',4441,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(942,'V$ASM_OPERATION','这个视图显示每个在asm instance中正在执行的操作，这个操作可能执行时间很长。在DB中这个视图显示no row',4441,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(943,'V$ASM_ESTIMATE','V$ASM_ESTIMATE displays an estimate of the work involved in execution plans for Oracle Automatic Storage Management (Oracle ASM) disk group rebalance and resync operations.\n显示asm disk grep rebalance和resync执行计划的工作估计.',4441,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(944,'V$ASM_FILE','V$ASM_FILE显示每个被asm instance mount的disk group的每个file。在DB中v$ASM_FILE显示no row.',4441,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(945,'V$ASM_DISK_IOSTAT','V$ASM_DISK_IOSTAT displays information about disk I/O statistics for each Oracle Automatic Storage Management (Oracle ASM) client. If this view is queried from the database instance, only the rows for that instance are shown.\n显示信息关于DISK I/O同喜，对于每个ASM client.如果这个查询在DB instance ，那么只显示当前instance对于asm的I/O统计.',4441,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(946,'V$ASM_TEMPLATE','In an Oracle Automatic Storage Management (Oracle ASM) instance, V$ASM_TEMPLATE displays one row for every template present in every disk group mounted by the Oracle ASM instance. In a database instance, V$ASM_TEMPLATE displays one row for every template present in every disk group mounted by the Oracle ASM instance with which the database instance communicates.\n\n在asm instance中，这个是view显示instance中每个disk group中存在的template。在DB instance中，显示与这些在asm instance显示的template通讯的template.',4441,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(947,'V$DATAFILE','V$DATAFILE displays datafile information from the control file.',4442,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(948,'DBMS_FILE_TRANSFER.COPY_FILE','从asm中拷贝文件到本地system file',4443,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(949,'scn_to_timestamp','--select to_char(scn_to_timestamp(7012),\'YYYY-MM-DD HH24:MI:SS\') from dual;',4444,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(950,'dbms_utility.db_version','--显示DB的版本，和兼容性版本',4445,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(951,'ALL_TAB_PARTITIONS','--ALL_TAB_PARTITIONS displays partition-level partitioning information, partition storage parameters, and partition statistics generated by the DBMS_STATS package for the partitions accessible to the current user.\n\nRelated Views\n\nDBA_TAB_PARTITIONS displays such information for all partitions in the database.\n\nUSER_TAB_PARTITIONS displays such information for the partitions of all partitioned objects owned by the current user. This view does not display the TABLE_OWNER column.\n\nNote:\nColumns marked with an asterisk (*) are populated only if you collect statistics on the table with the DBMS_STATS package.\nNote:\nThe following is true for the columns below that include double asterisks (**) in the column description:\nThe column can display information about segment-level attributes (for simple partitioned tables) or metadata (for composite partitioned tables). In a simple partitioned table, the partition physically contains the data (the segment) in the database. In a composite partitioned table, the partition is metadata and the data itself is stored in the subpartitions.',4446,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(952,'通过job查看program','--select owner,JOB_NAME,PROGRAM_NAME from ALL_SCHEDULER_JOBS where job_name=\'JOB_AUDITAPPST\';',4447,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(953,'查看当前job的运行记录/执行时间等等','--select job_name,status,log_date,error#,run_duration from user_scheduler_job_run_details;',4447,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(954,'修改表的字段长度','--alter table  表名   modify 字段名   varchar2(长度);',4448,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(955,'ALL_SCHEDULER_JOBS','--查看job的定义\n--DBA_SCHEDULER_JOBS 显示DB中所有的job。\n--USER_SCHEDULER_JOBS  显示user下的job，所以这个视图没有owner字段',4449,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(956,'ALL_SCHEDULER_JOB_RUN_DETAILS','--ALL_SCHEDULER_JOB_RUN_DETAILS displays log run details for the Scheduler jobs accessible to the current user.\n\nRelated Views\n\n•DBA_SCHEDULER_JOB_RUN_DETAILS displays log run details for all Scheduler jobs in the database.\n\n•USER_SCHEDULER_JOB_RUN_DETAILS displays log run details for the Scheduler jobs owned by the current user.\n',4449,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(957,'ALL_SCHEDULER_JOB_LOG','--ALL_SCHEDULER_JOB_LOG displays log information for the Scheduler jobs accessible to the current user.\n\nRelated Views\n\n•DBA_SCHEDULER_JOB_LOG displays log information for all Scheduler jobs in the database.\n\n•USER_SCHEDULER_JOB_LOG displays log information for the Scheduler jobs owned by the current user.\n',4449,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(958,'DBA_TS_QUOTAS;','--查看用户对表空间的限额',4450,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(959,'查看用户具有的对象权限','--select * from dba_tab_privs where grantee=\'HR\';',4451,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(960,'查看角色具有的系统权限','--select * from dba_sys_privs where grantee=\'DBA\';',4451,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(961,'查看user拥有的objects','--select  GRANTEE ,table_name  from dba_tab_privs where GRANTEE=\'GOKU\';\n--包括可以select的表，视图，字典，以及可以执行的dbms包',4451,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(962,'查看user拥有的role','--select * from dba_role_privs where grantee = \'GOKU\';',4451,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(963,'查看当前session的权限','--select * from session_privs',4451,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(964,'O7_DICTIONARY_ACCESSIBILITY','--参数-布尔-是否可以授权sys的特权，建议不开启',4452,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(965,'OS_AUTHENT_PREFIX','--默认字符串[OPS$],也可以自定义，用于OS系统用户认证',4453,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(966,'dba_hist_sysstat','--DBA_HIST_SYSSTAT displays historical system statistics information. This view contains snapshots of V$SYSSTAT.\n--也就是awr快照信息',4454,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(967,'dba_hist_snapshot','--DBA_HIST_SNAPSHOT displays information about the snapshots in the Workload Repository',4454,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(968,'基于event调度','--',4455,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(969,'查询已收集的快照','--col begin_interval_time for a30\n--col STARTUP_TIME for a30\n--select snap_id, to_char(begin_interval_time,\'YYYY-MM-DD HH24:MI\') BEGIN_TIME , to_char(END_INTERVAL_TIME,\'YYYY-MM-DD HH24:MI\') END_TIME from dba_hist_snapshot order by 1;',4456,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(970,'statistics_level','--设置statistics_level为TYPICAL或ALL开启awr',4457,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(971,'DBA_HIST_UNDOSTAT','--Contains statistical snapshots of V$UNDOSTAT information.',4458,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(972,'查看awr占sysaux TS空间','--select occupant_name,SPACE_USAGE_KBYTES from v$sysaux_occupants where occupant_name like \'%AWR%\';',4459,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(973,'V$UNDOSTAT','--Contains statistics for monitoring and tuning undo space. Use this view to help estimate the amount of undo space required for the current workload. The database also uses this information to help tune undo usage in the system. This view is meaningful only in automatic undo management mode.',4460,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(974,'创建快照','--EXEC DBMS_WORKLOAD_REPOSITORY.CREATE_SNAPSHOT ();',4461,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(975,'修改快照收集策略','--DBMS_WORKLOAD_REPOSITORY.MODIFY_SNAPSHOT_SETTINGS(retention => 43200,interval => 30, topnsql => 100, dbid => 3310949047);\n--retention:保留时间（分钟）\n--interval:间隔（分钟）\n',4461,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(976,'生成快照报告(本地DB)','--@?/rdbms/admin/awrrpt.sql	 \n',4461,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(977,'生成快照报告(指定DB)','--@?/rdbms/admin/awrrpti.sql	 \n',4461,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(978,'生成快照报告(RAC/指定DB)','--@?/rdbms/admin/awrgrpti.sql\n',4461,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(979,'生成快照报告(sql/本地DB)','--@?/rdbms/admin/awrsqrpt.sql',4461,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(980,'生成对比快照报告(RAC本地/指定DB)','--@?/rdbms/admin/awrgdrpi.sql',4461,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(981,'DBA_HIST_WR_CONTROL','--',4462,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(982,'DBA_HIST_BASELINE_TEMPLATE','--',4462,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(983,'DBA_HIST_BASELINE_METADATA','--',4462,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(984,'查看差异','--col baseline_name for a10\nSelect baseline_name,metric_name,num_interval,interval_size From Table(dbms_workload_repository.select_baseline_metric(l_baseline_name => \'goku\'));\n',4463,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(985,'查看基线差异','--Select baseline_name,metric_name,num_interval,interval_size From Table(dbms_workload_repository.select_baseline_metric(l_baseline_name => \'goku\'));\n',4463,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(986,'1','--1',4464,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(987,'V$SQL_HINT','--查看DB中所有可用的HINT，包括hint可以用于的DB版本',4465,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(988,'segment管理方式','--select tablespace_name,segment_space_management from dba_tablespaces;',4466,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(989,'查看redo log file组和大小','--SQL> SELECT GROUP#, BYTES FROM V$LOG;',4467,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(990,'最近一次已归档的redo log file在各个归档目的地的状态\n(在源database执行)','--SQL> SELECT DESTINATION, STATUS, ARCHIVED_THREAD#, ARCHIVED_SEQ# \n       FROM V$ARCHIVE_DEST_STATUS  \n           WHERE STATUS <> \'DEFERRED\' AND STATUS <> \'INACTIVE\';\n--如果STATUS的状态不是VALID那么可能没有在standby完成归档。\n',4467,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(991,'在源DB查寻,与target DB对比\ntarget DB哪些archive redo log丢失\n(在源database执行)','--SQL> SELECT LOCAL.THREAD#, LOCAL.SEQUENCE#,NAME \n     FROM (SELECT THREAD#, SEQUENCE#,NAME FROM V$ARCHIVED_LOG WHERE DEST_ID=1) LOCAL \n     WHERE LOCAL.SEQUENCE# NOT IN \n         (SELECT SEQUENCE# FROM V$ARCHIVED_LOG WHERE DEST_ID=2 AND THREAD# = LOCAL.THREAD#);\n--这个查询需要修改DEST_ID=1源DB本地归档，DEST_ID=2目的DB归档。\n',4467,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(992,'切换physical standby 为Real-time query\n（实时查询模式）','--SQL> SELECT open_mode FROM V$DATABASE;\n  --查询当前pyhsical当前模式。\n--SQL> ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;\n--SQL> ALTER DATABASE OPEN;\n--SQL> ALTER DATABASE RECOVER MANAGED STANDBY DATABASE USING CURRENT LOGFILE DISCONNECT;\n',4468,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(993,'显示standby延迟应用apply的历史情况\n（standby）（直方图）	','--SQL> SELECT * FROM V$STANDBY_EVENT_HISTOGRAM WHERE NAME = \'apply lag\' AND COUNT > 0;\n--设定一个时间期间内的apply情况。\n',4469,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(994,'STANDBY_MAX_DATA_DELAY','--SQL> ALTER SESSION SET STANDBY_MAX_DATA_DELAY=2\n--配置apply lag的允许落后数\n--这是一个可以在会话级别指定的参数(session parameter)，该参数指定了在Primary Database已commit提交的变化与standby Database数据库上涉及相关变化的查询之间所允许的时间延迟，单位为second 秒。\n--这个参数由非管理用户指定。\n--default value of NONE，如果指定这个值，那么standby 不管apply lag。\n--非零值，那么apply lag必须小于等于指定的值，如果超过，那么ORA3172错误。\n--如果值为0，那么保证和primary同步，除非落后于primary，那么ORA3172错误。\n',4470,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(995,'Stopping physical standby Redo Apply','--SQL> ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;',4471,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(996,'查询logical standby gap 情况（在logical standby中查询）','--SQL> SELECT THREAD#, SEQUENCE#, FILE_NAME FROM DBA_LOGSTDBY_LOG L \n          WHERE NEXT_CHANGE# NOT IN (SELECT FIRST_CHANGE# \n                                         FROM DBA_LOGSTDBY_LOG WHERE L.THREAD# = THREAD#) \n          ORDER BY THREAD#, SEQUENCE#;\n--如果有的话用来注册到logical standby 中。\n--SQL> ALTER DATABASE REGISTER LOGFILE \'/physical_standby1/thread1_dest/arcr_1_7.arc\';\n',4472,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(997,'V$ARCHIVE_DEST','--',4473,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(998,'V$LOG','--',4473,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(999,'V$SYSTEM_EVENT','--',4473,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1000,'V$STANDBY_LOG','--',4473,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1001,'LOG_ARCHIVE_TRACE','--',4474,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1002,'nls_database_parameters','--NLS_DATABASE_PARAMETERS lists permanent NLS parameters of the database.',4475,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1003,'dba_tab_columns','--ALL_TAB_COLUMNS describes the columns of the tables, views, and clusters accessible to the current user. To gather statistics for this view, use the DBMS_STATS package.\n\nRelated Views\n\n•DBA_TAB_COLUMNS describes the columns of all tables, views, and clusters in the database.\n\n•USER_TAB_COLUMNS describes the columns of the tables, views, and clusters owned by the current user. This view does not display the OWNER column.\n',4476,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1004,'V$ASM_CLIENT','--',4477,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1005,'V$INSTANCE_recovery','--',4478,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1006,'生成快照报告(ASH:本地DB)','--@?/rdbms/admin/ashrpt.sql\n',4479,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1007,'REGEXP_COUNT','--REGEXP_COUNT(x,pattern[,start,[match_option]])\n--在x中查找pattern，并返回pattern在x中的次数。',4480,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1008,'AVG(X)','--返回x的平均值',4481,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1009,'MAX(X)','--返回x的最大值',4481,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1010,'MIN(X)','--返回x的最小值',4481,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1011,'SUM(X)','--返回x的和',4481,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1012,'删除快照','--exec DBMS_WORKLOAD_REPOSITORY.DROP_SNAPSHOT_RANGE(\n    low_snap_id => 22,\n    high_snap_id => 32, \n    dbid => 3310949047\n    );	\n--注意相关的ASH数据也会被drop\n',4482,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1013,'基线--创建基准快照','--DBMS_WORKLOAD_REPOSITORY.CREATE_BASELINE(\n    start_snap_id => 270, \n    end_snap_id => 280,\n    baseline_name => \'peak baseline\',\n    dbid => 3310949047,\n    expiration => 30);	\n--start_snap_id:快照开始id\n--end_snap_id:快照结束id\n--baseline_name:快照名字。\n',4482,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1014,'基线--删除基准','--DBMS_WORKLOAD_REPOSITORY.DROP_BASELINE(baseline_name => \'peak baseline\', cascade => FALSE, dbid => 3310949047);\n',4482,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1015,'基线--重命名','--DBMS_WORKLOAD_REPOSITORY.RENAME_BASELINE(old_baseline_name => \'peak baseline\',new_baseline_name => \'peak mondays\',dbid => 3310949047);	 \n',4482,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1016,'生成快照报告(RAC/本地DB)','--@?/rdbms/admin/awrgrpt.sql\n',4482,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1017,'生成快照报告(sql/指定DB)','--@?/rdbms/admin/awrsqrpi.sql  ',4482,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1018,'生成对比快照报告(本地/指定DB)','--@?/rdbms/admin/awrddrpt.sql',4482,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1019,'awr--提取','--@?/rdbms/admin/awrextr.sql',4482,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1020,'awr--载入','--@?/rdbms/admin/awrload.sql\n',4482,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1021,'DBA_HIST_BASELINE','--',4483,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1022,'DBA_HIST_BASELINE_DETAILS','--',4483,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1023,'cluster_database','--CLUSTER_DATABASE is an Oracle RAC parameter that specifies whether or not Oracle RAC is enabled.',4484,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1024,'是否是Rac DB','--select value from v$system_parameter where name=\'cluster_database\';',4485,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1025,'切换P->S(物理)','--',4486,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1026,'切换P->S(逻辑)','--',4486,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1027,'创建standby redo log file','--SQL> ALTER DATABASE ADD STANDBY LOGFILE (\'/oracle/dbs/slog3.rdo\') SIZE 500M;\n--当一个redo log增加到primary database中，同时也要加一个到standby database中。\n--否则primary switch log file之后standby 可能变成异步的。这样会引起零数据丢失失效，或者引起最大保护模式关闭。\n',4486,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1028,'创建standby redo log file thread（用于rac','--SQL> ALTER DATABASE ADD STANDBY LOGFILE THREAD 1 SIZE 500M;\n--SQL> ALTER DATABASE ADD STANDBY LOGFILE THREAD 2 SIZE 500M;\n',4486,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1029,'查看standby redo log file 组和大小','--SQL> SELECT GROUP#, BYTES FROM V$STANDBY_LOG;',4487,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1030,'最近一次已归档的redo log file','--SQL> SELECT MAX(SEQUENCE#), THREAD# FROM V$ARCHIVED_LOG GROUP BY THREAD#;',4487,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1031,'查询sync在各个节点的同步的响应时间','--SQL> SELECT FREQUENCY, DURATION FROM  V$REDO_DEST_RESP_HISTOGRAM WHERE DEST_ID=2 AND FREQUENCY>1;\n--这个查询需要修改DEST_ID=2\n',4487,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1032,'在physical database查询archive redo log file gap','--SQL> SELECT * FROM V$ARCHIVE_GAP;\n--如果有的话进一步查询V$ARCHIVED_LOG\n--copy这些archive log file到pysical standby 来手动注册	\n--SQL> ALTER DATABASE REGISTER LOGFILE \'/physical_standby1/thread1_dest/arcr_1_7.arc\';',4487,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1033,'手动注册archivelog到DB中','--SQL> ALTER DATABASE REGISTER LOGFILE \'/physical_standby1/thread1_dest/arcr_1_7.arc\';',4488,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1034,'查询data guard等待事件','--SQL> select event from V$SYSTEM_EVENT where event like \'LNS%',4489,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1035,'查询database打开模式','--SQL> SELECT open_mode FROM V$DATABASE;',4489,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1036,'监视real-time查询中的apply 延迟\n（standby）\n','--SQL> SELECT  name, value, datum_time, time_computed FROM V$DATAGUARD_STATS WHERE name like \'apply lag\';\n--apply lag这个值是定期从primary收到数据\n--DATUM_TIME这个列包含最后被standby收到数据的时间戳。\n--TIME_COMPUTED这个列也是一个时间戳，他是apply lag背计算完成的时间戳。\n--这些列之间的差异应该小于30秒。如果大于30秒，那么apply可能不精确了。\n',4490,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1037,'强制real-time apply 同步到standby','--SQL> ALTER SESSION SYNC WITH PRIMARY;\n--需要在log_archive_dest_n中指定SYNC属性，不然会报ORA-3173。\n',4491,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1038,'建立触发器，自动执行同步','--CREATE TRIGGER adg_logon_sync_trigger\n AFTER LOGON ON user.schema\n  begin\n    if (SYS_CONTEXT(\'USERENV\', \'DATABASE_ROLE\')  IN (\'PHYSICAL STANDBY\')) then\n      execute immediate \'alter session sync with primary\';\n    end if;\n  end;\n--建立一个触发器来，当用户登录后，如果登录的是物理备库，那么执行\'alter session sync with primary\n',4491,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1039,'取消延迟应用redo log','--SQL> ALTER DATABASE RECOVER MANAGED STANDBY DATABASE NODELAY;',4491,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1040,'Start physical standby','--SQL> ALTER DATABASE RECOVER MANAGED STANDBY DATABASE; 前台启动(也就是当前窗口不能操作，冻结了)\n--SQL> ALTER DATABASE RECOVER MANAGED STANDBY DATABASE DISCONNECT;后台启动\n--SQL> ALTER DATABASE RECOVER MANAGED STANDBY DATABASE USING CURRENT LOGFILE;使用standby log file 来启动（real-time apply\n',4491,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1041,'Start LOGICAL STANDBY SQL Apply','--SQL> ALTER DATABASE START LOGICAL STANDBY APPLY;\n--SQL> ALTER DATABASE START LOGICAL STANDBY APPLY IMMEDIATE;\n',4492,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1042,'Stop LOGICAL standby Redo Apply','--SQL> ALTER DATABASE STOP LOGICAL STANDBY APPLY;',4492,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1043,'取消延迟应用redo log','--SQL> ALTER DATABASE START LOGICAL STANDBY APPLY NODELAY;\n--这是一个启动logical standby选项，如果要启用这条SQL必须关闭apply\n      [ALTER DATABASE STOP LOGICAL STANDBY APPLY]\n',4492,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1044,'log_archive_dest_state_n','--ENABLE/disable/ ALTERNATE	开启和关闭对应的log_archive_dest_n',4493,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1045,'_DB_AGING_STAY_COUNT','当移到MRU端时把touch计数充值为该值',4494,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1046,'_LARGE_POOL_MIN_ALLOC',NULL,4495,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1047,'WORKAREA_SIZE_POLICY',NULL,4496,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1048,'查看pga顾问得到最小的且比较好的pga设置值','SELECT min(pga_target_for_estimate) FROM V$PGA_TARGET_ADVICE where estd_pga_cache_hit_percentage>95;\n',4496,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1049,'LOG_BUFFER',NULL,4497,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1050,'LARGE_POOL_SIZE',NULL,4498,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1051,'LOG_CHECKPOINT_INTERVAL',NULL,4499,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1052,'OPTIMIZER_DYNAMIC_SAMPLING',NULL,4499,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1053,'查看Oracle当前版本中所有的动态性能视图','select * from v$fixed_table;\n--这个查询包括V$/X$/GV$',4500,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1054,'查询系统中V$/GV$视图的定义(组成视图的sql语句)','select * from v$fixed_view_definition;',4500,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1055,'v$license','正在运行的database的session信息\nNote:\nThe availability of the CPU core count and CPU socket count statistics is subject to the operating system platform on which the Oracle Database is running. If a statistic is unavailable, the view will return NULL for the statistic value.',4501,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1056,'V$SGA_DYNAMIC_COMPONENTS','V$SGA_DYNAMIC_COMPONENTS displays information about the dynamic SGA components. This view summarizes information based on all completed SGA resize operations since instance startup. All sizes are expressed in bytes.',4502,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1057,'v$sga',NULL,4502,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1058,'查找物理多的sql语句，以及执行它的用户','select b.username username,\n    a.disk_reads reads,\n    a.executions execute,\n    a.disk_reads/decode(a.executions,0,1,a.executions) rds_exec_ration,--每一次执行的disk read数量\n    a.command_type,\n    a.sql_text statement\nfrom v$sqlarea a,dba_users b\nwhere a.parsing_user_id=b.user_id and a.disk_reads>1000\norder by 3;\n--这里物理读是大于1000',4503,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1059,'查看哪些用户正在占用shared pool的哪个对象','SELECT A.SID,A.USERNAME,B.OWNER,B.OBJECT,B.TYPE \nFROM V$SESSION A,V$ACCESS B\nWHERE A.SID=B.SID;',4504,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1060,'开启索引监控\n','SQL> ALTER INDEX index_name MONITORING USAGE;\n--开启有可以在V$OBJECT_USAGE查看',4505,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1061,'V$FILESTAT','V$FILESTAT displays the number of physical reads and writes done and the total number of single-block and multiblock I/Os done at file level. As of Oracle Database 10g Release 2 (10.2), this view also includes reads done by RMAN processes for backup operations.',4506,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1062,'v$segment_statistics','V$SEGMENT_STATISTICS displays information about segment-level statistics.',4507,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1063,'查看free list是否够用','select ((a.count / (b.value + c.value)) * 100) pct\n  from v$waitstat a, v$sysstat b, v$sysstat c\n where a.class = \'free list\'\n   and b.statistic# =\n       (select statistic# from v$statname where name = \'db block gets\')\n   and c.statistic# =\n       (select statistic# from v$statname where name = \'consistent gets\');;\n--应该在1以下',4508,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1064,'BUFFER_POOL_KEEP','设置保留池大小(不能使用)',4509,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1065,'shared pool--查看library cache中每一个chunk的类型','SELECT sum(ksmchsiz) bytes,ksmchcls status FROM X$KSMSP group by ksmchcls;\n--ksmchcls字段解释:\n    free:可用的连续空闲内存值\n    freeabl:当前使用的可释放但不能清空的共享内存\n    perm:这是永久分配和不可释放的内存:但是在测试时，它其实表现为没有被移到空闲区域的可用内存。\n    reor:已经分配的内存，当内存中的共享池较少时，可以清空该内存\n    R-free:就是shared_pool_reserved_size(默认是SP的5%)\n    R-freea:可能预留的内存，它可以被释放但不能清空\n    r-recr:预留池中可以重新创建的内存块\n    r-perm:预留池中的永久内存块。',4510,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1066,'SHARED_POOL_RESERVED_SIZE','设置保留池的大小',4511,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1067,'查看keep池中的磁盘和内存读取情况','select physical_reads ,db_block_gets+consistent_gets \nfrom v$buffer_pool_statistics \nwhere name=\'KEEP\';',4512,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1068,'_DB_AGING_COOL_COUNT','当移到LRU端时把touch计数充值为该值',4513,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1069,'查看keep pool中的表','select * from dba_tables where Buffer_POOL=\'KEEP\' ;',4514,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1070,'查询free buffer inispected次数','select name,value from v$sysstat where name=\'free buffer inspected\';\n--free buffer inispected是通过搜索多少个data buffer中的buffer,还是没有找到需要的buffer',4514,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1071,'查看buffer cache的竞争情况','select event,total_waits \nfrom v$system_event \nwhere event in(\'free buffer waits\',\'buffer busy waits\');\n--buffer busy waits说明对某个块,有竞争,同时需要修改,等待的次数,争抢哪些block可以通过v$event_name视图来查看,结合v$session的P1,P2,P3列。\n--free buffer waits说明找不到free块,需要淘汰一些块才能获得新的free block的次数。\nselect name,parameter1,parameter2,parameter3 from v$event_name where name =\'buffer busy waits\';\n--得到的值,可以在v$session_wait进一步获得（file,block,id）信息。',4514,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1072,'使用STS',NULL,4515,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1073,'QUERY_REWRITE_ENABLED',NULL,4516,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1074,'cursor_space_for_time','弃用',4517,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1075,'查询系统中DD的定义(组成dd的sql语句)','select text from dba_views where view_name=\'DBA_IND_PARTITIONS\';',4518,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1076,'查看database版本信息','select * from v$version;',4519,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1077,'查看系统中当前的session','select * from v$license;',4520,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1078,'查看database中安装的产品','select * from v$option;',4521,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1079,'v$sgastat','V$SGA displays summary information about the system global area (SGA).',4522,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1080,'shared pool--查看shared pool命中率(awr)','select *  from v$sysmetric where metric_name=\'Library Cache Hit Ratio\';',4523,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1081,'查看sql的绑定变量','select sql_id,count(*) bind_count from v$sql_bind_capture where child_number =0 group by sql_id having count(*) >20 order by count(*);\n--还有一个需要注意的地方是，这个视图中记录的绑定变量只对where条件后面的绑定进行捕获，这点需要使用的时候注意。',4524,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1082,'查看某个用户当前正在执行的sql','select a.sid,a.username,s.sql_text\nfrom v$session a,v$sqltext s\nwhere a.sql_address = s.address;',4525,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1083,'查看当前系统用用户的一致读/物理读等','select a.username,b.block_gets,b.consistent_gets,\n	b.physical_reads,b.block_changes,b.consistent_changes\nfrom v$session a,v$sess_io b\nwhere a.sid=b.sid and username is not null \norder by 1;\n',4526,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1084,'v$sess_io','查看当前系统中用户的I/O使用和内存使用',4527,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1085,'查看某个用户的系统使用情况','select a.username,c.name,sum(b.value) value\nfrom v$session a,v$sesstat b,v$statname c\nwhere a.sid =b.sid\nand b.statistic#=c.statistic#\nand b.value <>0\ngroup by name,username order by 1;',4528,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1086,'查看哪个用户被那个用户阻塞','select sid,blocking_session,username,blocking_session_status from v$session ;',4528,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1087,'列出备份集','RMAN> list backupset 3\nRMAN> list backupset of datafile 1',4529,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1088,'列出适合恢复的备份','RMAN> list recoverable backup of database',4529,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1089,'列出archive log,不是备份','RMAN> list archivelog all',4529,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1090,'列出备份\n列出archive log备份\n列出spfile和controlfile备份\nby file:根据文件类型列出备份\nsummary:概述备份信息','RMAN> list backup \n      [\n       [of {archivelog {all | from sequence 9} | controlfile | database | tablespace user}] [summary]\n           |\n       [by file]\n           |\n       [tag\'xxx\']\n      ]',4529,'2016-04-08 00:15:12','2016-04-08 00:15:12',NULL),(1091,'查看最近30天没有备份的datafile','report need backup days=30;',4530,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1092,'查看需要应用多少增量备份才能恢复的datafile\n    这里为大于2个增量备份才能恢复的datafile','report need backup incremental=2;',4530,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1093,'查看不满足指定冗余数量的datafile','report need backup redundancy 1;',4530,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1094,'report schema','查看数据文件/数据文件号/数据文件大小/数据文件是否含有回滚段/所属的tablespace/',4530,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1095,'ORA-04098','--goldengate的DDL触发器导致\nORA-04098: trigger \'SYS.GGS_DDL_TRIGGER_BEFORE\' is invalid and failed\n解决方式:\nALTER TRIGGER sys.GGS_DDL_TRIGGER_BEFORE DISABLE; ',4531,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1096,'REGEXP_INSTR','--REGEXP_INSTR(x,pattern[,start[,occurrence[,return_option[,match_option]]]])\n--在x中查找pattern，并返回pattern所在的位置。',4532,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1097,'REGEXP_REPLACE','--REGEXP_REPLACE(x,pattern[,replace_string[,start[,occurrence[,match_option]]]])\n--在x中查找pattern，并将其替换为replace_string。其他选项的意思与regexp_instr()函数的参数完全相同\n',4532,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1098,'REGEXP_SUBSTR','--regexp_substr(X,PATTERN[,START[,OCCURRENCE[,MATCH_OPTION]]])\n--返回x中可以匹配pattern的一个字字符串',4532,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1099,'COUNT(X)','--返回一个包含x的查询返回的行数',4533,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1100,'MEDIAN(X)','--返回x的中间值',4533,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1101,'STDDEV(X)','--返回x的标准差',4533,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1102,'variance(X)','--返回x的方差',4533,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1103,'多列分组','--select product_id,customer_id from purchases group by product_id,customer_id;',4534,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1104,'DBA_USERS_WITH_DEFPWD','--查看DB中哪些用户还是用缺省密码',4535,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1105,'help set','--帮助',4536,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1106,'VER[IFY] {ON|OFF}','--可以关闭和打开提示确认信息old 1和new 1的显示. ',4536,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1107,'TRIM[OUT] {ON|OFF}','--去除标准输出每行的拖尾空格，缺省为off',4536,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1108,'TRIMS[POOL] {OFF|ON}','--去除重定向（spool）输出每行的拖尾空格，缺省为off',4536,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1109,'sqlplus默认配置文件位置','--$ORACLE_HOME/sqlplus/admin/glogin.sql',4537,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1110,'LIN[ESIZE] {80|n}','--每行的字符数，溢出部分换行，不会截断\n--设置WRA[P] {ON|OFF}可以设置多出部分截断',4538,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1111,'WRA[P] {ON|OFF}','--设置当行长度超过linesize时，是否截断显示。',4538,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1112,'NUM[WIDTH] {10|n}','--输出number类型域长度，缺省为10',4538,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1113,'NULL text','--设置把null的显示转换为text指定的字符',4538,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1114,'删除N天之前的archivelog','--delete archivelog all completed before \'sysdate - 1\';\n--delete [noprompt] archivelog all completed before \'sysdate\';--删除所有的归档日志\n--delete noprompt archivelog all;--删除所有的归档日志',4539,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1115,'rman 时间显示','--export NLS_DATE_FORMAT=\'yyyymmdd hh24:mi:ss\';',4540,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1116,'查看哪些没有被锁的user','--select username,ACCOUNT_STATUS from dba_users where  ACCOUNT_STATUS = \'OPEN\';',4541,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1117,'NUMTODSINTERVAL ','--用于systimestamp的时间加减\nselect systimestamp + NUMTODSINTERVAL(1,\'hour\') from dual;\n替换参数;\n　　\'DAY\'\n　　\'HOUR\'\n　　\'MINUTE\'\n　　\'SECOND\'',4542,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1118,'REGEXP_LIKE','--REGEXP_LIKE(x,pattern[,match_option])\n--在x中查找pattern参数中定义的正则表达式',4543,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1119,'CHR(x)','转换ASCII码为它的字符',4544,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1120,'CONCAT(x,y)','合并x列和y列，和||作用一样',4544,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1121,'nvl(x,value)','x为null，就返回value，反之返回x',4544,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1122,'RTRIM(x，width[,pad_string])','与LTRIM()类似，不过要对x的右边截去',4544,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1123,'SOUNDEX(x)','--返回一个包含x的发音的字符串。该函数用于对英文发音不同但却比较近的单词进行比较。\n--SOUNDEX函数返回字符串参数的语音表示形式，相对于比较一些读音相同，但是拼写不同的单词是非常有用的。 ',4544,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1124,'SUBSTR(x,start[,length])','返回x中的一个子字符串，这个子字符串从start开始，还可以为这个子字符串指定长度，用length参数',4544,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1125,'TRIM([trim_charFROM]x)','从x的左边和右边同时截去一些字符。可以使用参数trim_string来指定要截去的字符:如果不指定trim_string，默认截去空格',4544,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1126,'ACOS(x)','--返回x的反余弦;ACOS(1)=0/ACOS(-1)=3.14159265',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1127,'ASIN(x)','--返回x的反正弦;ASIN(1)=1.57079633/ASIN(-1)=-1.5707963',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1128,'BITAND(X,Y)','--返回x和y进行位与(and)操作的结果',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1129,'COS(x)','--返回x的余弦，其中x是弧度;COS(90*3.1415926)=1/COS(45*3.1415926=-1)',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1130,'COSH(x)','--返回x的双曲余弦函数;COSH(3.1415926)=11.919527',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1131,'floor(x)','--返回小于或等于x的最大整数',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1132,'ROUND(X[,y])','--返回x取整的结果，y是可选参数，说明对第几位小数取整，没有指定Y说明第0位小数取整。如果y是负数，则对x的小数点的左边的第|Y|为取整',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1133,'SIN(X)','--返回x的正弦函数;SIN(0)=0',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1134,'SQRT(X)','--返回x的平方根;SQRT(25)=5',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1135,'TAN(X)','--返回X的正切函数，TAN(0)=0',4545,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1136,'bin_to_num(x)','--将二进制数字x转换成number类型',4546,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1137,'to_char(x,[,format])','--将x转换为字符串',4546,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1138,'edit params mgr','--起因:\n    edit params mgr\n    Cannot load ICU resource bundle \'ggMessage\', error code 2 - No such file or directory\n--解决:\n    不能在非ogg_home下执行此命令',4547,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1139,'分配通道','ALLOCATE CHANNEL c1 DEVICE TYPE DISK;',4548,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1140,'查看系统使用的TEMP TS','--select * from database_PROPERTIES where PROPERTY_NAME like \'%TEMP%\';',4549,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1141,'group by与聚合函数','--select avg(x) from abc group by c;\n--select count(x) from abc group by c;\n--group by中有null的字段，oracle同样把他当做一个一值来计算,见文档',4550,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1142,'having使用','--为什么使用having',4550,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1143,'元字符','--',4551,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1144,'dba_registry_database','--Oracle所在的OS平台信息',4552,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1145,'v$version','--oracle版本信息',4552,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1146,'dbms_utility.port_string','--查看db的OS平台版本、内核版本 SQL> select dbms_utility.port_string from dual;\n',4553,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1147,'database_properties','--DATABASE_PROPERTIES lists Permanent database properties.',4554,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1148,'new_value','--把查询结果传给变量',4555,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1149,'FEED[BACK] {6|n|ON|OFF}','--回显本次sql命令处理的记录条数，缺省为on',4556,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1150,'set echo {on|off}','--是否显示start启动的脚本中的每个sql命令，缺省为on',4556,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1151,'TERM[OUT] {ON|OFF}','--是否显示sql命令结果',4556,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1152,'AUTOT[RACE] {OFF | ON | TRACE[ONLY]} \n  [EXP[LAIN]] [STAT[ISTICS]]','--开启统计信息或执行计划输出',4556,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1153,'v$temp_extent_pool','--V$TEMP_EXTENT_POOL displays the state of temporary space cached and used for the instance. Note that loading of the temporary space cache is lazy and that instances can be dormant.',4557,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1154,'dba_temp_files','--DBA_TEMP_FILES describes all temporary files (tempfiles) in the database.',4557,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1155,'恢复datafile到不同的目录','--run{\n	SET NEWNAME FOR DATAFILE 1 to \'/u01/app/oradata/goku/system01.dbf\';\n	restore tablespace system;\n	switch datafile 1;\n	recover tablespace system;\n}\n',4558,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1156,'删除log sequence为16及16之前的所有归档日志','--delete archivelog until sequence 16;   ',4559,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1157,'手动删除archivelog','--1、rm -f archivelog \n--2、进入RMAN (connect target sys/***@ORCL)\n--3、crosscheck archivelog all; \n--4、delete expired archivelog all;',4559,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1158,'ALL_SOURCE','--ALL_SOURCE describes the text source of the stored objects accessible to the current user.\n\nRelated Views\n\nDBA_SOURCE describes the text source of all stored objects in the database.\n\nUSER_SOURCE describes the text source of the stored objects owned by the current user. This view does not display the OWNER column.\n--可以查看plsql包源码',4560,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1159,'列出对应物','RMAN> list incarnation of database',4561,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1160,'list查看control file和恢复目录中的备份信息。','list',4561,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1161,'查看不满足恢复时间的data file','report need backup recovery window of 2 day;',4562,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1162,'查看拥有不可恢复对象的datafile','report unrecoverable',4562,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1163,'查看过时的备份\n    针对保留策略','RMAN> report obsolete',4562,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1164,'列出相应的映像副本','RMAN> list copy [of {database | archivelog {all | from sequence 9} | controlfile | DATAFILE 1,2,..}]',4563,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1165,'ASCII(x)','转换字符为它的ASCII码',4564,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1166,'查看到期的备份集\nsummary解释:doc-2185','RMAN> list expired {backup | copy}\n      [of {archivelog all | datafile 3}]\n      [summary]',4565,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1167,'ABS(x)','--返回绝对值',4566,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1168,'block change tracking','--',4567,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1169,'INITCAP(x)','将x的每个单词的首字母转换成大写',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1170,'INSTR(x,find_string[,start][,occurrence])','在x中查找字符串find_string，然后返回find_string所在的位置。可以提供一个start位置来指定该函数从这个位置开始查找。也可以指定occurrence参数，来说明应该返回find_string第几次出现的位置。',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1171,'LENGTH(x)','返回x中的字符个数',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1172,'LOWER(x)','将x中的字母转换成小写。',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1173,'LPAD(x,width[,pad_string])','在x的左边补齐空格，得到总长width个字符的字符串。pad_string，可以指定重复使用哪个字符串来补齐左边的空位',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1174,'LTRIM(x,[,trim_string])','从x的左边街区一些字符。可以使用trim_string来指定要截去的字符，如果不指定这个参数，则默认截去空格。',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1175,'NANVL(x,value)','如果x匹配NAN这个特殊值(非数字)，就返回value；否则返回x。',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1176,'NVL2(x,value1,value2)','如果x非空，就返回value1;反之返回value2',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1177,'REPLACE(X，search_string,replace_string)','在x中查找search_string,并替换为replace_string',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1178,'RPAD(x,width[,pad_string])','与LPAD类似，不过要对x的右边补齐',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1179,'upper(x)','将x中的字母转换为大些。',4568,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1180,'ATAN(x)','--返回x的反正切;ATAN(1)=.785398163/ATAN(-1)=-.78539816',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1181,'ATAN2(x,y)','--返回x和y的反正切;ATAN2(1,-1)=2.35619449',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1182,'CEIL(X)','--返回大于或等于x的最小整数',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1183,'EXP(Z)','--返回E的x次幕，其中e约等于2.71828183;EXP(1)=2.71828183/EXP(2)=7.3890561',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1184,'LOG(X,Y)','--返回以x为底y的对数;LOG(2,4)=2/LOG(2,5)=5.32192809',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1185,'LN(X)','--返回x的自然对数;LN(2.71828183)=1',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1186,'MOD(X,Y)','--返回x除以y的余数',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1187,'POWER(X,Y)','--返回x的y次幂',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1188,'SIGN(X)','--获取符号，如果x是负数，返回-1;如果x是正数返回1，x是0返回0',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1189,'TANH(X)','--返回x的双曲正切函数;TANH(1)=.761594156',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1190,'TRUNC(X[,Y])','--返回对x阶段的结果:y为可选参数，说明对第几位小数截断。如果y没有指定，则对x在0位小数处阶段:如果y是负数，则对x在小数点左边的第|Y|位处截断',4569,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1191,'crs','--',4570,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1192,'查看transaction开始的scn','--select xidusn,xidslot,xidsqn,start_scn from v$transaction;',4571,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1193,'无法启动dp1','OGG-01224  TCP/IP error 113 (No route to host)\n现象：\n2012-04-23 06:19:32  ERROR   OGG-01224  TCP/IP error 113 (No route to host).\n2012-04-23 06:19:32  ERROR   OGG-01668  PROCESS ABENDING.\n解决方法：\n检查网络情况，此处是因为启用了本机防火墙。关掉防火墙 :\nchkconfig –level 235 iptables off\n或者 service iptables stop',4572,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1194,'查看DB中commit数','--select value from v$sysstat where name=\'user commits\';',4573,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1195,'to_number(x,[,format])','--select to_number(\'970.13\')+25 from dual;',4574,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1196,'CAST(x AS type)','--将x转换为由type指定的兼容数据库类型',4574,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1197,'删除系统时间1天以内到现在的归档日志(注意这个命令)\n','--delete archivelog from time \'sysdate-1\';  ',4575,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1198,'ALL_TAB_MODIFICATIONS','--ALL_TAB_MODIFICATIONS describes tables accessible to the current user that have been modified since the last time statistics were gathered on the tables.\n\nRelated Views\n\nDBA_TAB_MODIFICATIONS describes such information for all tables in the database.\n\nUSER_TAB_MODIFICATIONS describes such information for tables owned by the current user. This view does not display the TABLE_OWNER column.\n\nNote:\nThese views are populated only for tables with the MONITORING attribute. They are intended for statistics collection over a long period of time. For performance reasons, the Oracle Database does not populate these views immediately when the actual modifications occur. Run the FLUSH_DATABASE_MONITORING_INFO procedure in the DBMS_STATS PL/SQL package to populate these views with the latest information. The ANALYZE_ANY system privilege is required to run this procedure.',4576,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1199,'SMALIFILE TBLESPACE','--可以包含1022个data file或temp data file，其中每个data file可以达到4百万个block(2^22).\n',4577,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1200,'DROP TABLESPACE','--?|?????????o????????��?o?OMF(db_create_file_dest)???��?��?1?drop????����???��?a??��???��?��??��????????????????1?????????��???????o?datafile\'XXXX\'????������??��|??????��???��?��???',4578,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1201,'truncate table','--SQL> truncate table TAB_NAME [ { drop | reuse } storage ];\n--drop:默认选项，释放extent\n--reuse:删除数据，而不释放extent',4579,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1202,'回收为使用的extent','--SQL> ALTER TABLE tab_name DEALLOCATE UNUSED;',4579,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1203,'重命名Tablespace','--SQL> ALTER TABLESPACE <ts_name> RENAME TO <ts_name>;\n--system和sysaux不能重命名',4580,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1204,'UNDO TS 管理','--',4581,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1205,'计算undo TS的所需大小','--select (select value from v$parameter where name=\'undo_retention\')*\n         (select value/1024 from v$parameter where name=\'db_block_size\')*\n         (select max(undoblks / ((end_time - begin_time)*24*3600)) \n          from v$undostat) undo_ts_size \n  from dual;',4582,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1206,'RAISE_APPLICATION_ERROR','--自定义错误',4583,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1207,'DBA_PART_INDEXES','--',4584,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1208,'停止trigger','--ALTER TIGGER trigger_name [DISABLE | ENABLE ];\nALTER TABLE [schema.]table_name {ENABLE|DISABLE} ALL TRIGGERS;',4585,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1209,'通过子节点找到父节点','--此sql是错误的，未完成的结果。放在这里为以后继续。',4586,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1210,'tnsname','--SQLPLUS hr@\\\"(DESCRIPTION=\n(ADDRESS=(PROTOCOL=tcp)(HOST=sales-server)(PORT=1521) )\n(CONNECT_DATA=\n(SERVICE_NAME=sales.us.acme.com) ) )\\\"',4587,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1211,'生成快照报告(ASH:RAC)','--@?/rdbms/admin/ashrpti.sql',4588,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1212,'ALL_SEQUENCES','--ALL_SEQUENCES describes all sequences accessible to the current user.\n\nRelated Views\n\nDBA_SEQUENCES describes all sequences in the database.\n\nUSER_SEQUENCES describes all sequences owned by the current user. This view does not display the SEQUENCE_OWNER column.',4589,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1213,'SQL标示符','--set sqlprompt _user-SQL>',4590,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1214,'ora-01950','--用户x建表的时候提示：ora-01950：对表空间‘x’无权限\n原因：用户没有resource权限\n解决方法：连接sys用户，赋予用户x resource权限\n          grant resource to x;',4591,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1215,'DBA_FREE_SPACE','--DBA_FREE_SPACE describes the free extents in all tablespaces in the database.\n\nNote that if a datafile (or entire tablespace) is offline in a locally managed tablespace, you will not see any extent information. If an object has extents in an online file of the tablespace, you will see extent information about the offline datafile. However, if the object is entirely in the offline file, a query of this view will not return any records.\n\nRelated View\n\nUSER_FREE_SPACE describes the free extents in the tablespaces accessible to the current user.',4592,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1216,'查看某个schema的job','--set line 180\ncol interval for a30\ncol what for a50\nselect job,SCHEMA_USER,WHAT,TO_CHAR(LAST_DATE,\'yyyy-mm-dd hh24:mi:ss\') LAST_DATE,TO_CHAR(NEXT_DATE,\'yyyy-mm-dd hh24:mi:ss\') NEXT_DATE,INTERVAL ,NEXT_SEC from dba_jobs where schema_user=\'FASTQ\' ORDER BY 3;\n',4593,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1217,'查看dblink的信息','col owner for a20\ncol db_link for a20\ncol host for a30\nselect owner,db_link,HOST from dba_DB_LINKS where db_link=\'W210\';',4594,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1218,'查看某个schema下的包','--select name from ALL_SOURCE where owner=\'FASTQ\' group by name;',4595,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1219,'substrb','--与SUBSTR一样，但是substrb是按照字节来计算的',4596,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1220,'ORA-01031','----原因\n    远程tns登录报错(ORA-01031: insufficient privileges)\n--解决\n    创建口令文件Linux> ORAPWD ',4597,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1221,'12c(linux 6.4) rpm','--yum install compat-libstdc++-33 compat-libcap1 binutils gcc gcc-c++ glibc glibc-devel ksh libgcc libstdc++ libstdc++-devel libaio libaio-devel libXext libX11 libXau libXi make systat \n',4598,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1222,'control_management_pack_access','--3个参数\n DIAGNOSTIC\n DIAGNOSTIC+TUNING \n NONE //关闭addm\n',4599,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1223,'STATISTICS_LEVEL','--',4599,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1224,'DBMS_ADVISOR.SET_DEFAULT_TASK_PARAMETER','--EXECUTE DBMS_ADVISOR.SET_DEFAULT_TASK_PARAMETER(\n                     \'ADDM\', \'DBIO_EXPECTED\', 8000);\n',4600,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1225,'DBMS_ADDM.ANALYZE_DB','--',4600,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1226,'DBMS_ADDM.ANALYZE_INST','--',4600,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1227,'手动运行ADDM(Instance)','--VAR tname VARCHAR2(30);\nBEGIN\n  :tname := \'my ADDM for 7PM to 9PM\'; //设置ADDM名字，输出ADDM报告时需要指定这个名字。\n  DBMS_ADDM.ANALYZE_INST(:tname, 137, 145, 1);\nEND;\n/',4601,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1228,'手动运行ADDM(Partial Mode | 局部模式)','--VAR tname VARCHAR2(30);\nBEGIN\n  :tname := \'my ADDM for 7PM to 9PM\';\n  DBMS_ADDM.ANALYZE_PARTIAL(:tname, \'1,2,4\', 137, 145);\nEND;\n/',4601,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1229,'DBMS_ADDM.ANALYZE_PARTIAL ','--',4602,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1230,'DBMS_ADDM.GET_REPORT','--DBMS_ADDM.GET_REPORT (task_name IN VARCHAR2 RETURN CLOB);',4602,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1231,'Dispaly ADDM Report','--SET LONG 1000000 PAGESIZE 0;\nSELECT DBMS_ADDM.GET_REPORT(:tname) FROM DUAL;',4603,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1232,'DBA_ADVISOR_FINDING_NAMES','--This view lists all finding names registered with the advisor framework.',4604,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1233,'DBA_ADVISOR_FINDINGS','--',4604,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1234,'DBA_ADVISOR_RECOMMENDATIONS','--',4604,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1235,'DBA_ADVISOR_TASKS','--',4604,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1236,'dba_hist_database_instance','--查看instance历史启动信息',4605,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1237,'CREATE INDEX','--CREATE INDEX [SCHEMA.] index_name ON [SCHEMA.] table_name(column_name) [online]  [TABLESPACE TABLESPACE_NAME] [NOLOGGING] [parallel n];',4606,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1238,'systimestamp','--NUMTODSINTERVAL(1,\'DAY\'),\nNUMTODSINTERVAL(1,\'hour\'),\nNUMTODSINTERVAL(1,\'MINUTE\'),\nNUMTODSINTERVAL(1,\'SECOND\'),\n',4607,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1239,'expdp | [query]','--用于指定过滤导出数据的where条件.语法如下:\n--配合[table]参数可以一起使用\n--QUERY=[schema.][table_name:]query_clause\n--schema 用于指定方案名,table_name用于指定表名,\n  query_clause用于指定条件限制子句.\n  QUERY选项不能 与 CONNECT=METADATA_ONLY,EXTIMATE_ONLY,TRANSPORT_TABLESPACES等选项同时使用,示例如下:\n--expdp scott/tiger directory=dump dumpfiel=a.dmp Tables=emp query=\'WHERE deptno=20\'\n--例子\n--expdp scott/tigger full=y query=ota.TBLOTACLIENTINFO:\"\n                                       where updatedate>=trunc(sysdate)\",\n                                   ota.TBLDOWNUPDATELOG:\"\n                                       where createdate>=trunc(sysdate)\",\n                                   ota.TBLOTACLIENTINFO_OLD:\"\n                                       where updatedate>=trunc(sysdate)\",\n                                   ota.TBLDOWNUPDATELOG_OLD:\"\n                                       where createdate>=trunc(sysdate)\"  ',4608,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1240,'dba_directories','--',4609,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1241,'data pump缺省目录','--DIRECTORY_NAME：\n    DATA_PUMP_DIR \n--DIRECTORY_NAME\n    /u01/app/admin/goku/dpdump/\n--Oracle给data pump在DB中创建了缺省的目录，可以直接使用，而不用在expdp或impdp指定目录',4610,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1242,'read, write on directory DATA_PUMP_DIR','--赋予读写权限',4611,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1243,'查看目录','--select * from dba_directories;',4612,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1244,'impdp | [REMAP_SCHEMA]','--该选项用于将源方案的所有对象装载到target schema中.\n--REMAP_SCHEMA=source_schema:target_schema\n--impdp userid=system/oracle SCHEMAS=iii REMAP_SCHEMA=iii:uuuii\n--这个参数被指定时，只会导入taret_schema的用户,不会导入iii用户，并且DB中可以不用是新创建uuuii用户，impdp会自动创建，执行完毕后只要修改密码即可.\n--此外加入了schemas选项后，不管dmp文件是不是整个数据库导出dmp，导致会使用iii来导入，同时，指定了remap_schema，iii不会被导入，而是导入了uuuii\n',4613,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1245,'impdp | [SCHEMAS]','----按schema导入（可以将用户信息直接导入，即如果用户信息不存在的情况下也可以直接导入）\n--impdp gwm/gwm@fgisdb schemas=gwm dumpfile =expdp_test.dmp logfile=expdp_test.log directory=dir_dp',4613,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1246,'区间分区--间隔转区间分区','--alter table 分区表名 set interval();--不用写间隔内容即转为区间分区。',4614,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1247,'dbms_ijob','--这个DBMS是让sys用户执行其他用户的job操作。',4615,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1248,'检测坏块(逻辑)','--RMAN> run\n        {\n         set  maxcorrupt for datafile 1,2,3,4 to 5;\n         restore database check logical validate;\n        }',4616,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1249,'检测坏块(物理)','--RMAN> validate backupset n;',4616,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1250,'中断job','--exec dbms_ijob.broken(5,true);',4617,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1251,'ORA-08181','--原因:执行scn_to_timestamp引发的\n处理:不能对于超过5天的数据(scn)执行这个操作\n--可以通过select min(scn) from sys.smon_scn_time来查询目前可以查到的最小的scn',4618,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1252,'dbms_shared_pool.purge','--dbms_shared_pool.purge(\'1EFB91B8, 3642190903\',\'C\');\n--ADDRESS和HASH_VALUE,C是cursor的意思\n--把某条sql语句从shared pool中flush掉',4619,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1253,'ALL_COL_COMMENTS','--查看表中列的注释',4620,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1254,'注释 | COLUMN','--COMMENT ON COLUMN [schema.]tab_name.col_name IS \'xxx\';\n',4621,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1255,'注释 | table','--COMMENT ON TABLE [schema.]tab_name IS \'xxx\';',4621,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1256,'expdp | [logfile]','--expdp test/test schemas=TEST,hr directory=TEST_DIR dumpfile=TEST.dmp logfile=expdpTEST.log;',4622,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1257,'DBA_DATA_FILES','--DBA_DATA_FILES describes database files.',4623,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1258,'minus','--找出两条sql语句中不同的内容',4624,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1259,'count(*) over([partition by] COL_NAME)','--',4625,'2016-04-08 00:15:13','2016-04-08 00:15:13',NULL),(1260,'移除job','--dbms_ijob.remove(70);',4626,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1261,'执行job','--exec dbms_job.run(5);',4626,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1262,'修改job(interval date)','--exec dbms_job.interval(5,\'sysdate+2\');',4626,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1263,'修改job(next_date)','--exec dbms_job.next_date(5,sysdate+1/24);',4626,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1264,'注意事项1','--If you create your database with Database Configuration Assistant (DBCA) and choose the basic installation option, automatic memory management is enabled when system memory is less than or equal to 4 gigabytes. When system memory is greater than 4 gigabytes, automatic memory management is disabled, and automatic shared memory management is enabled. If you choose advanced installation, then DBCA enables you to select automatic memory management or automatic shared memory management.',4627,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1265,'current of','--游标中使用的语句\ndeclare\n   cursor cc is select * from tmp where rownum<10;\nbegin\n   update tmp set a=\'b\' where current of cc;\nend;\n/\n--更新游标中的条目',4628,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1266,'MEMORY_TARGET','--',4629,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1267,'MEMORY_MAX_TARGET','--',4629,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1268,'for update [of]','----for update是对符合谓词的条件进行锁定。\n--详情doc',4630,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1269,'hash分区索引','--CREATE INDEX IND_PART_INDEX_ID\n    ON T_PART_INDEX (ID) GLOBAL\n    PARTITION BY HASH (ID)\n    PARTITIONS 16;',4631,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1270,'修改column 默认值','----alter table sword1129.USERROLE MODIFY col_name DEFAULT 1;',4632,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1271,'backup | crontab file(trace)','--alter database backup controlfile to trace as \'xxx\' [reuse] [ RESETLOGS | NORESETLOGS ];\n--RMAN> sql \"alter database backup controlfile to trace as\'\'/opt/oracle/rman/backup/bak_ctl_trc\'\' reuse\";',4633,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1272,'复制表结构','--CREATE TABLE tab_name AS SELECT * FROM tab_name WHERE 1=0;\n--column的默认值，是不会被定义到新的table中的。',4634,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1273,'kill session','----alter system kill session \'14,397\';\n--SID    SERIAL#',4635,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1274,'ORA-00054','--指定DDL语句会产生的错误，因为资源被锁导致\n--可以修改参数ddl_lock_timeout,使得DDL操作持续等待，直至操作成功。',4636,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1275,'不完全恢复','--recover database [using backup controlfile] allow 1 corruption;',4637,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1276,'查看数据库中每个分区表的最大的分区','--select a1.table_owner,a1.table_name,a1.high_value \nfrom ALL_TAB_PARTITIONS a1,\n	(select table_owner,table_name,max(PARTITION_POSITION) PARTITION_POSITION \n		from ALL_TAB_PARTITIONS \n		where TABLE_OWNER not in(\'SYS\',\'SYSTEM\',\'SYSMAN\') \n		group by table_owner,table_name \n		order by 3\n	) a2 \nwhere a1.table_owner=a2.table_owner \nand a1.table_name=a2.table_name \nand a1.PARTITION_POSITION=a2.PARTITION_POSITION;',4638,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1277,'查系统中每个分区最新的3个分区','--select * from (\n		select table_owner,\n			table_name,\n			PARTITION_POSITION,\n			HIGH_VALUE,\n			rank()over(partition by table_owner,table_name order by partition_position desc) rn,\n                        INTERVAL\n		from ALL_TAB_PARTITIONS \n		where table_owner not in(\'SYS\',\'SYSTEM\',\'SYSMAN\') \n) where rn <4;',4638,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1278,'移动表','--ALTER TABLE table_name MOVE [TABLESPACE ts_name] [PARALLEL int]\n--move表中，insert，delete，update，drop，truncate中DML都会被堵塞,DDL会被报ora-00054的错误。\n--同时有dml操作时不能move table',4639,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1279,'重建分区索引','--alter index i_id_global rebuild partition p1  [online] [nologging] [parallel n] [tablespace ts_name];',4640,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1280,'gv$instance','--',4641,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1281,'验证备份可恢复性，不实际备份(只会使用最新的备份)','--RMAN> restore database [check logical ] validate;\n#可选增加逻辑检查',4642,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1282,'显示恢复需要的备份(不实际恢复)','--RMAN> restore database preview;',4642,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1283,'DIAGNOSTIC_DEST','--',4643,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1284,'MAX_DUMP_FILE_SIZE','MAX_DUMP_FILE_SIZE Setting Trace File Segmentation \nUNLIMITED\nTrace files are not segmented.\n \nLarger than 15M\nTrace files are segmented on a boundary that is 1/5 of the MAX_DUMP_FILE_SIZE setting. Trace files with sizes that are less than this boundary in size are not segmented. For example, if the MAX_DUMP_FILE_SIZE setting is 100M, then the boundary is 20 MB (1/5 of 100 MB).\n \n15M or less\nTrace files are not segmented.\n',4643,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1285,'手动运行ADDM(Database)','VAR tname VARCHAR2(30);\nBEGIN\n  :tname := \'ADDM for 7PM to 9PM\'; //设置ADDM名字，输出ADDM报告时需要指定这个名字。\n  DBMS_ADDM.ANALYZE_DB(:tname, 137, 145);\nEND;\n/',4644,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1286,'查看session打开的游标数','--select o.sid,o.name ,o.value from 	   \n(select sid,n.name,s.value\n     from\n       sys.v_$statname  n,\n       sys.v_$sesstat  s\n     where\n       n.name in (\'opened cursors current\') and\n       s.statistic# = n.statistic#\n) o ,v$session s \nwhere s.sid=o.sid;',4645,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1287,'DBA_ADDM_FINDINGS','--这个视图显示了DBA_ADVISOR_FINDINGS中所有关于ADDM执行任务的条目。',4646,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1288,'生成快照报告(ASH:指定DB)','--@?/rdbms/admin/ashrpti.sql',4647,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1289,'expdp | [parfile]','--可以把命令写在parfile参数指定的文件中，来执行，相当于脚本\n--例子:\n--expdp parfile=/home/oracle/expdp_script/back_dump.par',4648,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1290,'expdp | [full]','--指定数据库模式导出,默认为N.语法如下:\n--FULL={Y | N}\n--为Y时,标识执行数据库导出.\n',4648,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1291,'expdp | [reuse_dumpfiles]','--覆盖具有相同dump名的文件，如果在导出时转储文件已经存在，使用REUSE_DUMPFILES参数可以预防错误发生。\n--REUSE_DUMPFILES={Y | N}\n  设置为“Y”时，现在的转储文件将被覆盖，当使用默认值“N”时，如果转储文件已经存在就会产生一个错误。\n--例子\n  expdp test/test schemas=TEST directory=TEST_DIR dumpfile=TEST.dmp logfile=expdpTEST.log reuse_dumpfiles=y',4648,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1292,'expdp | [EXCLUDE]','--排除表employees\n    EXCLUDE=TABLE:\"in(\'employees\')\"',4648,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1293,'impdp | [table_exists_action]','--对于导入表的4个选项\n    1.skip：导入作业会跳过已存在表处理下一个对象;\n    2.replace：先drop表，然后创建表，最后插入数据\n    3.append：在原来数据的基础上增加数据\n    4.truncate：先truncate，然后再插入数据',4649,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1294,'expdp | [DIRECTORY]','--指定目录',4650,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1295,'expdp | [TABLES]','--到处指定的表\n  expdp  DUMPFILE=expfull.dmp  userid=HR/hr reuse_dumpfiles=y DIRECTORY=DATA_PUMP_DIR TABLES=employees,abc',4650,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1296,'expdp | [include]','--只导出存储过程\n   include=PROCEDURE;   ',4650,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1297,'expdp | [SCHEMAS]','--指定导出的schemas\n    expdp test/test schemas=TEST,hr directory=TEST_DIR dumpfile=TEST.dmp logfile=expdpTEST.log;\n    --可以指定一个或多个schemas',4650,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1298,'expdp | [tablespaces]','----按TS导出\n--expdp userid=hr/hr directory=xxx dumpfile=expdp.dmp tablespaces=temp,example;',4650,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1299,'expdp | [CONTENT]','--该选项用于指定要导出的内容.默认值为ALL\n--CONTENT={ALL | DATA_ONLY | METADATA_ONLY}\n--当设置CONTENT为ALL时,将导出对象定义及其所有数据.为DATA_ONLY时,只导出对象数据,为METADATA_ONLY时,只导出对象定义\n--Expdp scott/tiger DIRECTORY=dump DUMPFILE=a.dump CONTENT=METADATA_ONLY',4650,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1300,'区间分区--增加(拆分)分区','--ALTER TABLE rangel SPLIT PARTITION P4 AT (to_date(\'10/10/2018\',\'dd/mm/yyyy\')) \n   INTO (PARTITION t_range_p6, PARTITION t_range_pmax);\n--当要创建的分区的范围，已经属于某个分区的范围时，需要使用拆分，如果要创建的分区，不属于任何范围(包括不数据MAXVALUE)，只需要增加分区就可以了\n--指定所属的分区的范围的上限的分区，设置区间键值，insert到新的分区，并建立分区名。',4651,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1301,'区间分区--增加分区','--ALTER TABLE rangel ADD PARTITION P4 VaLUES LESS THAN(MAXVALUE) TABLESPACE ts0;\n--alter table orders add partition part_11 values less than(to_date(\'01-01-2012\',\'dd-mm-yyyy\'));',4651,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1302,'autoprint{on|off}','--自动打印变量值',4652,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1303,'replace(a,\'x\',\'z\')','--select replace(\'abc\',\'b\',\'c\') from dual;#acc\n--替换字符串\n',4653,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1304,'增加外键','--alter table b add foreign key(b) REFERENCES a(a);',4654,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1305,'ALL_CONS_COLUMNS','--ALL_CONS_COLUMNS describes columns that are accessible to the current user and that are specified in constraints.',4655,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1306,'全局索引--创建','--craete index g_idx1 on rang3l(data);',4656,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1307,'间隔分区--重命名分区名','--Alter table xxx rename partition partition_name to new_partition_name;',4657,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1308,'rowid以下情况会改变','--1.分区表开启row移动后，row从一个分区移到另一个分区\n2.IOT的主键update\n3.flasback table\n4.alter table shrink',4658,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1309,'局部索引和全局索引的使用范围','--1.局部更倾向与数据仓库\n2.全局索引更倾向于OLTP',4659,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1310,'局部索引--前缀','--create index idx_name on part_name(col_name1,col_name2) local online TABLESPACE TS_NAME;\n--col_name1必须是分区表的分区键\n--1.选择表空间，同时查看这个TSextent的扩展是否符合即将要建立的index的大小\n--2.使用并行',4660,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1311,'局部索引--非前缀','--create index idx_name on part_name(col_name1,col_name2) local online;\n--col_name1不是是分区表的分区键，后面的col_namex是不是无所谓\n--1.选择表空间，同时查看这个TSextent的扩展是否符合即将要建立的index的大小\n--2.使用并行',4660,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1312,'STATUS:INACTIVE | LOSE:MEMBER | INSTANCE:ONLINE','--',4661,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1313,'清除redo group','--ALTER DATABASE CLEAR LOGFILE GROUP 2;',4662,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1314,'STATUS:CURRENT  | LOSE:MEMBER | INSTANCE:ONLINE','--',4663,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1315,'分区表--drop 分区','--alter table t_pe_r drop partition p3;',4664,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1316,'间隔分区--区间转间隔分区','--alter table 分区表名 set interval (numtoyminterval(1,\'month\'));  --根据分区列每月一个分区\n--alter table 分区表名 set interval (numtodsinterval (1,\'day\')); --根据分区列每天一个分区\n--转换范围到间隔分区需要把范围分区的maxvalue分区取消才能转换',4664,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1317,'分区表--移动分区','--alter table TAB_NAME move partition PART_NAME [tablespace xxx][update global indexes] ;\n',4664,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1318,'分区表--查询某个分区的数据','--SQL> select xxx from table_name partition(partiton_name);',4664,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1319,'分区消除','--演示',4665,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1320,'查看分区的大小','--select bytes/1024/1024,PARTITION_NAME,SEGMENT_NAME from dba_segments where segment_name=\'XXX\';',4666,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1321,'exception | 定义异常变量','--declare\n	table_or_view_does_not_exist exception;--定义一个异常\n	pragma exception_init(table_or_view_does_not_exist,-942);\n        --捕获一个表不存在的错误，表不存在的错误就ORA-00942\nbegin\n   xxx\nend;\n/',4667,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1322,'max(x)over()','--select max(b)over()a from a;\n--每一行显示B列的总数',4668,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1323,'查看最近24小时中每小时的redo生成量','SELECT snap_id,\n	begin_TIME,end_TIME,\n	round(VALUE/1024/1024-(select value/1024/1024 \n							from dba_hist_sysstat \n							where snap_id=x.snap_id-1 and stat_name=\'redo size\')\n	,0)||\' MB\' redo_log_mb \nFROM (\n    select stat.\n        value,\n		to_char(snp.BEGIN_INTERVAL_TIME,\'YYYY-MM-DD HH24:MI\') begin_TIME,\n		to_char(snp.end_INTERVAL_TIME,\'YYYY-MM-DD HH24:MI\') end_TIME,\n        snp.snap_id\n    from dba_hist_sysstat stat,dba_hist_snapshot snp  \n    where stat_name=\'redo size\' and snp.snap_id=stat.snap_id \n    ORDER BY stat.SNAP_ID DESC\n) x  WHERE ROWNUM<24;\n--修改rownum可以增大或缩小小时数',4669,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1324,'创建外键','--drop table a;\n--create table a (a int primary key);\n--drop table b;\n--create table b (a int primary key,b int ,foreign key(b) references a(a));\n--外键可以引用primary key和unique key',4670,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1325,'查看表的外键约束名/引用的表/引用的列/','   col column_name for a20\n   col TABLE_NAME for a20\n   SELECT F.TABLE_NAME, F.COLUMN_NAME, F.CONSTRAINT_NAME  \n   FROM dba_CONSTRAINTS R, dba_CONS_COLUMNS F \n   WHERE  R.TABLE_NAME = \'B\'\n   AND R.CONSTRAINT_TYPE = \'R\' \n   AND R.R_CONSTRAINT_NAME = f.CONSTRAINT_NAME ;\n--替换B查询，或者增加OWNER列筛选用户',4671,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1326,'ALL_CONSTRAINTS','--ALL_CONSTRAINTS describes constraint definitions on tables accessible to the current user.',4672,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1327,'组合分区','--',4673,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1328,'分区表的row移动','--分区表row移动会改变rowid',4674,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1329,'scn_to_timestamp(ORA_ROWSCN)','--scn转时间',4675,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1330,'ORA_ROWSCN','--显示行的scn号\n--select ORA_ROWSCN rowscn from rangel where rownum<10;\n--可以用scn_to_timestamp把scn转换成时间',4676,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1331,'STATUS:INACTIVE | LOSE:ALL    | INSTANCE:ONLINE','--',4677,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1332,'STATUS:CURRENT  | LOSE:ALL    | INSTANCE:ONLINE','--',4677,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1333,'重新创建redo log组','--ALTER DATABASE CLEAR UNARCHIVED LOGFILE GROUP 2;\n--如果没有文件系统上没有相应的redo file文件的话，会重新创建',4678,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1334,'查看操作的UNDO 信息','--SELECT s.username,\n  2         rs.segment_id,\n  3         r.usn,\n  4         rs.segment_name,      \n  5         r.rssize/1024/1024,\n  6         sq.sql_text\n  7    FROM v$transaction t, v$session s, v$rollstat r, dba_rollback_segs rs ,v$sql  sq,v$process pr\n  8  WHERE s.saddr = t.ses_addr\n  9     AND t.xidusn = r.usn \n 10     AND rs.segment_id = t.xidusn\n 11     AND s.sql_address=sq.address\n 12     AND s.sql_hash_value = sq.hash_value\n 13     AND s.PADDR=pr.ADDR\n 14  ORDER BY t.used_ublk DESC;\n',4679,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1335,'V$SESSION_LONGOPS','--执行时间超过6秒的操作都记录在这，而且可以查看进度',4680,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1336,'SQL%ROWCOUNT','--上文中处理的sql数量',4681,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1337,'DBA_ROLLBACK_SEGS','--DBA_ROLLBACK_SEGS describes rollback segments.',4682,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1338,'undo使用率','--SELECT \nseg.tablespace_name \"Tablespace Name\", \nts.bytes/1024/1024 \"TS Size(MB)\",   \nue.status \"UNDO Status\", \ncount(*)  \"Used Extents\",   \nround(sum(ue.bytes)/1024/1024, 2) \"Used Size(MB)\",   \nround(sum(ue.bytes)/ts.bytes*100, 2) \"Used Rate(%)\"\nFROM dba_segments seg, DBA_UNDO_EXTENTS ue,   \n(SELECT tablespace_name, sum(bytes) bytes     \n   FROM dba_data_files GROUP BY tablespace_name) ts\n    WHERE ue.segment_NAME=seg.segment_NAME and seg.tablespace_name=ts.tablespace_name \n    GROUP BY seg.tablespace_name, ts.bytes, ue.status ORDER BY seg.tablespace_name;',4683,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1339,'drop datafile','--',4684,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1340,'每15秒内删除重复的记录','--',4685,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1341,'dba_ind_partitions','--',4686,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1342,'lengthb','--返回字节的个数',4687,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1343,'ORA-04095','--原因:trigger \'string\' already exists on another table, cannot replace it\n处理:Drop the trigger with the same name and re-create it.',4688,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1344,'dba_role_privs','--',4689,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1345,'ALL_PART_TABLES','--ALL_PART_TABLES displays the object-level partitioning information for the partitioned tables accessible to the current user.\n\nRelated Views\n\n•DBA_PART_TABLES displays the object-level partitioning information for all partitioned tables in the database.\n\n•USER_PART_TABLES displays the object-level partitioning information for the partitioned tables owned by the current user. This view does not display the OWNER column.\n',4690,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1346,'DB_nK_CACHE_SIZE ','--',4691,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1347,'间隔分区--增加表空间','--alter table xxx set store in(TS_NAME_1[,TS_NAME_2]);',4692,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1348,'分区表--truncate 分区','--alter table sales3 truncate partition sp1 [update indexes]\n--[update indexes]如果这个在分区表上的索引是全局索引，那么就需要update indexes来维护索引，不然索引会不可用',4692,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1349,'查看DB中的分区表','col owner for a20\ncol table_name for a20\nselect owner,table_name from dba_tables\n  WHERE OWNER NOT IN(\'SYS\',\'SYSTEM\',\'SYSMAN\') and partitioned=\'YES\' order by 1,2;',4693,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1350,'DBA_TABLES','--ALL_TABLESALL_TABLES describes the relational tables accessible to the current user. To gather statistics for this view, use the DBMS_STATS package.\n--标有*(星号)的column表示只有在DBMS_STATS收集之后才显示\n',4694,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1351,'CREATE TABLESPACE',NULL,4695,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1352,'Bigfile tablespace','--只有一个datafile 或 temp data file，datafile的大小接近四十亿个block(2^32)。最大的单个datafile在block 32k情况下是128TB，在block8K情况下是32TB.',4696,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1353,'SQLERRM','--错误信息',4697,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1354,'set log_status [on | off]','--打开或关闭listener log\n--位置:/u01/app/diag/tnslsnr/localhost/listener/trace',4698,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1355,'查看表空间中的segment数量','--col file_name for a100\n  set line 180\n   select d.tablespace_name,nvl(s.jishu,0) ,d.file_name\n    from dba_data_files d,(select tablespace_name,count(*) jishu from dba_segments group by tablespace_name) s \n    where  s.tablespace_name(+)=d.tablespace_name order by 2 desc;\n--这里我查看0，因为要删除不用的TS',4699,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1356,'rebuild index','--alter index idx_name rebuild [online] [nologging] [parallel n];\n',4700,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1357,'RMAN-06172','--错误:\n    RMAN-06172: no AUTOBACKUP found or specified handle is not a valid copy or piece\n--原因:\n    restore spfile时出错\n--解决:\n    oracle对于指定的备份文件没有权限',4701,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1358,'v$session_wait_history','--session最近十次等待事件',4702,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1359,'dba_hist_active_sess_history','--',4702,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1360,'expdp | [PARALLEL]','--?1?��??',4703,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1361,'impdp | [PARALLEL]','--并行',4704,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1362,'ORA-19550','--原因:\n   使用rman登录数据库报错\n处理:\n   将tnsname中的相应service name改为(SERVER = DEDICATED)，因为共享服务器链接模式是不能做备份的',4705,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1363,'decode','--判断',4706,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1364,'升级线路','--9.0.1.3 (or earlier) -> 9.0.1.4 -> 10.2.0.4 -> 11.2\n9.2.0.8 | 10.1.0.5 | 10.2.0.2 | 11.1.0.6 -> 11.2\n{10.2.0.2 | 10.2.0.3 | 10.2.0.4 | 10.1.0.5 -> 10.2.0.5} | 11.1.0.7 | {9.2.0.8 | 11.2.0.1 | 11.1.0.6 -> 11.2.0.2}| {9.2.0.8 -> 11.2.0.3} | 12.1.0.1 -> 12.1',4707,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1365,'drop主键','--alter table USER_TOT_BASE drop PRIMARY KEY [CASCADE];',4708,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1366,'TEMP_UNDO_ENABLED','--',4709,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1367,'DBA_HIST_UNDOSTAT','--',4709,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1368,'10min -- 查看参数undo_retention是否符合oracle推荐的值','select tuned_undoretention,\n       (select value from v$parameter where name = \'undo_retention\') undo_retention_value\n  from v$undostat\n where tuned_undoretention >\n       (select value from v$parameter where name = \'undo_retention\')\n   AND BEGIN_TIME > sysdate - 1 / 24 / 60 * 10;\n\n#log:最近10分钟,undo_retuention参数的推荐值小于Oracle的推荐值，建议增大.',4710,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1369,'undo advisor','--',4711,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1370,'查看不属于系统用户下用户的plsql包','--COl text for a100\nselect owner,text from ALL_SOURCE where owner not in (\'SYS\',\'APEX_030200\',\'SYSMAN\',\'MDSYS\',\'EXFSYS\',\'CTXSYS\',\'APSTSTAT\');',4712,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1371,'v$bgprocess','--V$BGPROCESS displays information about the background processes.',4713,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1372,'impdp | [EXCLUDE]','--排除dmp中的某些对象，可以是table或index，或者是具体的对象object_type:\"in(\'object_name\')\"\n--impdp ex/ex@ota EXCLUDE=index,table:\"IN(\'ABC\')\" DIRECTORY=ex_dir dumpfile=ex.dmp\n--Exclude specific object types.\n    For example, EXCLUDE=SCHEMA:\"=\'HR\'\".\n注意:shell下执行impdp双引号和单引号需要转义，除非进入impdp的命令行，或者把命令保存到impdp的参数文件中执行。\n    impdp ex/ex@ota EXCLUDE=TABLE:\\\"=\\\'ABC\\\'\\\" DIRECTORY=ex_dir dumpfile=ex.dmp\n',4714,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1373,'DBA_IND_COLUMNS','--',4715,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1374,'限制每个block的行数','--alter table abc minimize records per block;',4716,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1375,'impdp | [include]','--这个在impdp好像没有作用，比如:dmp中有一个index和table，但是include=table，index也会被导入进去。',4717,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1376,'expdp对sequence的影响','--1.执行expdp时，已经被cache的sequence是不会被导出的。意思是，当前nextval=10，cache设置的是20，那么导出的sequence是从30开始的，不过，被expdp的DB也会从30开始，cache的值都被抛弃。',4718,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1377,'impdp | [remap_tablespace]','--导入时，转换存放的表空间\n--impdp ex/ex remap_tablespace=users:users2[,ts_name:ts_name] DIRECTORY=ex_dir dumpfile=ex.dmp\n',4719,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1378,'DBA_ADVISOR_TEMPLATES','--查看DB中所有关于模板的信息',4720,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1379,'创建DB link','--create database link geelyin96 connect to geelyin identified by geelyinpassword using \'192.168.1.1:1521/s216\'',4721,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1380,'show {error | errors}','--显示错误，比如:plsql编译出错，他不直接显示在sqlplus中，需要show error才能把出错的地方显示出来。',4722,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1381,'dba_views','--',4723,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1382,'CASE','--SELECT CASE \n    WHEN xxx then xxx \n    when xxx then xxx\n    else xxx end \n  from dual;',4724,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1383,'v$system_event','--',4725,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1384,'ROWID','--10个字节的地址。\n定位一行的地址',4726,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1385,'UROWID','--用于IOT，没有固定rowID的表示方式，\n他是行主键值的表示',4726,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1386,'UNLIMITED TABLESPACE','--',4727,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1387,'创建分区的物化视图','--',4728,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1388,'DBMS_SCHEDULER.STOP_JOB','--关闭正在执行的job',4729,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1389,'sys_connect_by_path','--',4730,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1390,'dbms_scheduler.create_job','exec dbms_scheduler.create_job(\njob_name =>\'OTA_TOT_CN_02_JOB\',\njob_type=>\'STORED_PROCEDURE\',\njob_action=>\'OTA_TOT_CN_02_PRO\',\nstart_date=>sysdate,\nrepeat_interval=>\'FREQ=HOURLY;INTERVAL=1\');',4731,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1391,'每小时的每隔五分钟执行一次','--FREQ=HOURLY;INTERVAL=1;byminute=0,5,15,25,30,35,40,45,50,55\'',4732,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1392,'移动lob字段','--alter table t321 move lob(en) store as (tablespace users);',4733,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1393,'查看clob对应的表','--SELECT A.TABLE_NAME,  A.COLUMN_NAME, B.SEGMENT_NAME, B.SEGMENT_TYPE, \n         B.TABLESPACE_NAME,  B.BYTES / 1024 / 1024,  B.BLOCKS, B.EXTENTS  \nFROM USER_LOBS A, USER_SEGMENTS B \n        WHERE A.SEGMENT_NAME = B.SEGMENT_NAME \n       ORDER BY B.BYTES DESC',4734,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1394,'ORA-01732','--问题:\n    insert一个表时出现的错误\n    ORA-01732: data manipulation operation not legal on this view\n解决:\n   当你看见一个表时(dba_objects.object_type),他未必真的是一个表，当你创建一个物化视图的时候自动为你创建一个物化视图对象，同时在创建一个表，这个表是不能insert的。',4735,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1395,'语法','--CREATE [OR REPLACE] TRIGGER trigger_name\n{BEFORE | AFTER }\n{INSERT | DELETE | UPDATE [OF column [, column …]]}\n[OR {INSERT | DELETE | UPDATE [OF column [, column …]]}...]\nON [schema.]table_name | [schema.]view_name \n[REFERENCING {OLD [AS] old | NEW [AS] new| PARENT as parent}]\n[FOR EACH ROW ]\n[WHEN condition]\nPL/SQL_BLOCK | CALL procedure_name;',4736,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1396,'DBA_EXTENTS','--',4737,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1397,'index_stats','--',4738,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1398,'创建目录','--create directory dir_dp as \'D:/oracle/dir_dp\';',4739,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1399,'PDB_DBA','--SET CONTAINER\n',4740,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1400,'PDB_DBA','--CREATE PLUGGABLE DATABASE',4740,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1401,'CONNECT','--CREATE SESSION',4740,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1402,'INSTRB（string1, string2[a,[b]]）','--和INSTR相同,只是操作的对参数字符使用的位置的是字节.',4741,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1403,'SERIALLY_REUSABLE','--禁止使用上下文。\n--在package中定义的变量，在package中的各个过程或函数中，没有关联，每次调用旗下的过程或函数，使用使用package中的默认值或null。',4742,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1404,'Thread 1 cannot allocate new log','--1.表示logfile切换时，导致，dbwr写脏数据太慢，导致当前logfile不能被释放，db无法写入logfile，导致db hang。\n2.第二种，logfile切换写archivelog，写的太慢，导致logfile不能释放，新的redolog条目无法写入logfile，导致db hang。',4743,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1405,'定义异常','--pragma exception_init(a,-942);',4744,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1406,'创建function','--create or replace function abc_fun (abc in int) \nreturn pls_integer\nas\nbegin\n	return abc;\nend;\n/\n\n--exec dbms_output.put_line(abc_fun(1));',4745,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1407,'ALL_TAB_PRIVS_MADE','--',4746,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1408,'on commit refresh','--',4747,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1409,'SID','--SELECT USERENV(\'SID\') FROM DUAL;--查看当前SID',4748,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1410,'CDB的3个组成部分','1.Root，他被命名为CDB$ROOT，存储由oracle提供的元数据和公共用户。Oracle提供的plsql包就是元数据的一种。一个公共用户是一个数据库用户，他存在于每一个容器中(CDB/PDB),一个CDB只有一个root\n2.Seed，他被命名为PDB$SEED，他是一个模板，用于创建PDB，不能对SEED增加或修改其中的object。一个CDB只有一个seed。\n3.PDB，就是实际数据库，就是non-cdb\n上面这些组建叫做容器。因此，root是容器，seed是容器，每个pdb是一个容器。每个容器在CDB中有一个唯一的容器id和名字\n$$$Database Administrator\'s Guide.36 Overview of Managing a Multitenant Environment',4749,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1411,'Common user和local user','--common user是一个用户，他在cdb和pdb中的身份都是一样的。一些管理任务只能是由公共用户执行的，比如create pdb，或unplug pdb。Cdb也支持本地用户。\n$$$Database Administrator\'s Guide.36 Overview of Managing a Multitenant Environment',4749,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1412,'PDB_FILE_NAME_CONVERT ','--',4750,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1413,'ORA-01950','--原因:\n    insert时报错。ORA-01950: no privileges on tablespace \'SALES\'\n解决:\n     执行insert用户对ts的使用权限(或者空间使用限制)不够， grant UNLIMITED TABLESPACE to lsss;之后正常。',4751,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1414,'抛出异常','--Raise',4752,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1415,'example','--',4753,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1416,'*_scheduler_programs','--',4754,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1417,'user_scheduler_chain_rules','--',4754,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1418,'user_scheduler_chain_steps','--',4754,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1419,'*_scheduler_running_Jobs','--',4754,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1420,'dbms_scheduler.disable','--停止job\n--dbms_scheduler.disable(\'OTA_TOT_CN_02_JOB\');\n',4755,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1421,'DBMS_SCHEDULER.DROP_JOB','--',4755,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1422,'PDB_DBA','--CREATE SESSION\n',4756,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1423,'使用指定位置的备份','--1.startup nomount #startup之前删除$ORACLE_HOME/dbs/下的spfile或pfile(也就是不使用ORACLE_SID所制定的参数文件启动instance)\n--2.restore spfile from \"xxx\"\n--注意事项:1.删除$ORACLE_HOME/dbs/目录下的文件(将要恢复的SID的文件);2.确保ORACLE有对备份文件读的权限',4757,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1424,'基于controlfile恢复','-- recover database using backup controlfile until cancel;',4758,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1425,'查看db中的cdb','--SELECT NAME, CDB, CON_ID FROM V$DATABASE;',4759,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1426,'创建PDB | 克隆PDB','--CREATE PLUGGABLE DATABASE pdb2 FROM goku2 [FILE_NAME_CONVERT=(\'goku2\',\'pdb2\')];\n--goku2需要read only',4760,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1427,'show parameter xx','--查看参数',4761,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1428,'连接指定的PDB','--ALTER SESSION SET CONTAINER =PDB_NAME;',4762,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1429,'instance | Opens the PDB in migrate mode.','--ALTER PLUGGABLE DATABASE goku2 OPEN UPGRADE [RESTRICTED];\n',4762,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1430,'启动pdb','-- STARTUP PLUGGABLE DATABASE pdb2 ;\n',4762,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1431,'CON_NAME','--SELECT SYS_CONTEXT (\'USERENV\', \'CON_NAME\') FROM DUAL;--查看当前CDB/PDB的名字',4763,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1432,'CON_id','--SELECT SYS_CONTEXT (\'USERENV\', \'CON_id\') FROM DUAL;--查看当前CDB/PDB ID',4763,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1433,'non-CDB的概念','--所有用12c之前的版本创建的数据库都称为non-CDB，到了12c数据库只分为3种，CDB/PDB/non-CDB，不属于CDB和PDB就是non-CDB\n$$$Database Administrator\'s Guide.36 Overview of Managing a Multitenant Environment',4764,'2016-04-08 00:15:14','2016-04-08 00:15:14',NULL),(1434,'CDB的作用','--container database (CDB) 是一个容器数据库，他可以管理0个，1个，或多个pluggable databases (PDBs)(可拔插数据库)，更准确的说他是一个存放多个PDB数据库的容器。\n$$$Database Administrator\'s Guide.36 Overview of Managing a Multitenant Environment',4764,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1435,'CDB创建PDB的数量','--A CDB can contain up to 253 PDBs, including the seed.',4764,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1436,'ENABLE_PLUGGABLE_DATABASE','--',4765,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1437,'配置CDB em(HTTP)','--1.配置端口\n    exec DBMS_XDB_CONFIG.SETHTTPPORT(http_port_number);\n2.浏览器中打开em\n    http://database_hostname:http_port_number/em/\n$$$Database Administrator\'s Guide.37 Creating and Configuring a CDB',4766,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1438,'配置CDB em(HTTPS)','----1.配置端口\n    exec DBMS_XDB_CONFIG.SETHTTPSPORT(http_port_number);\n2.浏览器中打开em\n    https://database_hostname:http_port_number/em/\n$$$Database Administrator\'s Guide.37 Creating and Configuring a CDB',4766,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1439,'EM_EXPRESS_BASIC','--',4767,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1440,'EM_EXPRESS_ALL','--',4767,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1441,'创建PDB | 通过non-CDB','--',4768,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1442,'CDB_SERVICES ','--',4769,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1443,'ORA-31693\nORA-00936','--原因:\n    expdp时发生的错误，expdp maclean/maclean directory=dump tables=estimate_me query=estimate_me:\"where t1<2000\"\n解决:\n    /* 不采用参数文件形式，没有加单引号的情况下出现ORA-00936: missing expression错误*/，要么使用参数文件，要么加上单引号\n   expdp maclean/maclean directory=dump tables=estimate_me query=estimate_me:\'\"where t1<2000\"\'',4770,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1444,'升级前事项 01','--When upgrading to a new release, back up your existing production environment, both software and database, before installation.',4771,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1445,'V$VERSION','--',4772,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1446,'V$SQL_SHARED_CURSOR','--查看子游标为什么不能共享',4773,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1447,'限制oracle用户使用sqlplus来使用命令','--可以限制ALTER/BEGIN/CONNECT/DECLARE/EXEC/EXECUTE/GRANT/HOST/INSERT/SELECT/UPDATE命令，只有被限制的用户使用sqlplus才会被限制。',4774,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1448,'raw','--',4775,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1449,'NLS_CHARACTERSET','--',4776,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1450,'nls_length_semantics','--默认定义数据类型，以字节，还是字符来定义\n',4777,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1451,'BFILE','--在DB中存储一个oracle目录对象(操作系统目录的一个指针)和一个文件名，并读取这个文件',4778,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1452,'BLOB','--允许存储4GM数据\n在10G以上版本，可以存储4GB*10（db_block size）。\n存储二进制',4778,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1453,'clob','--存储4GB数据，\n在10G以上版本，可以存储4GB*10（db_block size）。',4778,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1454,'NCLOB','--4GB数据',4778,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1455,'查看数据在数据库中如何存储','--select dump(column_name)  dump from dual;',4779,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1456,'%NOTFOUND','--',4780,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1457,'user_scheduler_schedules','--',4781,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1458,'user_scheduler_chins','--',4781,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1459,'user_scheduler_running_chains','--',4781,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1460,'创建同义词','--Create public synonym table_name for user.table_name;',4782,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1461,'物化视图不执行的一种解决方法','--执行以下的前提，是检查alert没有错误，也看不出基表和物化视图两者有什么问题的前提下。\n--1.V$LOCK.TYPE(JI)，表示这个锁是锁住了一个物化视图，所以当我手动执行刷新的时候，hang住不动。\n--2.停止自动刷新的job(doc-2606)\n--3.kill掉执行自定刷新的session\n--4.如果kill的session没有释放object，那么去OS级别kill掉SPID\n--4.1可以尝试手动刷新,看看是否有问题，有的话执行5\n--5.启动job就可以了',4783,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1462,'现象','--创建物化视图，会创建一个和物化视图名字一样的表.',4783,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1463,'查看锁类型','--SELECT /*+ FIRST_ROWS ORDERED */ username,\ns.osuser osuser , s.sid sid , s.serial# serial, l.lmode lmode ,\ndecode(L.LMODE,1,\'No Lock\',\n2,\'Row Share\',\n3,\'Row Exclusive\',\n4,\'Share\',\n5,\'Share Row Exclusive\',\n6,\'Exclusive\',\'NONE\') lmode_desc, l.type type ,\ndecode(l.type,\n\'BL\',\'Buffer hash table instance lock\',\n\'CF\',\' Control file schema global enqueue lock\',\n\'CI\',\'Cross-instance function invocation instance lock\',\n\'CS\',\'Control file schema global enqueue lock\',\n\'CU\',\'Cursor bind lock\',\n\'DF\',\'Data file instance lock\',\n\'DL\',\'Direct loader parallel index create\',\n\'DM\',\'Mount/startup db primary/secondary instance lock\',\n\'DR\',\'Distributed recovery process lock\',\n\'DX\',\'Distributed transaction entry lock\',\n\'FI\',\'SGA open-file information lock\',\n\'FS\',\'File set lock\',\n\'HW\',\'Space management operations on a specific segment lock\',\n\'IN\',\'Instance number lock\',\n\'IR\',\'Instance recovery serialization global enqueue lock\',\n\'IS\',\'Instance state lock\',\n\'IV\',\'Library cache invalidation instance lock\',\n\'JQ\',\'Job queue lock\',\n\'KK\',\'Thread kick lock\',\n\'MB\',\'Master buffer hash table instance lock\',\n\'MM\',\'Mount definition gloabal enqueue lock\',\n\'MR\',\'Media recovery lock\',\n\'PF\',\'Password file lock\',\n\'PI\',\'Parallel operation lock\',\n\'PR\',\'Process startup lock\',\n\'PS\',\'Parallel operation lock\',\n\'RE\',\'USE_ROW_ENQUEUE enforcement lock\',\n\'RT\',\'Redo thread global enqueue lock\',\n\'RW\',\'Row wait enqueue lock\',\n\'SC\',\'System commit number instance lock\',\n\'SH\',\'System commit number high water mark enqueue lock\',\n\'SM\',\'SMON lock\',\n\'SN\',\'Sequence number instance lock\',\n\'SQ\',\'Sequence number enqueue lock\',\n\'SS\',\'Sort segment lock\',\n\'ST\',\'Space transaction enqueue lock\',\n\'SV\',\'Sequence number value lock\',\n\'TA\',\'Generic enqueue lock\',\n\'TD\',\'DDL enqueue lock\',\n\'TE\',\'Extend-segment enqueue lock\',\n\'TM\',\'DML enqueue lock\',\n\'TT\',\'Temporary table enqueue lock\',\n\'TX\',\'Transaction enqueue lock\',\n\'UL\',\'User supplied lock\',\n\'UN\',\'User name lock\',\n\'US\',\'Undo segment DDL lock\',\n\'WL\',\'Being-written redo log instance lock\',\n\'WS\',\'Write-atomic-log-switch global enqueue lock\') type_desc ,\nrequest , block\nFROM v$lock l, v$session s\nWHERE s.sid = l.sid\nAND l.type <> \'MR\'\nAND s.type <> \'BACKGROUND\'\nORDER BY username\n/',4784,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1464,'SGA_TARGET','--',4785,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1465,'管道备份','--rman pipe p1 target /\n	\nDECLARE\n V_INPUT VARCHAR2(32767) := \'SHOW ALL;\';\n V_OUT NUMBER;\n BEGIN\n DBMS_PIPE.PACK_MESSAGE(V_INPUT);\n V_OUT := DBMS_PIPE.SEND_MESSAGE(\'ORA$RMAN_P1_IN\');\n DBMS_OUTPUT.PUT_LINE(V_OUT);\n COMMIT;\n END;\n /\n \n \n DECLARE\n V_OUTPUT VARCHAR2(32767);\n V_OUT NUMBER := 0;\n BEGIN\n WHILE (V_OUT = 0) LOOP\n V_OUT := DBMS_PIPE.RECEIVE_MESSAGE(\'ORA$RMAN_P1_OUT\', 5);--注意大小写\n IF V_OUT = 0 THEN\n DBMS_PIPE.UNPACK_MESSAGE(V_OUTPUT);\n DBMS_OUTPUT.PUT_LINE(V_OUTPUT);\n END IF;\n END LOOP;\n COMMIT;\n END;\n/\n\n\n\nCREATE OR REPLACE PROCEDURE add_dept IS\nBEGIN\n    DBMS_OUTPUT.PUT_LINE(\' Inserted \');\nEND;\n/',4786,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1466,'创建PDB | 通过SEED创建','--CREATE PLUGGABLE DATABASE hrpdb ADMIN USER dba1 IDENTIFIED BY password;\n[ROLES=(DBA)]\n[FILE_NAME_CONVERT=(\'seed\',\'hrpdb\')] #赋予PDB_DBA\n[STORAGE (MAXSIZE 2G MAX_SHARED_TEMP_SIZE 100M)]\n[DEFAULT TABLESPACE sales DATAFILE \'/disk1/oracle/dbs/salespdb/sales01.dbf\' SIZE 250M AUTOEXTEND ON]\n[PATH_PREFIX = \'/disk1/oracle/dbs/salespdb/\']\n[TEMPFILE REUSE]\n\n',4787,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1467,'创建PDB | 插入unplug pdb','--CREATE PLUGGABLE DATABASE salespdb USING \'/disk1/usr/financepdb.xml\' NOCOPY\n--NOCOPY 表示拔掉的pdb的data file不需要重命名。',4787,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1468,'show CON_NAME','--查看当前使用的pdb',4788,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1469,'V$CONTAINERS','--',4789,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1470,'DBA_PDBS','--',4789,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1471,'V$PDBS','--',4789,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1472,'TNS-12542/TNS-12560/TNS-00512','--原因:\n    启动lsnrctl start 报错(具体见文档)\n解决:\n    1.首先检查/etc/hosts 是否N个IP指向了同一个主机名\n    2.检查hostname是否存在于/etc/hosts 中。',4790,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1473,'CREATE PLUGGABLE DATABASE ','--创建拔插数据库权限',4791,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1474,'instance | read only/read write pdb','--ALTER PLUGGABLE DATABASE goku2 OPEN { READ WRITE | READ ONLY } [RESTRICTED] [FORCE];',4792,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1475,'instance | shudown pdb','--ALTER PLUGGABLE DATABASE goku2 CLOSE [IMMEDIATE]\n--IMMEDIATE 不加表示normal 模式关闭\n',4792,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1476,'instance | mount','--ALTER PLUGGABLE DATABASE goku2 mount;',4792,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1477,'pdb相关操作','--ALTER PLUGGABLE DATABASE ALL OPEN [ READ WRITE ] [ FORCE ];\n--ALTER PLUGGABLE DATABASE ALL EXCEPT salespdb, hrpdb CLOSE IMMEDIATE;\n',4792,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1478,'CONN[ECT]','--CONN[ECT] [logon] [AS {SYSOPER | SYSDBA | SYSBACKUP | SYSDG | SYSKM}]\n    {username | /}[@connect_identifier] [edition={edition_name | DATABASE_DEFAULT}]\n        connect_identifier \"host[:port][/service_name][:server][/instance_name]\"\n            :server：dedicated, shared, and pooled，这写参数称为(service handler type)\n        edition={edition_name | DATABASE_DEFAULT}：指定一个版本，如果需要指定一个版本需要use权限。如果不指定，那么默认就是DATABASE_DEFAULT',4793,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1479,'CURRENT_SCHEMA','--SELECT SYS_CONTEXT(\'USERENV\', \'CURRENT_SCHEMA\') FROM DUAL;',4794,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1480,'SESSION_USER','--SELECT SYS_CONTEXT(\'USERENV\', \'SESSION_USER\') FROM DUAL;',4794,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1481,'使用本地索引，来对分区表建立约束','--如果想使用一个局部分区索引来保证这个约束(uniue/primary key),那么分区键必须包括在约束中。',4795,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1482,'NLS_DATE_FORMAT','--',4796,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1483,'INS-13001','--原因:\n   Centos 6.5安装Oracle 12c r1执行到第二步Skip software updates报INS-13001，log的错误信息\n   WARNING: [WARNING] [INS-13001] Environment does not meet minimum requirements.\n   CAUSE: Minimum requirements were not met for this environment\n   ACTION: Either check the logs for more information or check the supported configurations for this product..\n--解决:\n    download the rh.noarch.tar from the oracle metalink note RHEL6: 12c OUI INS-13001: CVU Fails: Reference data is not available for verifying prerequisites on this operating system distribution (Doc ID 1567127.1)\n\n[1] install the rpm redhat-release-6Server-1.noarch.rpm\n\n[root@oracledb1 oracle]# rpm -ivh redhat-release-6Server-1.noarch.rpm\nPreparing...                ########################################### [100%]\n   1:redhat-release         ########################################### [100%]\n\nCheck the installed rpm \n[root@oracledb1 OraInstall2013-11-22_10-07-58AM]# rpm -qa | grep redhat-release\nredhat-release-server-6Server-6.4.0.4.el6.x86_64\nredhat-release-6Server-1.noarch\n[root@oracledb1 OraInstall2013-11-22_10-07-58AM]#',4797,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1484,'设置db的默认表空间','--ALTER DATABASE DEFAULT TABLESPACE root_tbs;\n',4798,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1485,'ORA-12505','--错误:\n    ORA-12505, TNS:listener does not currently know of SID given in connect descriptor\n原因:\n    使用jdbc链接oracle时发生的错误\n解决:\n    把\"jdbc:oracle:thin:@107.167.13.130:1521:pdb_newandrstore\",\"newandrstore\",\"newandrstore_usa\"改成\"jdbc:oracle:thin:@107.167.13.130:1521/pdb_newandrstore\",\"newandrstore\",\"newandrstore_usa\"就可以了，语法问题，不是要使用sid，对于oracle链接来说只要3样东西，ip/端口/service_name',4799,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1486,'备份原则 01','--In addition to regularly scheduled backups, you should always back up your database immediately after implementing changes to the database structure.',4800,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1487,'PRODUCT_COMPONENT_VERSION','--PRODUCT_COMPONENT_VERSION contains version and status information for component products.',4801,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1488,'Linux_6_5_64_bit_Oracle_12c_r1','--安装前rpm和参数设置',4802,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1489,'操作系统认证和密码文件认证优先级','Operating system authentication takes precedence over password file authentication',4803,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1490,'V$PWFILE_USERS','--V$PWFILE_USERS lists all users in the password file, and indicates whether the user has been granted the SYSDBA, SYSOPER, SYSASM, SYSBACKUP, SYSDG, and SYSKM privileges.',4804,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1491,'instance','--srvctl start database -db db_unique_name\nsrvctl start database -db db_unique_name -startoption nomount\nsrvctl start database -db db_unique_name -startoption mount\nsrvctl start database -db db_unique_name -startoption restrict\nsrvctl start database -db db_unique_name -startoption force',4805,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1492,'RESTRICTED SESSION','--登录RESTRICT模式的权限',4806,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1493,'instance(shutdown)','--srvctl stop database -db db_unique_name -stopoption normal\nsrvctl stop database -db db_unique_name -stopoption immediate\nsrvctl stop database -db db_unique_name -stopoption transactional\nsrvctl stop database -db db_unique_name -stopoption abort\n#For SRVCTL, if the -stopoption option is omitted, the shutdown operation proceeds according to the stop options stored in the Oracle Restart configuration for the database. The default stop option is immediate.',4807,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1494,'ORA-01013 ','--官方文档对这个错误的解释,我还没碰到\nAfter ORA-01013 occurs, you must consider the instance to be in an unpredictable state. You must therefore continue the shutdown process by resubmitting a SHUTDOWN command. If subsequent SHUTDOWN commands continue to fail, you must submit a SHUTDOWN ABORT command to bring down the instance. You can then restart the instance.',4808,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1495,'静默模式','--ALTER SYSTEM { QUIESCE DATABASE | unquiesce };\n#这个模式只允许DBA操作，准确的说，只允许sys/system来操作，即使有dba角色的用户也不行。\n\n--alter system {quiesce restricted | UNQUIESCE}\n#ORA-25511: quiesce not supported for pluggable databases\n#ORA-25510: quiesce not supported for the root container\n',4809,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1496,'Automatic SQL Tuning Task(Enabling | Disabling)','--exec DBMS_AUTO_TASK_ADMIN.ENABLE (client_name => \'sql tuning advisor\',operation => NULL,window_name => NULL);\nexec DBMS_AUTO_TASK_ADMIN.DISABLE (client_name => \'sql tuning advisor\',operation => NULL,window_name => NULL);',4810,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1497,'STATISTICS_LEVEL ','--需要设置为basic才能开启sql 调优顾问',4811,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1498,'查看sql truning adviosr是否开启','--SELECT CLIENT_NAME, STATUS FROM   DBA_AUTOTASK_CLIENT WHERE  CLIENT_NAME = \'sql tuning advisor\';\n',4812,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1499,'DBA_ADVISOR_USAGE','--db中每个顾问的使用信息',4813,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1500,'关闭表的inmemory','--ALTER TABLE oe.product_information NO INMEMORY;',4814,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1501,'V$IM_SEGMENTS','--',4815,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1502,'INMEMORY_QUERY','--是否开启inmemory查询',4816,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1503,'压缩','--ALTER TABLE oe.product_information INMEMORY [ MEMCOMPRESS FOR CAPACITY LOW ];\n--NO MEMCOMPRESS\n--MEMCOMPRESS FOR DML\n--MEMCOMPRESS FOR QUERY LOW\n--MEMCOMPRESS FOR QUERY HIGH\n--MEMCOMPRESS FOR CAPACITY LOW\n--MEMCOMPRESS FOR CAPACITY HIGH\n',4817,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1504,'remote_listener','--instance注册到另一台PC上的侦听器地址。',4818,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1505,'散列分区索引','--create index t_idx on t(owner,object_type,object_name) \nglobal\npartition by hash(owner) partitions 16;\n',4819,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1506,'1','SELECT INDEX_NAME, BLEVEL, LEAF_BLOCKS AS \"LEAFBLK\", DISTINCT_KEYS AS \"DIST_KEY\",\n       AVG_LEAF_BLOCKS_PER_KEY AS \"LEAFBLK_PER_KEY\",--平均每个distinct indexed key的leaf block数\n       AVG_DATA_BLOCKS_PER_KEY AS \"DATABLK_PER_KEY\" --平均每个distinct indexed key的data block数\nFROM   DBA_IND_STATISTICS\nWHERE  OWNER = \'SH\'\nAND    INDEX_NAME IN (\'CUST_LNAME_IX\',\'CUSTOMERS_PK\');\n',4820,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1507,'PX Deq Credit: send blkd','--说明在执行的sql语句中的表开启了并行，但是他不适合并行，导致并行进程之间交换数据产生性能问题。',4821,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1508,'本地索引--创建','--create index g_idx1 on range1（data)LOCAL',4822,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1509,'nls_language','--设置instance语言',4823,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1510,'nls_territory','--设置instance的地理位置。',4823,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1511,'undo_management','Parameter type	String\nSyntax	UNDO_MANAGEMENT = { MANUAL | AUTO }\nDefault value	AUTO\nModifiable	No\nBasic	No\nOracle RAC	Multiple instances must have the same value.',4824,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1512,'resource_limit','--设置是否开启限制资源',4825,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1513,'recyclebin','--设置是否开启回收站。',4826,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1514,'REMOTE_OS_AUTHENT','--用来控制是否允许远端操作系统验证',4827,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1515,'remote_login_passwordfile','--设置是否启动密码文件',4828,'2016-04-08 00:15:15','2016-04-08 00:15:15',NULL),(1516,'os_authent_prefix','--远程OS认证的前缀设置',4829,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1517,'instance_number','--设置instance号',4830,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1518,'莫名 | scheduler不能执行','--查看系统级别oracle进程是否过多，是的oracle不能启动process',4831,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1519,'调优--UNDO_RETENTION','--undo保留的保留时间可以参考V$UNDOSTAT.TUNED_UNDORETENTION',4832,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1520,'V$SQLSTATS','--',4833,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1521,'rba','--rba就是重做块地址,比如说,用户发出了一条update命令,更新了块A,块A现在变成了脏块,oracle会为他\n生成一条重做记录.这条重做记录在重做日志文件中的位置就是rba(redo block address)',4834,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1522,'dba_hist_sql_plan','--',4835,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1523,'CONTROL_MANAGEMENT_PACK_ACCESS','--',4836,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1524,'events in waitclass Other','http://www.itpub.net/thread-1403458-1-1.html',4837,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1525,'过程赋给给某个用户需要注意的地方','如果一个过程由A创建，里面有显示A的表中的内容,那么当A把这个过程赋给B后，B来执行这个过程他也能显示这个过程中A用户的表，即使他没有获得这个表的select权限。',4838,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1526,'修改profile','--alter profile <profile_name> limit <profile_limit_parameter>;',4839,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1527,'修改用户profile','--alter user <username> profile <profilename>;',4839,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1528,'INMEMORY_SIZE','--',4840,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1529,'模板','--show all;\nCONFIGURE DEVICE TYPE DISK PARALLELISM 6 BACKUP TYPE TO COMPRESSED BACKUPSET;\nCROSSCHECK BACKUP;\nDELETE EXPIRED BACKUP;\nBACKUP INCREMENTAL LEVEL 0 DATABASE FORMAT \'/opt/oracle/rman/backup/s217/d0-%n-%I-%T-%p-%U.bak\' TAG=\'DBF0\';\nDELETE OBSOLETE;\nBACKUP ARCHIVELOG ALL not backed up 1 times FORMAT \'/opt/oracle/rman/backup/s217/a9-%n-%I-%T-%h-%p-%U.bak\' delete input TAG=\'ARCH\';\nDELETE OBSOLETE;\nbackup spfile format \'/opt/oracle/rman/backup/s217/s9-%n-%I-%T-%p-%U.bak\' tag=\'spf\';\nbackup current controlfile format \'/opt/oracle/rman/backup/s217/c9-%n-%I-%T-%p_%U.bak\' tag=\'ctl\';\nbackup current controlfile format \'/opt/oracle/rman/backup/s217/c9-%n-%I-%T-%p_%U.bak\' tag=\'ctl\';\nSQL \"ALTER DATABASE BACKUP CONTROLFILE TO TRACE AS \'\'/opt/oracle/rman/backup/s217/c9-bak_#DATABASE_ALIAS#_ctl_trc_dup_1.trc\'\' REUSE\";\nSQL \"ALTER DATABASE BACKUP CONTROLFILE TO TRACE AS \'\'/opt/oracle/rman/backup/s217/c9-bak_#DATABASE_ALIAS#_ctl_trc_dup_2.trc\'\' REUSE\";\nCONFIGURE DEVICE TYPE DISK CLEAR;\nlist backup summary;',4841,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1530,'db_domain','--设置全局唯一的名称、域名',4842,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1531,'db_name','--设置数据库名称',4842,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1532,'db_unieque_name','--设置唯一的名字',4842,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1533,'_db_block_max_cr_dba','--设置databuffer中cr块的最大数量',4843,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1534,'local_listener','--配置动态listener注册',4844,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1535,'shared_servers','--共享服务器进程数量',4845,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1536,'star_transformation_enabled','--设置是否开启，允许优化器重写将事实表的维度联结在一起的查询',4846,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1537,'recovery_parallelism','--设置 instance recovery的并行度',4847,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1538,'compatible','--设置版本号',4848,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1539,'查看pga最大分配和当前分配','--select name,value/1024/1024 from v$pgastat where name in(\'maximum PGA allocated\',\'total PGA allocated\');',4849,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1540,'查询当前无法找到redo buffer存放数据的重试次数','--select statistic#,name,class,value from v$sysstat where name like \'redo buffer%\'; \n#这个值应该为0',4850,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1541,'查看instance granules大小','--SELECT component,granule_size from v$sga_dynamic_components;\nselect * from v$sgainfo where name=\'Granule Size\';\n',4851,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1542,'查询当前SGA已经占用的内存size','--SELECT ((SELECT SUM(value) FROM V$SGA) -\n       (SELECT CURRENT_SIZE FROM V$SGA_DYNAMIC_FREE_MEMORY)) \"SGA_TARGET\"\n  FROM DUAL;',4851,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1543,'v$memory_resize_ops','--',4852,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1544,'v$datafile_header;','--',4853,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1545,'自制事务的使用和阻塞的报错','--set transaction\n\nDBMS_TRANSACTION\n',4854,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1546,'SMON概念','--',4855,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1547,'pragma autonomous_transaction;','--自制事务\n',4856,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1548,'for update [nowait]','锁住查询出来的记录,如果查询的记录已经被锁住，是否一致等待直至可以获取。反之直接返回错误.ORA-00054: resource busy and acquire with NOWAIT specified or timeout expired',4857,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1549,'for update skip locked','--查询出第一条没有被锁住的记录',4857,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1550,'tab','--',4858,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1551,'col','--',4858,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1552,'sys_guid()','--类似于sequence作用的函数',4859,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1553,'session_per_user','--限制每个用户可以连接上来的数量。',4860,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1554,'INS-30131','--原因:\n  安装程序产生的文件和/tmp下已有的文件产生冲突\n解决:\n  删除/tmp下的一些文件。',4861,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1555,'从文件上体现sid和dbname的区别','--我用dbca创建数据库sid是ipppxppp dbname是dpppxppp\n[root@localhost rlwrap-0.41]# find / -name ipppxppp\n/u01/app/diag/rdbms/dpppxppp/ipppxppp\n[root@localhost rlwrap-0.41]# find / -name dpppxppp\n/u01/app/diag/rdbms/dpppxppp\n/u01/app/fast_recovery_area/dpppxppp\n/u01/app/oradata/dpppxppp\n/u01/app/cfgtoollogs/dbca/dpppxppp\n/u01/app/admin/dpppxppp',4862,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1556,'查询哪些object在im column中','--SELECT OWNER, SEGMENT_NAME, INMEMORY_PRIORITY, INMEMORY_COMPRESSION FROM V$IM_SEGMENTS;\n',4863,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1557,'create job','--',4864,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1558,'V$TEMPUNDOSTAT','--',4865,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1559,'TEMP_UNDO_ENABLED','Parameter type	Boolean\nDefault value	false\nModifiable	ALTER SESSION, ALTER SYSTEM\nRange of values	true | false\nBasic	No\nOracle RAC	Each session of each instance can have its own value or not set any value at all',4866,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1560,'trunc','--',4867,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1561,'DBA_UNDO_EXTENTS','--',4868,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1562,'1462240.1','--',4869,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1563,'854428.1','--Patch Set Updates for Oracle Products',4869,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1564,'查看每十分钟undo保留的时间','--select to_char(begin_time, \'DD-MON-RR HH24:MI\') begin_time,\nto_char(end_time, \'DD-MON-RR HH24:MI\') end_time, tuned_undoretention\nfrom v$undostat order by end_time;\n',4870,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1565,'undo的一些概念','--',4871,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1566,'显示undo TS自动扩展','--ALTER DATABASE DATAFILE \'/oracle/dbs/undotbs.dbf\' RESIZE 300M;\nALTER DATABASE DATAFILE \'/oracle/dbs/undotbs.dbf\' AUTOEXTEND OFF;\n',4872,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1567,'一个transaction在undo_tablespace中分配空间的步骤','--',4873,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1568,'10min -- 尝试或已经使用了未到期的undo的次数','select UNXPSTEALCNT, UNXPBLKREUCNT\n  from v$undostat\n where (UNXPSTEALCNT > 0 or UNXPBLKREUCNT > 0)\n   and BEGIN_TIME > sysdate - 1 / 24 / 60 * 10;',4874,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1569,'10min -- undo TS没有可用空间的次数','select NOSPACEERRCNT\n  from v$undostat\n where NOSPACEERRCNT > 0\n   and BEGIN_TIME > sysdate - 1 / 24 / 60 * 10;\n',4874,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1570,'10MIN -- ORA-01555出现的次数','select SSOLDERRCNT\n  from v$undostat\n where SSOLDERRCNT > 0\n   and BEGIN_TIME > sysdate - 1 / 24 / 60 * 10;\n',4874,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1571,'DB_FILES','#If the value of DB_FILES is too low, you cannot add data files beyond the DB_FILES limit without first shutting down the database.\n#If the value of DB_FILES is too high, memory is unnecessarily consumed.\n',4875,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1572,'V$SESS_TIME_MODEL ','--',4876,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1573,'V$SYS_TIME_MODEL','--',4876,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1574,'查看执行计划---dbms_xplan.DISPLAY_AWR','--',4877,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1575,'dbms_utility.get_parameter_value','--获得参数',4878,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1576,'_TRANCE_FILES_PUBLIC','--是否允许所有人读取跟踪文件。',4879,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1577,'对Null创建索引','--SELECT * FROM T_XIFENFEI WHERE OBJECT_ID IS NULL;\ncreate index ind_object_id on t_xifenfei(object_id,0);',4880,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1578,'ORA-12545','--原因:\n   设置中转通过remote_listener参数，链接时出现ORA-12545: Connect failed because target host or object does not exist \n解决:\n   即使不能直接连接想要的数据库，但是客户端机器上hosts文件还是要设置要链接的database的hostname以及ip\n   文档3113',4881,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1579,'查看表的并行度','--select table_name,degree from user_tables;',4882,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1580,'异机恢复','--1.restore spfile;\n2.restore conrtolfile;\n3.restore database;\n4.recover database;\n5.recover database using backup controlfile until cancel;\n6.alter database open resetlogs;\n',4883,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1581,'recover database命令区别','--1. recover database using backup controlfile\n2. recover database until cancel\n3. recover database using backup controlfile until cancel;\n4. recover database until cancel using backup controlfile;\n区别：\n1. 如果丢失丢失当前控制文件，用冷备份中的控制文件恢复的时候。用来告诉Oracle，不要以controlfile中的scn作为恢复的终点；\n2. 如果丢失current/active redo的时候。手动指定终点。\n3. 如果 丢失当前controlfile并且current/active redo都丢失，会先去 自动 应用归档日志,可以实现最大的恢复；\n4. 如果 丢失当前controlfile并且current/active redo都丢失，以旧的redo中的scn为恢复终点。因为没有应用归档日志，所有会丢失数据。',4883,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1582,'11GR2静默安装','--dbca -silent -createDatabase -templateName General_Purpose.dbc -gdbName weather -sid weather -sysPassword oracle -systemPassword oracle -emConfiguration none -disableSecurityConfiguration none -characterSet AL32UTF8\n',4884,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1583,'v$open_cursor','--',4885,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1584,'直行远端DDL','--exec dbms_utility.EXEC_DDL_STATEMENT@mika(\'drop table t\')',4886,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1585,'dbms_scheduler.enable','--dbms_scheduler.enable(\'user_day_access_date_job\')',4887,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1586,'查询session执行进度','--select SOFAR,TOTALWORK from V$SESSION_LONGOPS where  SOFAR<>TOTALWORK;',4888,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1587,'CDB中最大的PDB数量','--A CDB can contain up to 253 PDBs, including the seed',4889,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1588,'ORA-01502','--报错:\n   ORA-01502:index ‘OTA.PK_TBLOTA’or partition of such index is in unusable state(猜测可能是DML时报错)\n解决:\n   rebuild，UNUSABLE索引。\n原理：\n   猜测普通的索引就算失效，也不会导致表不能DML，但是这个索引是一个主键，需要使用索引来保证唯一性，所以会产生索引不能用,DML不能执行的情况。',4890,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1589,'创建表并添加到inmemory','--CREATE TABLE test_inmem (id NUMBER(5) PRIMARY KEY) INMEMORY;\n',4891,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1590,'普通用户使用set autot trace','--SQL> grant select on v_$statname to goku\nSQL> grant select on v_$statname to goku;\nSQL> grant select on v_$mystat to goku;\nSQL> grant select on v_$sesstat to goku;\n\n',4892,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1591,'INMEMORY_FORCE','--是否开启表和物化视图的inmemory选项。',4893,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1592,'开启表的inmemory','--ALTER TABLE oe.product_information INMEMORY;',4894,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1593,'INMEMORY_CLAUSE_DEFAULT','--',4895,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1594,'查看inmemory使用情况','--select INMEMORY_SIZE,BYTES  from V_$IM_SEGMENTS where owner=\'GOKU\';\n',4896,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1595,'remote_listener','--设置转调listener监听',4897,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1596,'执行带参数的job','--默认情况下存储过程在job中不能带参数。',4898,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1597,'TNS-01189: The listener could not authenticate the user','--原因:\n   lsnrctl status时报的错。\n   TNS-01189: The listener could not authenticate the user\n解决:\n   linux 6 中host文件中hostname和ip不符导致',4899,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1598,'运行状况','--col next_run_date for a40\ncol last_start_date for a40\ncol job_action for a40\nselect job_name,JOB_ACTION,RUN_COUNT,FAILURE_COUNT,LAST_START_DATE,NEXT_RUN_DATE from ALL_SCHEDULER_JOBS;',4900,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1599,'MERGE例子','--BEGIN\nMERGE INTO   bbb b\n    USING aaa a\n    ON(a.a = b.q)\n    WHEN MATCHED THEN\n    UPDATE SET\n    b.w =   a.b,\n    b.e =   a.c,\n    b.r =   a.d,\n    b.t =   a.e\nWHEN NOT MATCHED THEN\nINSERT VALUES(a.a,a.b,a.c,a.d,a.e);   \nEND;\n/\n\nMerge是insert和update的集合。\n用法：\nINTO B表，A为原表，基于ON（）中的两列是否相同，来做插入。PS:ON中的 = 号两边位置可以互换，无所谓。\nWHEN MATCHED THEN，当ON中的两列中有相同的值，那就基于此值的行，来更新数据。\nPs：update set中不能包含ON（）中的列，否者会出现错误ORA-38104，同时update set中的 =号两边固定格式，左边是into的，右边是using的。\nWHEN NOT MATCHED THEN，当ON中的两列中没有相同的值，那就使用A表数据插入B表。\n如果出现ORA-30926错误（无法获得稳定的行），这个错误针对update而言的，B表中Q列有和A表中A列相同的值，而且A表中A列和B的Q中的相同值还不只一个，所以无法判断用A表中的那个相同值的行来更新B中Q列相同值的行。主要是源表(也就是A不能有重复)',4901,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1600,'ORA-30926','--使用merge语句出现的错误:\n    如果出现ORA-30926错误（无法获得稳定的行），这个错误针对update而言的，B表中Q列有和A表中A列相同的值，而且A表中A列和B的Q中的相同值还不只一个，所以无法判断用A表中的那个相同值的行来更新B中Q列相同值的行。主要是源表(也就是A不能有重复)',4902,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1601,'db_unique_name','--',4903,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1602,'dbms_utility.get_cpu_time','--',4904,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1603,'DB_BLOCK_CHECKSUM','--',4905,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1604,'db_ultra_safe','--',4905,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1605,'db_recovery_file_dest','--',4906,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1606,'session','--设置连接到instance的最大会话数量',4907,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1607,'查询当前redo log buffer的大小','--select * from v$sgastat where name=\'log_buffer\';',4908,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1608,'重命名列','--alter table mon_module_list rename column ITEM_NAME to module;',4909,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1609,'PGA_AGGREGATE_TARGET','--',4910,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1610,'plsql_optimize_level','--',4911,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1611,'processes','--',4912,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1612,'job_queue_processes','--',4913,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL),(1613,'db_recovery_file_dest_size','--',4914,'2016-04-08 00:15:16','2016-04-08 00:15:16',NULL);
/*!40000 ALTER TABLE `content` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `document`
--

DROP TABLE IF EXISTS `document`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `document` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `dtype` varchar(5) DEFAULT NULL,
  `state` int(11) NOT NULL,
  `createdata` datetime NOT NULL,
  `updatedata` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `document`
--

LOCK TABLES `document` WRITE;
/*!40000 ALTER TABLE `document` DISABLE KEYS */;
/*!40000 ALTER TABLE `document` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `tmp`
--

DROP TABLE IF EXISTS `tmp`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tmp` (
  `id` int(11) NOT NULL DEFAULT '0',
  `name` varchar(20) NOT NULL,
  `father_id` int(11) NOT NULL,
  `createdata` datetime NOT NULL,
  `updatedata` datetime NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tmp`
--

LOCK TABLES `tmp` WRITE;
/*!40000 ALTER TABLE `tmp` DISABLE KEYS */;
INSERT INTO `tmp` VALUES (2,'test',0,'2016-03-28 23:07:51','2016-03-28 23:07:51'),(3,'???',1,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(4,'play',52,'2016-03-28 23:18:02','2016-03-28 23:18:02'),(5,'mysql',35,'2016-03-28 23:19:13','2016-03-28 23:19:13'),(6,'backup & recovery',5,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(7,'backup',6,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(8,'mysqldump',7,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(9,'git & github',0,'2016-03-28 23:36:38','2016-03-31 00:00:00'),(68,'perl6',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(11,'测试中文',2,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(12,'linux',69,'2016-03-29 00:46:38','2016-03-29 00:46:38'),(13,'command',12,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(14,'file',13,'2016-03-28 00:00:00','2016-03-28 00:00:00'),(16,'command',5,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(17,'install',4,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(18,'create app',17,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(19,'conecpts',4,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(20,'Action',19,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(21,'sample',20,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(22,'results',20,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(23,'routing',19,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(24,'ntpdate',13,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(25,'yum',13,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(26,'公共仓库',25,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(27,'nslookup',13,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(28,'lsof',13,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(29,'nginx',39,'2016-03-30 14:43:06','2016-03-30 14:43:06'),(30,'install',29,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(31,'language',0,'2016-03-30 15:31:39','2016-03-30 15:31:39'),(32,'php',31,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(33,'scala',31,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(34,'java',31,'2016-03-30 00:00:00','2016-03-30 00:00:00'),(35,'database',0,'2016-03-30 15:32:35','2016-03-30 15:32:35'),(38,'hive',60,'2016-03-31 09:38:43','2016-03-31 09:38:43'),(40,'函数',38,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(42,'hql',38,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(43,'install',38,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(44,'python',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(46,'php',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(47,'build tool',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(48,'maven',47,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(49,'sbt',47,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(50,'gradle',47,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(51,'public repo',47,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(39,'webServer',0,'2016-03-31 11:29:55','2016-03-31 11:29:55'),(53,'apache',39,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(69,'OS',0,'2016-03-31 13:19:57','2016-03-31 13:19:57'),(55,'character',5,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(41,'ide',0,'2016-03-31 12:31:53','2016-03-31 12:31:53'),(56,'intellij',41,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(57,'快捷键',56,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(58,'win',57,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(59,'mac',57,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(45,'serviceDiscovery',0,'2016-03-31 12:58:46','2016-03-31 12:58:46'),(61,'consul',45,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(62,'consul-template',61,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(52,'frame',0,'2016-03-31 13:03:13','2016-03-31 13:03:13'),(63,'orm',52,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(64,'slick',63,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(65,'error',64,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(66,'akka',52,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(60,'bigData',0,'2016-03-31 13:16:18','2016-03-31 13:16:18'),(67,'kafka',60,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(70,'command',9,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(71,'zeppelin',60,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(72,'redis',35,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(73,'jvm',31,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(74,'parameter',73,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(75,'bin',73,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(76,' jstat',75,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(77,'jhat',75,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(78,'protocol',0,'2016-03-31 13:49:20','2016-03-31 13:49:20'),(79,'http',78,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(80,'Content-Type',79,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(81,'状态码',79,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(82,'results',19,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(83,'session & Flash',19,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(84,'函数式',33,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(85,'构造action',20,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(86,'dmesg',13,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(87,'concepts',33,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(88,'type system',87,'2016-03-31 00:00:00','2016-03-31 00:00:00'),(89,'ssh',13,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(90,'apex',52,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(91,'install',90,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(93,'url',90,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(94,'h2',35,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(95,'database',4,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(96,'h2',95,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(111,'scp',13,'2016-04-01 00:00:00','2016-04-01 00:00:00'),(113,'短发短发',11,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(114,'typscript',31,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(115,'javascript',31,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(116,'book',0,'2016-03-26 23:22:18','2016-03-26 23:22:18'),(117,'Javascript权威指南',116,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(118,'第2章',117,'2016-04-04 00:00:00','2016-04-04 00:00:00'),(1819,'schema object',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1820,'schema object',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1821,'structure storage',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1823,'structure storage',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(2126,'tuning | sql',36,'2014-03-30 00:00:00','2014-03-30 00:00:00'),(2127,'tuning | sql',36,'2014-03-30 00:00:00','2014-03-30 00:00:00'),(2128,'tuning | sql',36,'2014-03-30 00:00:00','2014-03-30 00:00:00'),(2129,'tuning | sql',36,'2014-03-30 00:00:00','2014-03-30 00:00:00'),(1928,'error',36,'2014-03-06 00:00:00','2014-03-06 00:00:00'),(1929,'recovery',36,'2014-03-06 00:00:00','2014-03-06 00:00:00'),(1834,'tuning | event',36,'2014-02-02 00:00:00','2014-02-02 00:00:00'),(1831,'tuning | session',36,'2014-02-02 00:00:00','2014-02-02 00:00:00'),(1832,'tuning | event',36,'2014-02-02 00:00:00','2014-02-02 00:00:00'),(1868,'schema object',36,'2014-02-08 00:00:00','2014-02-08 00:00:00'),(1787,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1789,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1886,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1891,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1893,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1895,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1898,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1901,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1902,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1903,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1905,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1906,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1910,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1912,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1914,'tuning | io',36,'2014-02-18 00:00:00','2014-02-18 00:00:00'),(1788,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1790,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1881,'net',36,'2014-02-09 00:00:00','2014-02-09 00:00:00'),(1882,'net',36,'2014-02-09 00:00:00','2014-02-09 00:00:00'),(1996,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(2000,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(2001,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(2002,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(2003,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(2004,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(2005,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(1932,'recovery',36,'2014-03-16 00:00:00','2014-03-16 00:00:00'),(1933,'recovery',36,'2014-03-16 00:00:00','2014-03-16 00:00:00'),(1940,'recovery',36,'2014-03-18 00:00:00','2014-03-18 00:00:00'),(1946,'recovery',36,'2014-03-18 00:00:00','2014-03-18 00:00:00'),(1947,'recovery',36,'2014-03-19 00:00:00','2014-03-19 00:00:00'),(2133,'tuning | sql',36,'2014-03-31 00:00:00','2014-03-31 00:00:00'),(2136,'database',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1950,'error',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1953,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1954,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1955,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1956,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1957,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1958,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1960,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1961,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1962,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1963,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1964,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1966,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1967,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1968,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1969,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1970,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1971,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1973,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(2139,'database',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1975,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1978,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1980,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1983,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1986,'recovery',36,'2014-03-22 00:00:00','2014-03-22 00:00:00'),(2140,'tuning | tool',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2023,'database',36,'2014-03-26 00:00:00','2014-03-26 00:00:00'),(2142,'database',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2143,'database',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2145,'tuning | memory',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2147,'tuning | memory',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2033,'tuning | memory',36,'2014-03-26 00:00:00','2014-03-26 00:00:00'),(2051,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2052,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2053,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2055,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2058,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2152,'structure storage',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1934,'recovery',36,'2014-03-16 00:00:00','2014-03-16 00:00:00'),(1935,'recovery',36,'2014-03-16 00:00:00','2014-03-16 00:00:00'),(1936,'recovery',36,'2014-03-16 00:00:00','2014-03-16 00:00:00'),(1937,'recovery',36,'2014-03-16 00:00:00','2014-03-16 00:00:00'),(1938,'recovery',36,'2014-03-16 00:00:00','2014-03-16 00:00:00'),(1939,'structure storage',36,'2014-03-17 00:00:00','2014-03-17 00:00:00'),(1941,'recovery',36,'2014-03-18 00:00:00','2014-03-18 00:00:00'),(2156,'tuning | session',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2157,'tuning | memory',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2158,'tuning | session',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2159,'tuning | session',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1951,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1959,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1965,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1972,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1976,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1977,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1979,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1982,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(2008,'recovery',36,'2014-03-25 00:00:00','2014-03-25 00:00:00'),(2012,'recovery',36,'2014-03-25 00:00:00','2014-03-25 00:00:00'),(2062,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2063,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2007,'structure storage',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(2011,'recovery',36,'2014-03-25 00:00:00','2014-03-25 00:00:00'),(2039,'tuning | sql',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2040,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2047,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2056,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2060,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2067,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(1981,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(1984,'recovery',36,'2014-03-20 00:00:00','2014-03-20 00:00:00'),(2009,'recovery',36,'2014-03-25 00:00:00','2014-03-25 00:00:00'),(2160,'tuning | session',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2161,'tuning | sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2162,'tuning | sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2165,'tuning | session',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2036,'parameter',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2034,'tuning | memory',36,'2014-03-26 00:00:00','2014-03-26 00:00:00'),(2035,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2037,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2041,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2042,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2043,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2044,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2045,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2046,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2048,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2049,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2050,'tuning | memory',36,'2014-03-27 00:00:00','2014-03-27 00:00:00'),(2010,'recovery',36,'2014-03-25 00:00:00','2014-03-25 00:00:00'),(2168,'tuning | sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1985,'recovery',36,'2014-03-21 00:00:00','2014-03-21 00:00:00'),(2170,'tuning | sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1993,'user/privilege',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(1994,'user/privilege',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(1995,'user/privilege',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(1997,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(1998,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(1999,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(2006,'recovery',36,'2014-03-24 00:00:00','2014-03-24 00:00:00'),(1540,'instance',36,'2013-09-18 00:00:00','2013-09-18 00:00:00'),(1542,'instance',36,'2013-09-18 00:00:00','2013-09-18 00:00:00'),(1552,'tuning | sql',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1556,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1557,'tuning | instance',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1562,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1564,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1567,'plsql',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1570,'schema object',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1571,'tuning | sql',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1573,'tuning | instance',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1574,'concurrency',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1577,'ha | data guard',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1579,'lock/latch',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1581,'structure storage',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1583,'instance',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1585,'structure storage',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1586,'recovery',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1587,'structure storage',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1595,'secure',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1632,'schema object',36,'2013-09-27 00:00:00','2013-09-27 00:00:00'),(1633,'schema object',36,'2013-09-27 00:00:00','2013-09-27 00:00:00'),(1634,'schema object',36,'2013-09-27 00:00:00','2013-09-27 00:00:00'),(1635,'schema object',36,'2013-09-27 00:00:00','2013-09-27 00:00:00'),(1636,'schema object',36,'2013-09-27 00:00:00','2013-09-27 00:00:00'),(1640,'error',36,'2013-09-27 00:00:00','2013-09-27 00:00:00'),(1638,'schema object',36,'2013-09-27 00:00:00','2013-09-27 00:00:00'),(1639,'schema object',36,'2013-09-27 00:00:00','2013-09-27 00:00:00'),(1641,'schema object',36,'2013-09-28 00:00:00','2013-09-28 00:00:00'),(1643,'schema object',36,'2013-09-28 00:00:00','2013-09-28 00:00:00'),(1647,'schema object',36,'2013-09-29 00:00:00','2013-09-29 00:00:00'),(1649,'schema object',36,'2013-09-29 00:00:00','2013-09-29 00:00:00'),(1650,'schema object',36,'2013-09-29 00:00:00','2013-09-29 00:00:00'),(1651,'schema object',36,'2013-09-30 00:00:00','2013-09-30 00:00:00'),(1652,'schema object',36,'2013-09-30 00:00:00','2013-09-30 00:00:00'),(1522,'instance',36,'2013-09-15 00:00:00','2013-09-15 00:00:00'),(1653,'schema object',36,'2013-09-30 00:00:00','2013-09-30 00:00:00'),(1520,'instance',36,'2013-09-15 00:00:00','2013-09-15 00:00:00'),(1521,'instance',36,'2013-09-15 00:00:00','2013-09-15 00:00:00'),(1523,'instance',36,'2013-09-15 00:00:00','2013-09-15 00:00:00'),(1524,'instance',36,'2013-09-15 00:00:00','2013-09-15 00:00:00'),(1526,'instance',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1527,'instance',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1529,'tuning | sql',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1533,'instance',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1535,'tuning | sql',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1555,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1558,'tuning | instance',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1559,'tuning | instance',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1563,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1565,'tuning | instance',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1566,'tuning | instance',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1568,'plsql',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1569,'plsql',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1572,'concurrency',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1604,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1605,'net',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1606,'structure storage',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1607,'structure storage',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1621,'schema object',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1618,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1623,'schema object',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1624,'schema object',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1628,'schema object',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1629,'other',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1655,'schema object',36,'2013-09-30 00:00:00','2013-09-30 00:00:00'),(1672,'tuning | sql',36,'2013-10-23 00:00:00','2013-10-23 00:00:00'),(1676,'tuning | sql',36,'2013-10-23 00:00:00','2013-10-23 00:00:00'),(1677,'tuning | sql',36,'2013-10-23 00:00:00','2013-10-23 00:00:00'),(1678,'tuning | sql',36,'2013-10-23 00:00:00','2013-10-23 00:00:00'),(1682,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1683,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1684,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1685,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1686,'schema object',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1687,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1688,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1599,'recovery',36,'2013-09-21 00:00:00','2013-09-21 00:00:00'),(1598,'recovery',36,'2013-09-21 00:00:00','2013-09-21 00:00:00'),(1658,'schema object',36,'2013-10-01 00:00:00','2013-10-01 00:00:00'),(1660,'schema object',36,'2013-10-01 00:00:00','2013-10-01 00:00:00'),(1662,'error',36,'2013-10-01 00:00:00','2013-10-01 00:00:00'),(1664,'schema object',36,'2013-10-01 00:00:00','2013-10-01 00:00:00'),(1689,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1690,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1691,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1692,'tuning | sql',36,'2013-11-04 00:00:00','2013-11-04 00:00:00'),(1488,'schema object',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1492,'schema object',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1500,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1497,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1498,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1501,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1504,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1507,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1509,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1511,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1513,'schema object',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1514,'schema object',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1531,'tuning | sql',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1532,'recovery',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1631,'sql',36,'2013-09-26 00:00:00','2013-09-26 00:00:00'),(1642,'schema object',36,'2013-09-28 00:00:00','2013-09-28 00:00:00'),(1645,'schema object',36,'2013-09-29 00:00:00','2013-09-29 00:00:00'),(1656,'schema object',36,'2013-09-30 00:00:00','2013-09-30 00:00:00'),(1536,'instance',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1666,'schema object',36,'2013-10-03 00:00:00','2013-10-03 00:00:00'),(1667,'schema object',36,'2013-10-03 00:00:00','2013-10-03 00:00:00'),(1668,'schema object',36,'2013-10-03 00:00:00','2013-10-03 00:00:00'),(1679,'tuning | instance',36,'2013-10-29 00:00:00','2013-10-29 00:00:00'),(1680,'tuning | instance',36,'2013-10-29 00:00:00','2013-10-29 00:00:00'),(1681,'tuning | sql',36,'2013-10-31 00:00:00','2013-10-31 00:00:00'),(1486,'tuning | instance',36,'2013-09-12 00:00:00','2013-09-12 00:00:00'),(1487,'schema object',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1489,'other',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1490,'other',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1491,'other',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1493,'schema object',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1494,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1495,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1496,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1499,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1502,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1503,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1505,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1506,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1508,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1515,'schema object',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1510,'structure storage',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1512,'schema object',36,'2013-09-13 00:00:00','2013-09-13 00:00:00'),(1602,'error',36,'2013-09-21 00:00:00','2013-09-21 00:00:00'),(1601,'recovery',36,'2013-09-21 00:00:00','2013-09-21 00:00:00'),(1644,'schema object',36,'2013-09-29 00:00:00','2013-09-29 00:00:00'),(1646,'schema object',36,'2013-09-29 00:00:00','2013-09-29 00:00:00'),(1654,'schema object',36,'2013-09-30 00:00:00','2013-09-30 00:00:00'),(1657,'schema object',36,'2013-10-01 00:00:00','2013-10-01 00:00:00'),(1659,'schema object',36,'2013-10-01 00:00:00','2013-10-01 00:00:00'),(1661,'error',36,'2013-10-01 00:00:00','2013-10-01 00:00:00'),(1663,'schema object',36,'2013-10-01 00:00:00','2013-10-01 00:00:00'),(1665,'schema object',36,'2013-10-03 00:00:00','2013-10-03 00:00:00'),(1670,'tuning | sql',36,'2013-10-23 00:00:00','2013-10-23 00:00:00'),(1671,'tuning | sql',36,'2013-10-23 00:00:00','2013-10-23 00:00:00'),(1673,'tuning | sql',36,'2013-10-23 00:00:00','2013-10-23 00:00:00'),(1674,'tuning | sql',36,'2013-10-23 00:00:00','2013-10-23 00:00:00'),(1675,'tuning | sql',36,'2013-10-23 00:00:00','2013-10-23 00:00:00'),(1528,'tuning | sql',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1516,'user/privilege',36,'2013-09-14 00:00:00','2013-09-14 00:00:00'),(1517,'ha | stream',36,'2013-09-14 00:00:00','2013-09-14 00:00:00'),(1530,'tuning | sql',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1534,'instance',36,'2013-09-17 00:00:00','2013-09-17 00:00:00'),(1541,'instance',36,'2013-09-18 00:00:00','2013-09-18 00:00:00'),(1543,'instance',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1544,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1548,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1549,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1550,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1551,'tuning | memory',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1560,'tuning | instance',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1561,'tuning | instance',36,'2013-09-19 00:00:00','2013-09-19 00:00:00'),(1576,'ha | rac',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1578,'ha | stream',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1580,'tuning | memory',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1582,'structure storage',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1584,'instance',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1588,'structure storage',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1589,'structure storage',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1539,'schema object',36,'2013-09-18 00:00:00','2013-09-18 00:00:00'),(1590,'structure storage',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1591,'recovery',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1593,'instance',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1594,'instance',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1596,'secure',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1597,'instance',36,'2013-09-20 00:00:00','2013-09-20 00:00:00'),(1603,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1608,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1609,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1610,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1611,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1612,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1613,'view',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1614,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1615,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1617,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1620,'instance',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1626,'schema object',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1622,'schema object',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1625,'schema object',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1627,'schema object',36,'2013-09-23 00:00:00','2013-09-23 00:00:00'),(1694,'instance',36,'2013-11-12 00:00:00','2013-11-12 00:00:00'),(1696,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1699,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1700,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1701,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1702,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1703,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1704,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1705,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1706,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1708,'tuning | sql',36,'2013-11-18 00:00:00','2013-11-18 00:00:00'),(1709,'tuning | sql',36,'2013-11-18 00:00:00','2013-11-18 00:00:00'),(1630,'schema object',36,'2013-09-25 00:00:00','2013-09-25 00:00:00'),(1712,'tuning | sql',36,'2013-11-20 00:00:00','2013-11-20 00:00:00'),(1714,'tuning | sql',36,'2013-11-20 00:00:00','2013-11-20 00:00:00'),(1716,'tuning | sql',36,'2013-12-04 00:00:00','2013-12-04 00:00:00'),(1718,'tuning | sql',36,'2013-12-04 00:00:00','2013-12-04 00:00:00'),(1719,'tuning | sql',36,'2013-12-04 00:00:00','2013-12-04 00:00:00'),(1721,'tuning | sql',36,'2013-12-04 00:00:00','2013-12-04 00:00:00'),(1722,'tuning | sql',36,'2013-12-04 00:00:00','2013-12-04 00:00:00'),(1726,'tuning | sql',36,'2013-12-06 00:00:00','2013-12-06 00:00:00'),(1728,'tuning | sql',36,'2013-12-06 00:00:00','2013-12-06 00:00:00'),(1730,'tuning | sql',36,'2013-12-06 00:00:00','2013-12-06 00:00:00'),(1731,'tuning | sql',36,'2013-12-06 00:00:00','2013-12-06 00:00:00'),(1732,'tuning | sql',36,'2013-12-08 00:00:00','2013-12-08 00:00:00'),(1733,'tuning | sql',36,'2013-12-08 00:00:00','2013-12-08 00:00:00'),(1734,'tuning | sql',36,'2013-12-08 00:00:00','2013-12-08 00:00:00'),(1735,'tuning | sql',36,'2013-12-08 00:00:00','2013-12-08 00:00:00'),(1736,'tuning | sql',36,'2013-12-08 00:00:00','2013-12-08 00:00:00'),(1737,'tuning | sql',36,'2013-12-08 00:00:00','2013-12-08 00:00:00'),(1742,'tuning | sql',36,'2013-12-10 00:00:00','2013-12-10 00:00:00'),(1746,'tuning | sql',36,'2013-12-16 00:00:00','2013-12-16 00:00:00'),(1749,'tuning | sql',36,'2013-12-16 00:00:00','2013-12-16 00:00:00'),(1753,'tuning | sql',36,'2013-12-20 00:00:00','2013-12-20 00:00:00'),(1754,'tuning | sql',36,'2013-12-20 00:00:00','2013-12-20 00:00:00'),(1757,'tuning | sql',36,'2013-12-20 00:00:00','2013-12-20 00:00:00'),(1759,'tuning | sql',36,'2013-12-20 00:00:00','2013-12-20 00:00:00'),(1760,'tuning | sql',36,'2013-12-20 00:00:00','2013-12-20 00:00:00'),(1761,'tuning | memory',36,'2013-12-22 00:00:00','2013-12-22 00:00:00'),(1770,'database',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1772,'tuning | memory',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1695,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1697,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1698,'tuning | sql',36,'2013-11-14 00:00:00','2013-11-14 00:00:00'),(1707,'tuning | sql',36,'2013-11-18 00:00:00','2013-11-18 00:00:00'),(1710,'tuning | sql',36,'2013-11-18 00:00:00','2013-11-18 00:00:00'),(1711,'tuning | sql',36,'2013-11-18 00:00:00','2013-11-18 00:00:00'),(1717,'tuning | sql',36,'2013-12-04 00:00:00','2013-12-04 00:00:00'),(1720,'tuning | sql',36,'2013-12-04 00:00:00','2013-12-04 00:00:00'),(1723,'tuning | sql',36,'2013-12-04 00:00:00','2013-12-04 00:00:00'),(1724,'tuning | sql',36,'2013-12-06 00:00:00','2013-12-06 00:00:00'),(1725,'tuning | sql',36,'2013-12-06 00:00:00','2013-12-06 00:00:00'),(1727,'tuning | sql',36,'2013-12-06 00:00:00','2013-12-06 00:00:00'),(1729,'tuning | sql',36,'2013-12-06 00:00:00','2013-12-06 00:00:00'),(1739,'tuning | sql',36,'2013-12-10 00:00:00','2013-12-10 00:00:00'),(1773,'tuning | memory',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1775,'tuning | tool',36,'2014-01-03 00:00:00','2014-01-03 00:00:00'),(1779,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1783,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1785,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1741,'tuning | sql',36,'2013-12-10 00:00:00','2013-12-10 00:00:00'),(1743,'schema object',36,'2013-12-14 00:00:00','2013-12-14 00:00:00'),(1744,'tuning | sql',36,'2013-12-16 00:00:00','2013-12-16 00:00:00'),(1745,'tuning | sql',36,'2013-12-16 00:00:00','2013-12-16 00:00:00'),(1747,'tuning | sql',36,'2013-12-16 00:00:00','2013-12-16 00:00:00'),(1748,'tuning | sql',36,'2013-12-16 00:00:00','2013-12-16 00:00:00'),(1750,'sql',36,'2013-12-16 00:00:00','2013-12-16 00:00:00'),(1755,'tuning | sql',36,'2013-12-20 00:00:00','2013-12-20 00:00:00'),(1756,'tuning | sql',36,'2013-12-20 00:00:00','2013-12-20 00:00:00'),(1758,'tuning | sql',36,'2013-12-20 00:00:00','2013-12-20 00:00:00'),(1763,'error',36,'2013-12-22 00:00:00','2013-12-22 00:00:00'),(1764,'install/upgrade',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1765,'instance',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1766,'instance',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1767,'structure storage',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1768,'tuning | memory',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1769,'tuning | memory',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1771,'tuning | memory',36,'2013-12-24 00:00:00','2013-12-24 00:00:00'),(1774,'tuning | sql',36,'2014-01-03 00:00:00','2014-01-03 00:00:00'),(1776,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1780,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1781,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1782,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1784,'tuning | tool',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1786,'error',36,'2014-01-07 00:00:00','2014-01-07 00:00:00'),(1797,'tuning | memory',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1798,'advisor',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1803,'scheduler',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1804,'scheduler',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1806,'consumer',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1808,'recovery',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1810,'recovery',36,'2014-01-10 00:00:00','2014-01-10 00:00:00'),(1812,'recovery',36,'2014-01-10 00:00:00','2014-01-10 00:00:00'),(1814,'error',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1815,'schema object',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1816,'lock/latch',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1817,'lock/latch',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1822,'structure storage',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1824,'structure storage',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1825,'schema object',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1826,'recovery',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1880,'net',36,'2014-02-09 00:00:00','2014-02-09 00:00:00'),(1887,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1888,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1889,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1890,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1892,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1894,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1896,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1897,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1899,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1900,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1904,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1907,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1908,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1909,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(1911,'sql',36,'2014-02-16 00:00:00','2014-02-16 00:00:00'),(2115,'tuning | memory',36,'2014-03-29 00:00:00','2014-03-29 00:00:00'),(2116,'tuning | memory',36,'2014-03-29 00:00:00','2014-03-29 00:00:00'),(2118,'tuning | memory',36,'2014-03-29 00:00:00','2014-03-29 00:00:00'),(2119,'tuning | memory',36,'2014-03-29 00:00:00','2014-03-29 00:00:00'),(2120,'tuning | memory',36,'2014-03-29 00:00:00','2014-03-29 00:00:00'),(2123,'tuning | memory',36,'2014-03-29 00:00:00','2014-03-29 00:00:00'),(2124,'tuning | sql',36,'2014-03-29 00:00:00','2014-03-29 00:00:00'),(2125,'tuning | sql',36,'2014-03-29 00:00:00','2014-03-29 00:00:00'),(1791,'tuning | memory',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1792,'tuning | memory',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1794,'tuning | memory',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1793,'tuning | memory',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1795,'tuning | memory',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1796,'tuning | memory',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1799,'advisor',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1800,'advisor',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1801,'advisor',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1805,'scheduler',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1807,'user/privilege',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1809,'recovery',36,'2014-01-09 00:00:00','2014-01-09 00:00:00'),(1811,'recovery',36,'2014-01-10 00:00:00','2014-01-10 00:00:00'),(1828,'search',36,'2014-01-25 00:00:00','2014-01-25 00:00:00'),(1833,'tuning | event',36,'2014-02-02 00:00:00','2014-02-02 00:00:00'),(1818,'schema object',36,'2014-01-17 00:00:00','2014-01-17 00:00:00'),(1295,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1296,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1298,'structure storage',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1299,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1302,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1303,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1519,'instance',36,'2013-09-15 00:00:00','2013-09-15 00:00:00'),(1538,'schema object',36,'2013-09-18 00:00:00','2013-09-18 00:00:00'),(2134,'database',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2135,'database',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2137,'database',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2138,'tuning | tool',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2141,'database',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2144,'database',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2146,'tuning | memory',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2148,'tuning | sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1104,'advisor',36,'0013-07-12 00:00:00','0013-07-12 00:00:00'),(1121,'audit',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1090,'concurrency',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1091,'concurrency',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1093,'concurrency',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1094,'concurrency',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1100,'concurrency',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1071,'load/unload',36,'0013-07-01 00:00:00','0013-07-01 00:00:00'),(1165,'schema object',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1044,'encryption',36,'0013-06-21 00:00:00','0013-06-21 00:00:00'),(1045,'encryption',36,'0013-06-21 00:00:00','0013-06-21 00:00:00'),(1046,'encryption',36,'0013-06-21 00:00:00','0013-06-21 00:00:00'),(1047,'encryption',36,'0013-06-21 00:00:00','0013-06-21 00:00:00'),(1048,'encryption',36,'0013-06-21 00:00:00','0013-06-21 00:00:00'),(1054,'encryption',36,'0013-06-23 00:00:00','0013-06-23 00:00:00'),(1055,'encryption',36,'0013-06-25 00:00:00','0013-06-25 00:00:00'),(1056,'encryption',36,'0013-06-25 00:00:00','0013-06-25 00:00:00'),(1058,'encryption',36,'0013-06-25 00:00:00','0013-06-25 00:00:00'),(1011,'error',36,'0013-06-03 00:00:00','0013-06-03 00:00:00'),(1013,'error',36,'0013-06-06 00:00:00','0013-06-06 00:00:00'),(1032,'error',36,'0013-06-15 00:00:00','0013-06-15 00:00:00'),(1041,'error',36,'0013-06-19 00:00:00','0013-06-19 00:00:00'),(1057,'error',36,'0013-06-25 00:00:00','0013-06-25 00:00:00'),(1085,'error',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1134,'error',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1135,'error',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1136,'error',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1137,'error',36,'0013-07-14 00:00:00','0013-07-14 00:00:00'),(1138,'error',36,'0013-07-14 00:00:00','0013-07-14 00:00:00'),(1139,'error',36,'0013-07-14 00:00:00','0013-07-14 00:00:00'),(1140,'error',36,'0013-07-14 00:00:00','0013-07-14 00:00:00'),(1154,'error',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1158,'error',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1179,'error',36,'0013-07-16 00:00:00','0013-07-16 00:00:00'),(1182,'error',36,'0013-07-16 00:00:00','0013-07-16 00:00:00'),(1099,'instance',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1000,'ha | data guard',36,'0013-05-20 00:00:00','0013-05-20 00:00:00'),(1157,'ha | rac',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1167,'ha | asm',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1168,'ha | asm',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1169,'ha | asm',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1170,'ha | asm',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1171,'ha | asm',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1106,'schema object',36,'0013-07-12 00:00:00','0013-07-12 00:00:00'),(1022,'install/upgrade',36,'0013-06-12 00:00:00','0013-06-12 00:00:00'),(1023,'install/upgrade',36,'0013-06-12 00:00:00','0013-06-12 00:00:00'),(1059,'load/unload',36,'0013-06-26 00:00:00','0013-06-26 00:00:00'),(1061,'load/unload',36,'0013-06-27 00:00:00','0013-06-27 00:00:00'),(1062,'load/unload',36,'0013-06-27 00:00:00','0013-06-27 00:00:00'),(1063,'load/unload',36,'0013-06-27 00:00:00','0013-06-27 00:00:00'),(1064,'load/unload',36,'0013-06-27 00:00:00','0013-06-27 00:00:00'),(1065,'load/unload',36,'0013-06-27 00:00:00','0013-06-27 00:00:00'),(1066,'load/unload',36,'0013-06-30 00:00:00','0013-06-30 00:00:00'),(1067,'load/unload',36,'0013-06-30 00:00:00','0013-06-30 00:00:00'),(1068,'load/unload',36,'0013-06-30 00:00:00','0013-06-30 00:00:00'),(1069,'load/unload',36,'0013-06-30 00:00:00','0013-06-30 00:00:00'),(1072,'load/unload',36,'0013-07-02 00:00:00','0013-07-02 00:00:00'),(1075,'load/unload',36,'0013-07-02 00:00:00','0013-07-02 00:00:00'),(1076,'load/unload',36,'0013-07-03 00:00:00','0013-07-03 00:00:00'),(1077,'load/unload',36,'0013-07-03 00:00:00','0013-07-03 00:00:00'),(1078,'load/unload',36,'0013-07-03 00:00:00','0013-07-03 00:00:00'),(1079,'load/unload',36,'0013-07-03 00:00:00','0013-07-03 00:00:00'),(1080,'load/unload',36,'0013-07-03 00:00:00','0013-07-03 00:00:00'),(1082,'lock/latch',36,'0013-07-03 00:00:00','0013-07-03 00:00:00'),(1087,'lock/latch',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1089,'lock/latch',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1095,'lock/latch',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1096,'lock/latch',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1012,'schema object',36,'0013-06-05 00:00:00','0013-06-05 00:00:00'),(1017,'schema object',36,'0013-06-07 00:00:00','0013-06-07 00:00:00'),(1020,'schema object',36,'0013-06-07 00:00:00','0013-06-07 00:00:00'),(1026,'parallel execution',36,'0013-06-13 00:00:00','0013-06-13 00:00:00'),(1033,'parallel execution',36,'0013-06-17 00:00:00','0013-06-17 00:00:00'),(1036,'parallel execution',36,'0013-06-17 00:00:00','0013-06-17 00:00:00'),(1116,'instance',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1153,'tuning | instance',36,'0013-07-15 00:00:00','0013-07-15 00:00:00'),(1029,'tuning | sql',36,'0013-06-14 00:00:00','0013-06-14 00:00:00'),(1113,'tuning | tool',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1122,'tuning | sql',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1131,'tuning | tool',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1132,'tuning | tool',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1042,'plsql',36,'0013-06-19 00:00:00','0013-06-19 00:00:00'),(1002,'user/privilege',36,'0013-05-22 00:00:00','0013-05-22 00:00:00'),(1107,'recovery',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1108,'recovery',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1110,'recovery',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1111,'recovery',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1037,'structure storage',36,'0013-06-19 00:00:00','0013-06-19 00:00:00'),(1081,'structure storage',36,'0013-07-03 00:00:00','0013-07-03 00:00:00'),(1086,'structure storage',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1097,'structure storage',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1025,'script',36,'0013-06-13 00:00:00','0013-06-13 00:00:00'),(1034,'script',36,'0013-06-17 00:00:00','0013-06-17 00:00:00'),(1130,'script',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1181,'script',36,'0013-07-16 00:00:00','0013-07-16 00:00:00'),(1005,'sql',36,'0013-05-25 00:00:00','0013-05-25 00:00:00'),(1006,'sql',36,'0013-05-26 00:00:00','0013-05-26 00:00:00'),(1007,'sql',36,'0013-05-27 00:00:00','0013-05-27 00:00:00'),(1008,'sql',36,'0013-05-28 00:00:00','0013-05-28 00:00:00'),(1009,'sql',36,'0013-05-29 00:00:00','0013-05-29 00:00:00'),(1010,'sql',36,'0013-05-30 00:00:00','0013-05-30 00:00:00'),(1014,'sql',36,'0013-06-07 00:00:00','0013-06-07 00:00:00'),(1015,'sql',36,'0013-06-07 00:00:00','0013-06-07 00:00:00'),(1018,'sql',36,'0013-06-07 00:00:00','0013-06-07 00:00:00'),(1019,'sql',36,'0013-06-07 00:00:00','0013-06-07 00:00:00'),(1083,'sql',36,'0013-07-07 00:00:00','0013-07-07 00:00:00'),(1101,'sql',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1102,'sql',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1004,'sqlplus',36,'0013-05-25 00:00:00','0013-05-25 00:00:00'),(1053,'sqlplus',36,'0013-06-22 00:00:00','0013-06-22 00:00:00'),(1103,'sqlplus',36,'0013-07-12 00:00:00','0013-07-12 00:00:00'),(1001,'schema object',36,'0013-05-20 00:00:00','0013-05-20 00:00:00'),(1098,'schema object',36,'0013-07-11 00:00:00','0013-07-11 00:00:00'),(1129,'schema object',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1073,'structure storage',36,'0013-07-02 00:00:00','0013-07-02 00:00:00'),(1074,'structure storage',36,'0013-07-02 00:00:00','0013-07-02 00:00:00'),(1043,'tuning | event',36,'0013-06-21 00:00:00','0013-06-21 00:00:00'),(1038,'user/privilege',36,'0013-06-19 00:00:00','0013-06-19 00:00:00'),(1039,'user/privilege',36,'0013-06-19 00:00:00','0013-06-19 00:00:00'),(1040,'user/privilege',36,'0013-06-19 00:00:00','0013-06-19 00:00:00'),(1114,'transaction',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1117,'lock/latch',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1127,'lock/latch',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1128,'integrity',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(2150,'tuning | memory',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2149,'tuning | sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1186,'tuning | event',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1187,'tuning | event',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1188,'tuning | event',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1189,'tuning | event',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1190,'tuning | event',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1191,'tuning | event',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1092,'schema object',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1192,'tuning | memory',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1194,'parameter',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1195,'parameter',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1196,'structure storage',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(2151,'schema object',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2153,'structure storage',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2154,'structure storage',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2155,'user/privilege',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1222,'view',36,'0013-07-14 00:00:00','0013-07-14 00:00:00'),(2163,'sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1119,'connect',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1115,'connect',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(1120,'connect',36,'0013-07-13 00:00:00','0013-07-13 00:00:00'),(2164,'sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1197,'parameter',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1199,'view',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1200,'view',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1201,'view',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1202,'view',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1203,'ha | data guard',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1204,'ha | data guard',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(2166,'tuning | session',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(1209,'structure storage',36,'2013-07-31 00:00:00','2013-07-31 00:00:00'),(2169,'tuning | sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2171,'tuning | sql',36,'2014-04-01 00:00:00','2014-04-01 00:00:00'),(2172,'structure storage',36,'2014-04-06 00:00:00','2014-04-06 00:00:00'),(1218,'structure storage',36,'2013-08-05 00:00:00','2013-08-05 00:00:00'),(1228,'tuning | instance',36,'2013-08-06 00:00:00','2013-08-06 00:00:00'),(1233,'tuning | sql',36,'2013-08-08 00:00:00','2013-08-08 00:00:00'),(1198,'ha | data guard',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1207,'schema object',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1208,'schema object',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1214,'sql',36,'2013-08-04 00:00:00','2013-08-04 00:00:00'),(1241,'view',36,'2013-08-10 00:00:00','2013-08-10 00:00:00'),(1242,'error',36,'2013-08-10 00:00:00','2013-08-10 00:00:00'),(1193,'parameter',36,'2013-07-29 00:00:00','2013-07-29 00:00:00'),(1254,'parameter',36,'2013-08-12 00:00:00','2013-08-12 00:00:00'),(1253,'parameter',36,'2013-08-12 00:00:00','2013-08-12 00:00:00'),(1255,'recovery',36,'2013-08-12 00:00:00','2013-08-12 00:00:00'),(1257,'recovery',36,'2013-08-12 00:00:00','2013-08-12 00:00:00'),(1259,'recovery',36,'2013-08-12 00:00:00','2013-08-12 00:00:00'),(1261,'recovery',36,'2013-08-12 00:00:00','2013-08-12 00:00:00'),(1262,'user/privilege',36,'2013-08-12 00:00:00','2013-08-12 00:00:00'),(1263,'recovery',36,'2013-08-12 00:00:00','2013-08-12 00:00:00'),(1265,'install/upgrade',36,'2013-08-13 00:00:00','2013-08-13 00:00:00'),(1266,'error',36,'2013-08-13 00:00:00','2013-08-13 00:00:00'),(1267,'ha | asm',36,'2013-08-13 00:00:00','2013-08-13 00:00:00'),(1271,'parameter',36,'2013-08-14 00:00:00','2013-08-14 00:00:00'),(1272,'select',36,'2013-08-14 00:00:00','2013-08-14 00:00:00'),(1273,'parameter',36,'2013-08-14 00:00:00','2013-08-14 00:00:00'),(1304,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1305,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1311,'view',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1312,'view',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1313,'select',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1365,'structure storage',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1366,'view',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1367,'ha | rac',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(138,'tuning | memory',36,'2013-08-25 00:00:00','2013-08-25 00:00:00'),(1368,'error',36,'2013-08-26 00:00:00','2013-08-26 00:00:00'),(1369,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1370,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1371,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1372,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1373,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1374,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1375,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1376,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1377,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1378,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1379,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1380,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1381,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1382,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1383,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1384,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1385,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1386,'sqlplus',36,'2013-08-28 00:00:00','2013-08-28 00:00:00'),(1390,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1391,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1392,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(3226,'monitor',36,'2014-12-04 00:00:00','2014-12-04 00:00:00'),(3228,'tuning | event',36,'2014-12-04 00:00:00','2014-12-04 00:00:00'),(3229,'error',36,'2014-12-10 00:00:00','2014-12-10 00:00:00'),(1395,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1396,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1397,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1398,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1399,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1400,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1401,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1403,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1404,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1405,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1406,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1407,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1408,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1409,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1410,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1411,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1413,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1414,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1415,'view',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1416,'sqlplus',36,'2013-08-30 00:00:00','2013-08-30 00:00:00'),(1420,'view',36,'2013-09-05 00:00:00','2013-09-05 00:00:00'),(1421,'view',36,'2013-09-05 00:00:00','2013-09-05 00:00:00'),(1422,'tuning | sql',36,'2013-09-05 00:00:00','2013-09-05 00:00:00'),(1423,'view',36,'2013-09-05 00:00:00','2013-09-05 00:00:00'),(1424,'view',36,'2013-09-05 00:00:00','2013-09-05 00:00:00'),(1387,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1388,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1389,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1393,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1394,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1402,'sqlplus',36,'2013-08-29 00:00:00','2013-08-29 00:00:00'),(1427,'tuning | io',36,'2013-09-07 00:00:00','2013-09-07 00:00:00'),(1428,'tuning | sql',36,'2013-09-07 00:00:00','2013-09-07 00:00:00'),(1429,'tuning | sql',36,'2013-09-08 00:00:00','2013-09-08 00:00:00'),(1430,'structure storage',36,'2013-09-08 00:00:00','2013-09-08 00:00:00'),(1431,'structure storage',36,'2013-09-08 00:00:00','2013-09-08 00:00:00'),(1432,'structure storage',36,'2013-09-08 00:00:00','2013-09-08 00:00:00'),(1433,'ha | asm',36,'2013-09-08 00:00:00','2013-09-08 00:00:00'),(1479,'ha | asm',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1435,'ha | asm',36,'2013-09-08 00:00:00','2013-09-08 00:00:00'),(1436,'tuning | sql',36,'2013-09-09 00:00:00','2013-09-09 00:00:00'),(1438,'schema object',36,'2013-09-09 00:00:00','2013-09-09 00:00:00'),(1441,'tuning | instance',36,'2013-09-09 00:00:00','2013-09-09 00:00:00'),(1458,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1463,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1465,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1468,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1466,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1454,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1455,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1456,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1457,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1467,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1469,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1471,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1473,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1474,'instance',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1475,'structure storage',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1437,'schema object',36,'2013-09-09 00:00:00','2013-09-09 00:00:00'),(1440,'tuning | sql',36,'2013-09-09 00:00:00','2013-09-09 00:00:00'),(1476,'structure storage',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1477,'structure storage',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1478,'structure storage',36,'2013-09-10 00:00:00','2013-09-10 00:00:00'),(1481,'integrity',36,'2013-09-11 00:00:00','2013-09-11 00:00:00'),(2112,'tuning | memory',36,'2014-03-28 00:00:00','2014-03-28 00:00:00'),(1287,'parameter',36,'2013-08-20 00:00:00','2013-08-20 00:00:00'),(1290,'parameter',36,'2013-08-20 00:00:00','2013-08-20 00:00:00'),(1297,'structure storage',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1310,'view',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1314,'view',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1315,'view',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1316,'ha | rac',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1320,'ha | rac',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(2113,'tuning | memory',36,'2014-03-28 00:00:00','2014-03-28 00:00:00'),(1326,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1327,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1328,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1329,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1288,'database',36,'2013-08-20 00:00:00','2013-08-20 00:00:00'),(1289,'tuning | event',36,'2013-08-20 00:00:00','2013-08-20 00:00:00'),(1294,'ha | rac',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1324,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1325,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1330,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1331,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1332,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1333,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1334,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1335,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1286,'view',36,'2013-08-20 00:00:00','2013-08-20 00:00:00'),(1291,'tuning | event',36,'2013-08-20 00:00:00','2013-08-20 00:00:00'),(1293,'view',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1300,'ha | rac',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1301,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1306,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1307,'view',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1308,'view',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1309,'view',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1317,'ha | rac',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1318,'parameter',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1336,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1337,'parameter',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1338,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1339,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1340,'tuning | memory',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1341,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1342,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1319,'instance',36,'2013-08-21 00:00:00','2013-08-21 00:00:00'),(1343,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1344,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1355,'ha | asm',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1356,'ha | asm',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1357,'ha | asm',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1358,'ha | asm',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1359,'ha | asm',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1360,'ha | asm',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1361,'ha | asm',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(2114,'tuning | memory',36,'2014-03-28 00:00:00','2014-03-28 00:00:00'),(2130,'tuning | sql',36,'2014-03-30 00:00:00','2014-03-30 00:00:00'),(1364,'instance',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(2131,'sqlplus',36,'2014-03-30 00:00:00','2014-03-30 00:00:00'),(1345,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1347,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1348,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1349,'ha | asm',36,'2013-08-22 00:00:00','2013-08-22 00:00:00'),(1351,'ha | asm',36,'2013-08-23 00:00:00','2013-08-23 00:00:00'),(1352,'ha | asm',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1353,'structure storage',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(1354,'ha | asm',36,'2013-08-24 00:00:00','2013-08-24 00:00:00'),(2260,'sql',36,'2014-04-16 00:00:00','2014-04-16 00:00:00'),(2302,'database',36,'2014-04-21 00:00:00','2014-04-21 00:00:00'),(2336,'schema object',36,'2014-04-24 00:00:00','2014-04-24 00:00:00'),(2342,'scheduler',36,'2014-04-24 00:00:00','2014-04-24 00:00:00'),(2341,'scheduler',36,'2014-04-24 00:00:00','2014-04-24 00:00:00'),(2343,'schema object',36,'2014-04-24 00:00:00','2014-04-24 00:00:00'),(2344,'scheduler',36,'2014-04-24 00:00:00','2014-04-24 00:00:00'),(2349,'scheduler',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2350,'scheduler',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2355,'user/privilege',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2356,'user/privilege',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2357,'user/privilege',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2358,'user/privilege',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2359,'user/privilege',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2360,'user/privilege',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2361,'user/privilege',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2362,'user/privilege',36,'2014-04-25 00:00:00','2014-04-25 00:00:00'),(2363,'tuning | tool',36,'2014-04-26 00:00:00','2014-04-26 00:00:00'),(2364,'tuning | tool',36,'2014-04-26 00:00:00','2014-04-26 00:00:00'),(2365,'scheduler',36,'2014-04-26 00:00:00','2014-04-26 00:00:00'),(2368,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2378,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2367,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2369,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2370,'structure storage',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2379,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2381,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2385,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2386,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2388,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2389,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2392,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2395,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2398,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2399,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2400,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2401,'tuning | tool',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2402,'ha | asm',36,'2014-04-27 00:00:00','2014-04-27 00:00:00'),(2405,'tuning | sql',36,'2014-04-27 00:00:00','2014-04-27 00:00:00');
/*!40000 ALTER TABLE `tmp` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-04-08  0:18:08
